Multiple execution of SQLite: 
Query: 0: 
CREATE TABLE v0 ( c1, c2 INTEGER UNIQUE ON CONFLICT FAIL, c3, PRIMARY KEY ( c3 ) ON CONFLICT REPLACE ) WITHOUT ROWID; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c3 ); 
CREATE TEMP TRIGGER tri1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = c3 || c3 WHERE c2 = c3 || c3; END; 
CREATE INDEX i6 ON v0 ( c2 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE TABLE v8 ( c9 REFERENCES t1 DEFAULT 127 DEFAULT 127, c10 INTEGER PRIMARY KEY, c11 BLOB, FOREIGN KEY ( c10 ) REFERENCES t2 ); 
CREATE TABLE v12 ( c13, c14, c15, c16, PRIMARY KEY ( c13, c16 ) ) WITHOUT ROWID; 
CREATE INDEX i17 ON v12 ( c16 ); 
INSERT INTO v8 VALUES ( 127, 127, 127, 127 ); 
ALTER TABLE v0 DROP COLUMN c1; 
SELECT 'BEGIN VERI 0'; 
WITH RECURSIVE v18 ( c20 ) AS ( SELECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT * FROM v18 AS a19 ORDER BY 0; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
WITH v21 AS ( SELECT 127 y ORDER BY 127 ) SELECT * FROM v21 AS a22 WHERE c13 = c13 > 127 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a23.c14, a23.c16, a23.c13 FROM v12 AS a23 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE ( c11 IS 127 ) BETWEEN 10 AND 127 ORDER BY 18446744073709518848; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v8 AS a26 ORDER BY 10; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v12 AS a27 ORDER BY max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT count ( ( NOT ( a28.c1 IS NULL ) ) AND ( NOT ( a28.c2 IS NULL ) ) ) FROM v0 AS a28 ORDER BY 100; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v8 AS a29 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a30.c15, count ( ( NOT ( a30.c13 IS NULL ) ) AND ( NOT ( a30.c13 IS NULL ) ) ) FROM v12 AS a30 WHERE ( CASE WHEN a30.c13 != '-2' THEN 127 ELSE 10 END ) GROUP BY 18446744073709518848 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a31.c10, count ( a31.c9 ) FROM v8 AS a31 ORDER BY 127; 
SELECT 'END VERI 0'; 

Result string: 
Parse error near line 10: table v8 has 3 columns but 4 values were supplied
Runtime error near line 11: error in index i7 after drop column: no such column: c1
BEGIN VERI 0
Parse error near line 13: no such column: c20
  LECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT 
                                      error here ---^
END VERI 0
BEGIN VERI 0
Parse error near line 16: 1st ORDER BY term out of range - should be between 1 and 1
END VERI 0
BEGIN VERI 0
Parse error near line 19: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 22: wrong number of arguments to function hex()
  WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE (
                       ^--- error here
END VERI 0
BEGIN VERI 0
Parse error near line 25: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 28: misuse of aggregate: avg()
  Y max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 
                                      error here ---^
END VERI 0
BEGIN VERI 0
Parse error near line 31: 1st ORDER BY term out of range - should be between 1 and 1
END VERI 0
BEGIN VERI 0
Parse error near line 34: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 37: 1st ORDER BY term out of range - should be between 1 and 2
END VERI 0
BEGIN VERI 0
Parse error near line 40: 1st ORDER BY term out of range - should be between 1 and 2
END VERI 0

Query: 1: 
CREATE TABLE v0 ( c1, c2 INTEGER UNIQUE ON CONFLICT FAIL, c3, PRIMARY KEY ( c3 ) ON CONFLICT REPLACE ) WITHOUT ROWID; 
; 
; 
CREATE TEMP TRIGGER tri1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = c3 || c3 WHERE c2 = c3 || c3; END; 
; 
; 
CREATE TABLE v8 ( c9 REFERENCES t1 DEFAULT 127 DEFAULT 127, c10 INTEGER PRIMARY KEY, c11 BLOB, FOREIGN KEY ( c10 ) REFERENCES t2 ); 
CREATE TABLE v12 ( c13, c14, c15, c16, PRIMARY KEY ( c13, c16 ) ) WITHOUT ROWID; 
; 
INSERT INTO v8 VALUES ( 127, 127, 127, 127 ); 
ALTER TABLE v0 DROP COLUMN c1; 
SELECT 'BEGIN VERI 0'; 
WITH RECURSIVE v18 ( c20 ) AS ( SELECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT * FROM v18 AS a19 ORDER BY 0; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
WITH v21 AS ( SELECT 127 y ORDER BY 127 ) SELECT * FROM v21 AS a22 WHERE c13 = c13 > 127 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a23.c14, a23.c16, a23.c13 FROM v12 AS a23 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE ( c11 IS 127 ) BETWEEN 10 AND 127 ORDER BY 18446744073709518848; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v8 AS a26 ORDER BY 10; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v12 AS a27 ORDER BY max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT count ( ( NOT ( a28.c1 IS NULL ) ) AND ( NOT ( a28.c2 IS NULL ) ) ) FROM v0 AS a28 ORDER BY 100; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT * FROM v8 AS a29 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a30.c15, count ( ( NOT ( a30.c13 IS NULL ) ) AND ( NOT ( a30.c13 IS NULL ) ) ) FROM v12 AS a30 WHERE ( CASE WHEN a30.c13 != '-2' THEN 127 ELSE 10 END ) GROUP BY 18446744073709518848 ORDER BY 127; 
SELECT 'END VERI 0'; 
SELECT 'BEGIN VERI 0'; 
SELECT a31.c10, count ( a31.c9 ) FROM v8 AS a31 ORDER BY 127; 
SELECT 'END VERI 0'; 

Result string: 
Parse error near line 10: table v8 has 3 columns but 4 values were supplied
BEGIN VERI 0
Parse error near line 13: no such column: c20
  LECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT 
                                      error here ---^
END VERI 0
BEGIN VERI 0
Parse error near line 16: 1st ORDER BY term out of range - should be between 1 and 1
END VERI 0
BEGIN VERI 0
Parse error near line 19: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 22: wrong number of arguments to function hex()
  WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE (
                       ^--- error here
END VERI 0
BEGIN VERI 0
Parse error near line 25: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 28: misuse of aggregate: avg()
  Y max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 
                                      error here ---^
END VERI 0
BEGIN VERI 0
Parse error near line 31: no such column: a28.c1
  SELECT count ( ( NOT ( a28.c1 IS NULL ) ) AND ( NOT ( a28.c2 IS NULL ) ) ) FRO
                         ^--- error here
END VERI 0
BEGIN VERI 0
Parse error near line 34: 1st ORDER BY term out of range - should be between 1 and 3
END VERI 0
BEGIN VERI 0
Parse error near line 37: 1st ORDER BY term out of range - should be between 1 and 2
END VERI 0
BEGIN VERI 0
Parse error near line 40: 1st ORDER BY term out of range - should be between 1 and 2
END VERI 0


Final_res: 0
Detailed result: 


Result NUM: 0 
RESULT FLAGS: 1
Str: 
Parse error near line 13: no such column: c20
  LECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT 
                                      error here ---^
 
INT: 2 
Str: 
Parse error near line 13: no such column: c20
  LECT max ( c8 ( 10, ( c20 + 10 ), c20 != 'x' ) || c20 ) ORDER BY 127 ) SELECT 
                                      error here ---^
 
INT: 2 


Result NUM: 1 
RESULT FLAGS: 1
Str: 
Parse error near line 16: 1st ORDER BY term out of range - should be between 1 and 1
 
INT: 0 
Str: 
Parse error near line 16: 1st ORDER BY term out of range - should be between 1 and 1
 
INT: 0 


Result NUM: 2 
RESULT FLAGS: 1
Str: 
Parse error near line 19: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 
Str: 
Parse error near line 19: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 


Result NUM: 3 
RESULT FLAGS: 1
Str: 
Parse error near line 22: wrong number of arguments to function hex()
  WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE (
                       ^--- error here
 
INT: 2 
Str: 
Parse error near line 22: wrong number of arguments to function hex()
  WITH v24 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT 127 FROM v24 AS a25 WHERE (
                       ^--- error here
 
INT: 2 


Result NUM: 4 
RESULT FLAGS: 1
Str: 
Parse error near line 25: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 
Str: 
Parse error near line 25: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 


Result NUM: 5 
RESULT FLAGS: 1
Str: 
Parse error near line 28: misuse of aggregate: avg()
  Y max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 
                                      error here ---^
 
INT: 2 
Str: 
Parse error near line 28: misuse of aggregate: avg()
  Y max ( + 127, 'v1', 'v1' ) + 127, min ( a27.c13, avg ( a27.c16 ) ) + NULL >= 
                                      error here ---^
 
INT: 2 


Result NUM: 6 
RESULT FLAGS: 0
Str: 
Parse error near line 31: 1st ORDER BY term out of range - should be between 1 and 1
 
INT: 0 
Str: 
Parse error near line 31: no such column: a28.c1
  SELECT count ( ( NOT ( a28.c1 IS NULL ) ) AND ( NOT ( a28.c2 IS NULL ) ) ) FRO
                         ^--- error here
 
INT: 2 


Result NUM: 7 
RESULT FLAGS: 1
Str: 
Parse error near line 34: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 
Str: 
Parse error near line 34: 1st ORDER BY term out of range - should be between 1 and 3
 
INT: 0 


Result NUM: 8 
RESULT FLAGS: 1
Str: 
Parse error near line 37: 1st ORDER BY term out of range - should be between 1 and 2
 
INT: 0 
Str: 
Parse error near line 37: 1st ORDER BY term out of range - should be between 1 and 2
 
INT: 0 


Result NUM: 9 
RESULT FLAGS: 1
Str: 
Parse error near line 40: 1st ORDER BY term out of range - should be between 1 and 2
 
INT: 0 
Str: 
Parse error near line 40: 1st ORDER BY term out of range - should be between 1 and 2
 
INT: 0 
Compare_result_int: 
0



