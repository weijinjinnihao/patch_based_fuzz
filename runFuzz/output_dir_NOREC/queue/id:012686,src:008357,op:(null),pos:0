CREATE TABLE v0 ( c1 ); 
CREATE TABLE v2 ( c3 ); 
CREATE TRIGGER r1 AFTER INSERT ON v2 BEGIN UPDATE v2 SET ( c3 ) = ( EXISTS ( SELECT 16 WHERE ( SELECT c1, ( + c3 ) y, ( + c3 ) y, ( + c1 ) y, sum ( c3 ) AS y, CASE c1 WHEN 16 THEN 8 WHEN 16 THEN 16 WHEN 18446744073709518848 THEN 'wvu' END, 'v0' FROM v2 AS a4 LEFT JOIN v0 AS a5 ON c1 = c1 WHERE ( CASE WHEN c1 != 'v1' THEN 18446744073709518848 ELSE 0 END ) ORDER BY 100 ) ORDER BY 16 ) ); END; 
ALTER TABLE v0 RENAME TO v6; 
SELECT COUNT ( * ) FROM v2 AS a7 WHERE a7.c3 ORDER BY - hex ( 18446744073709518848 NOT NULL ); 
SELECT COUNT ( * ) FROM v6 AS a8 WHERE a8.c1 ORDER BY 16; 
SELECT COUNT ( * ) FROM v6 AS a9 WHERE a9.c1 ORDER BY 1; 
SELECT COUNT ( * ) FROM v6 AS a10 WHERE y ( ( 16, 18446744073709551615 ) ) % ( SELECT COUNT ( * ) FROM v2 AS a11 WHERE a10.c1 || 16 NOT NULL NOT NULL + 100 ORDER BY 16 ) >= 16 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v6 AS a12 WHERE ( ( a12.c1 + 18446744073709518848 ) % 16 || 18446744073709551615 ) == 8 NOT NULL ORDER BY 255; 
SELECT COUNT ( * ) FROM v6 AS a13 WHERE a13.c1 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v6 AS a14 NATURAL JOIN v6 AS a15 WHERE a14.c1 ORDER BY 18446744073709518848; 
WITH RECURSIVE v16 ( c18 ) AS ( SELECT ( SELECT min ( c18 ) OVER ( ORDER BY c18 < ( ( 18446744073709518848, 16 ) ) ) WHERE ( c18 || c18 || c18 ) != 'ccc' ORDER BY 18446744073709551488 ) FROM v16 AS a19 GROUP BY c18 ORDER BY 100 ) SELECT COUNT ( * ) FROM v16 AS a17 WHERE c18 ORDER BY 8; 
SELECT COUNT ( * ) FROM v6 AS a20 WHERE - ( SELECT COUNT ( * ) FROM v6 AS a21 WHERE a21.c1 || 16 NOT NULL NOT NULL + a21.c1 = a21.c1 || a20.c1 ORDER BY 18446744073709551615 ) % 18446744073709551615 ORDER BY 0; 
SELECT COUNT ( * ) FROM v6 AS a22 WHERE ( ( 18446744073709551488 || hex ( hex ( 255 ) ), 'Al' ) % 8 ) == 16 ORDER BY 8; 
