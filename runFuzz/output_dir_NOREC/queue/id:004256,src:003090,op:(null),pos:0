CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
INSERT INTO v0 SELECT CASE WHEN c1 % 18446744073709551488 != 18446744073709551488 THEN c1 END, c3, c1 FROM v0 AS a4 WHERE c2 <= 18446744073709551488 ORDER BY 18446744073709551488; 
INSERT INTO v0 VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, 18446744073709551615, 18446744073709551488 ), ( 18446744073709551488, 18446744073709551615, 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c2 = c1; END; 
ALTER TABLE v0 RENAME TO v5; 
UPDATE v5 SET c3 = 'x' WHERE c3 = 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a6 WHERE a6.c1 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a7, v5 AS a8 NATURAL JOIN v5 AS a9 WHERE a8.c2 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a10 WHERE a10.c2 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a11 WHERE a11.c1 ORDER BY a11.c3, a11.c3, a11.c1; 
SELECT COUNT ( * ) FROM v5 AS a12, v5 AS a13 NATURAL JOIN v5 AS a14 WHERE a13.c1 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a15 WHERE a15.c2 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a16, v5 AS a17 WHERE a16.c2 ORDER BY 0; 
WITH v18 AS ( SELECT COUNT ( * ) FROM v18 AS a20 WHERE c3 ORDER BY 8 - ( c2 + c1 ) ) SELECT COUNT ( * ) FROM v18 AS a19 WHERE c3 ORDER BY 0; 
WITH RECURSIVE v21 ( c23 ) AS ( SELECT c2 + 8 FROM v21 AS a24 WHERE c23 < 8 ORDER BY 18446744073709551488 ) SELECT COUNT ( * ) FROM v21 AS a22 WHERE c2 ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a25, v5 AS a26 WHERE a26.c3 ORDER BY 18446744073709551488; 
