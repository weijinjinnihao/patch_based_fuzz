WITH v0 AS ( SELECT 0 y ORDER BY 0 ) INSERT INTO v0 VALUES ( 0, 'x', 'v1' ); 
CREATE VIRTUAL TABLE v1 USING rtree ( c2, c3, c4 ); 
UPDATE v1 SET c4 = ( SELECT c2 WHERE c2 NOT NULL ORDER BY 18446744073709518848 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v1 BEGIN DELETE FROM v1 WHERE ( ( ( 10, 18446744073709518848 ) ) % 18446744073709551488 ) == 0; END; 
ALTER TABLE v1 RENAME TO v5; 
UPDATE v5 SET c2 = 'v0' WHERE c2 = 18446744073709518848; 
SELECT COUNT ( * ) FROM v5 AS a6 NATURAL JOIN v5 AS a7 WHERE a7.c3 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a8 WHERE a8.c4 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v5 AS a9, v5 AS a10, v5 AS a11 WHERE a10.c2 ORDER BY 4294967295; 
SELECT COUNT ( * ) FROM v5 AS a12 WHERE a12.c2 ORDER BY 0; 
SELECT COUNT ( * ) AS y FROM v5 AS a13 WHERE a13.c2 ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a14 WHERE ( - hex ( 4294967295 ) IS 0 ) ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a15 WHERE a15.c2 ORDER BY NOT NULL + 0 COLLATE hex; 
SELECT COUNT ( * ) FROM v5 AS a16 WHERE a16.c2 IS NOT NULL ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a17 AS y WHERE a17.c4 ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a18 WHERE a18.c4 ORDER BY 0; 
