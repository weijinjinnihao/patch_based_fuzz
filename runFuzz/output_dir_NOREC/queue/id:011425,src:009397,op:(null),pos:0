CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c2 UNIQUE ON CONFLICT IGNORE, c3 REAL UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
INSERT INTO v0 ( c1, c1, c3 ) VALUES ( 127, 127, 0 ), ( 2147483647, 18446744073709551488, 127 ) ON CONFLICT DO UPDATE SET c1 = c2, c3 = c1; 
INSERT INTO v0 ( c2, c1, c1 ) VALUES ( 0, 18446744071562067968, 18446744073709551488 ); 
INSERT INTO v0 ( c1, c2, c1 ) VALUES ( 0, 18446744073709551615, 18446744073709551488 ), ( 18446744073709551488, 2147483647, 127 ) ON CONFLICT ( c2 ) DO UPDATE SET c1 = c3, c3 = c1; 
CREATE TABLE IF NOT EXISTS v4 AS SELECT * FROM v0 AS a5, v0 AS a6, v0 AS a7 ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v0 AS a8 WHERE a8.c1 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a9 WHERE writable_schema ( * ) >= 127 ORDER BY 0; 
SELECT COUNT ( * ) FROM v4 AS a10 WHERE c11 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a12 WHERE hex ( 127 ) ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v4 AS a13 WHERE c3 < c3 IS NOT NULL ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v4 AS a14 WHERE ( c15 + 100 ) % 0 || 18446744073709551488 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a16 WHERE a16.c2 ORDER BY NOT ( CASE WHEN a16.c1 != 'v0' THEN 100 ELSE 127 END ); 
SELECT COUNT ( * ) FROM v0 AS a17, v4 AS a18 NATURAL JOIN v0 AS a19 NATURAL JOIN v4 AS a20 WHERE c2 ORDER BY 127; 
SELECT COUNT ( * ) FROM v4 AS a21, v0 AS a22 NATURAL JOIN v4 AS a23 WHERE a22.c3 ORDER BY 0; 
SELECT COUNT ( * ) FROM v4 AS a24 WHERE c1 ORDER BY max ( ) + 0, min ( c3, avg ( c25 ) ) + 0; 
