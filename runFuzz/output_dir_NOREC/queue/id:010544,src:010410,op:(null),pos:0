CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 SELECT * FROM v0 AS a7 ORDER BY 0 ON CONFLICT ( c1 ) DO UPDATE SET c2 = c1, c1 = y ( c2 ); 
CREATE TABLE v8 ( c9 INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, c10 VARCHAR(255), c11 TEXT REFERENCES artists ); 
BEGIN; 
CREATE TABLE v12 ( c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 REAL, c34, c35, c36, c37, c38, c39, c40, c41, FOREIGN KEY ( c28, c27, c17, c33, c24, c40, c21, c18, c41, c28, c41, c14 ) REFERENCES t4 ); 
CREATE VIRTUAL TABLE v42 USING rtree ( c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63 ); 
END; 
ALTER TABLE v3 RENAME TO v64; 
CREATE TABLE v65 ( c66 INTEGER PRIMARY KEY, c67 TEXT UNIQUE NOT NULL ); 
CREATE TABLE v68 ( c69 INTEGER DEFAULT x'ABCD' ); 
SELECT COUNT ( * ) FROM v64 AS a70, v42 AS a71 WHERE a71.c55 ORDER BY 0; 
SELECT COUNT ( * ) FROM v68 AS a72 WHERE a72.c69 IS NOT NULL ORDER BY 0; 
SELECT COUNT ( * ) FROM v42 AS a73 WHERE a73.c10 ORDER BY 0; 
SELECT COUNT ( * ) FROM v68 AS a74 WHERE a74.c69 ORDER BY 0 COLLATE binary, NOT NULL + 0 COLLATE hex; 
SELECT COUNT ( * ) FROM v64 AS a75 WHERE a75.c6 ORDER BY 0; 
SELECT COUNT ( * ) FROM v8 AS a76 WHERE a76.c10 ORDER BY 1; 
WITH v77 ( c79 ) AS ( SELECT * FROM v77 AS a80 JOIN v77 AS a81 USING ( c79 ) WHERE max ( c79 ) = ( c79 ) AND c79 = 16 ORDER BY 0 ) SELECT COUNT ( * ) FROM v77 AS a78 WHERE c79 ORDER BY 0; 
WITH v82 ( c84 ) AS ( SELECT 0 ORDER BY 0 ) SELECT COUNT ( * ) FROM v82 AS a83 WHERE c84 ORDER BY 0; 
WITH v65 ( c86 ) AS ( WITH v0 AS ( WITH v87 ( c89 ) AS ( SELECT * FROM v87 AS a90 JOIN v87 AS a91 USING ( c89 ) WHERE max ( v65.c66 ) = ( v65.c67 ) AND a85.c6 = 0 ORDER BY 0 ) SELECT c89, + v0.c1 AS y FROM v87 AS a88 GROUP BY a85.c2 ORDER BY 0 ) SELECT 127 ORDER BY 0 ) SELECT COUNT ( * ) FROM v64 AS a85 WHERE v65.c67 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v68 AS a92 WHERE a92.c69 ORDER BY a92.c69 COLLATE binary; 
