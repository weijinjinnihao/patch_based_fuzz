WITH v0 AS ( SELECT 127 y ORDER BY 127 ) INSERT INTO v0 VALUES ( 127, 'v1', 'x' ); 
CREATE VIRTUAL TABLE v1 USING rtree ( c2, c3, c4 ); 
INSERT OR ABORT INTO v1 SELECT c2, c2 FROM v1 AS a5 ORDER BY 18446744073709551488 COLLATE binary, 127 COLLATE hex; 
CREATE TRIGGER r1 AFTER UPDATE ON v1 BEGIN DELETE FROM v1 WHERE c4 = c4; END; 
UPDATE OR FAIL v1 SET c3 = NULL, c3 = c2, c4 = c4 WHERE ( ( 127 || hex ( hex ( 4294967295 ) ), 'v0' ) % 18446744073709551488 ) == 0; 
CREATE TABLE v6 AS SELECT * FROM v1 AS a7 GROUP BY c4 HAVING count ( * ) >= 127 ORDER BY 18446744073709551488; 
UPDATE v6 SET c2 = 'v1' WHERE c8 = 18446744073709551488; 
WITH v9 ( c11 ) AS ( WITH v12 ( c13 ) AS ( SELECT ( SELECT min ( c11 ) OVER ( ORDER BY c13 < ( ( 18446744073709551488, 127 ) ) ) WHERE ( c13 || c11 || c13 ) != 'v1' ORDER BY 18446744073709551488 ) FROM v12 AS a14 GROUP BY c13 ORDER BY 127 ) SELECT 127 ORDER BY 127 ) SELECT COUNT ( * ) FROM v9 AS a10 WHERE c11 ORDER BY 127; 
SELECT COUNT ( * ) FROM v1 AS a15 WHERE a15.c2 ORDER BY 0; 
SELECT COUNT ( * ) FROM v1 AS a16 WHERE ( a16.c4 || a16.c2 || a16.c2 ) != 'x' ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v6 AS a17 WHERE ( ( c18 + 127 ) % 18446744073709551488 ) != 127 ORDER BY 127; 
SELECT COUNT ( * ) FROM v1 AS a19 WHERE a19.c2 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v1 AS a20 WHERE a20.c2 ORDER BY 127; 
SELECT COUNT ( * ) FROM v6 AS a21, v6 AS a22 NATURAL JOIN v6 AS a23 WHERE c2 ORDER BY 127; 
SELECT COUNT ( * ) FROM v1 AS a24 WHERE a24.c3 + 18446744073709551488 ORDER BY 127; 
SELECT COUNT ( * ) FROM v6 AS a25 WHERE c4 ORDER BY 0; 
SELECT COUNT ( * ) FROM v6 AS a26 NATURAL JOIN v6 AS a27 WHERE c2 ORDER BY 127; 
