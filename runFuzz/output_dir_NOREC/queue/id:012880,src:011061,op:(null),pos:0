CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
INSERT INTO v0 SELECT CASE WHEN c1 % 0 != 0 THEN c1 END, c3, c3 FROM v0 AS a4 WHERE c1 <= 0 ORDER BY 18446744073709551615; 
INSERT INTO v0 VALUES ( 18446744073709551615, 0, 18446744073709551615 ), ( 0, 0, 18446744073709551615 ), ( 0, 0, 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c3; END; 
CREATE VIEW v5 AS SELECT * FROM v0 AS a6 WHERE ( ( 18446744073709551615, 18446744073709551615 ) ) % - hex ( 0 ) IS 64000 ORDER BY 18446744073709551615; 
UPDATE v5 SET c7 = 'v1' WHERE c8 = 0; 
SELECT COUNT ( * ) FROM v5 AS a9 WHERE c1 ORDER BY 0; 
WITH v5 ( c11 ) AS ( SELECT ( SELECT c1, count ( ( NOT ( c11 IS NULL ) ) AND ( NOT ( c14 IS NULL ) ) ) WHERE ( c11 || c3 || c11 ) != 'three' ORDER BY 18446744073709551615 ) FROM v5 AS a12 GROUP BY c13 ORDER BY 18446744073709551615 ) SELECT COUNT ( * ) FROM v5 AS a10 WHERE c2 ORDER BY 0; 
SELECT COUNT ( * ) AS y FROM v5 AS a15 WHERE c16 ORDER BY 255; 
SELECT COUNT ( * ) FROM v0 AS a17 WHERE a17.c3 ORDER BY 0; 
SELECT COUNT ( * ) AS y FROM v5 AS a18 WHERE c1 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a19 WHERE a19.c1 ORDER BY ( CASE WHEN a19.c3 != 'x' THEN 18446744073709551615 ELSE 0 END ) % 18446744073709551615 || 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a20 WHERE a20.c1 = 'v0' ORDER BY 0; 
SELECT COUNT ( * ) FROM v5 AS a21 WHERE c2 = + c2 ORDER BY 255; 
SELECT COUNT ( * ) FROM v5 AS a22 AS y WHERE c23 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a24 WHERE a24.c1 ORDER BY 18446744071562067968; 
