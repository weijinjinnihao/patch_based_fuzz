CREATE TABLE IF NOT EXISTS v0 ( c1 REAL PRIMARY KEY, c2, c3 UNIQUE ); 
INSERT INTO v0 ( c1, c1, c2, c1, c1, c3, c3 ) VALUES ( 16, 16, 16, 16, 127 ); 
CREATE UNIQUE INDEX i4 ON v0 ( c2, c2, c3, c2, + c1, c2, c3, c3 IS c3 IS c2 NOT NULL COLLATE nocase, + c1, c1, c1, c3, NOT c3 || ( - hex ( 16 NOT NULL ) ) != c1 = c3 || c1, c3, c3, c3, c3, c3, c2, c1 ); 
WITH v0 ( c5 ) AS ( SELECT 16 ORDER BY 16 ) DELETE FROM v0; 
INSERT INTO v0 ( c2, c1, c1, c2, c2 ) VALUES ( 16, 127, 16, 100, 16 ); 
INSERT OR IGNORE INTO v0 ( c3, c1, c1, c1 ) VALUES ( 1207000000, 16, 1024, 16 ); 
INSERT OR REPLACE INTO v0 ( c3, c2, c2, c2, c3 ) VALUES ( 127, 16, NULL, 127, 8 ); 
INSERT OR ABORT INTO v0 ( c2, c1, c3, c1, c2 ) VALUES ( 16, 16, NULL, 16, 127 ); 
UPDATE v0 SET c2 = zeroblob ( 1024 ) WHERE c2 = 16; 
CREATE VIEW v6 AS SELECT c3, count ( * ), avg ( c3 ), max ( c1 + c1 * 18446744073709551488 ) FROM v0 AS a7 GROUP BY c2 ORDER BY max ( c3 + c3 * 8 ) + 16, min ( c1, avg ( c1 ) ) + 18446744073709551615; 
UPDATE v6 SET c2 = NULL, c2 = c2, c3 = c2; 
INSERT INTO v0 VALUES ( 16 NOT NULL, 127, 16 ), ( 16, 16, 16 ); 
WITH v0 AS ( SELECT COUNT ( * ) FROM v6 AS a8 WHERE c3 ORDER BY 0 - ( c3 + c3 ) ) INSERT OR IGNORE INTO v0 VALUES ( 8, 0, 127, 16 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615, 16 ); 
INSERT OR IGNORE INTO v0 ( c3, c1, c1, c3 ) VALUES ( 8, 127, 127, 16 ); 
SELECT COUNT ( * ) FROM v0 AS a9 WHERE a9.c1 ORDER BY 8; 
SELECT COUNT ( * ) FROM v6 AS a10, v0 AS a11 WHERE a11.c2 ORDER BY 16; 
SELECT COUNT ( * ) FROM v6 AS a12 WHERE y ( ( 16 ) == 16 ) ORDER BY 8; 
SELECT COUNT ( * ) AS y FROM v0 AS a13 WHERE a13.c3 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a14 WHERE a14.c2 ORDER BY 127; 
SELECT COUNT ( * ) FROM v6 AS a15 WHERE a15.c3 IS NOT NULL NOT NULL ORDER BY 9223372036854775807; 
SELECT COUNT ( * ) FROM v6 AS a16 WHERE ( 18446744073709551615, ( a16.c1 || a16.c1 || a16.c1 ), 255, 16 ) >= 16 ORDER BY 16; 
SELECT COUNT ( * ) FROM v0 AS a17 WHERE a17.c2 ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v6 AS a18 NATURAL JOIN v6 AS a19 NATURAL JOIN v6 AS a20 WHERE a18.c1 ORDER BY 16; 
SELECT COUNT ( * ) FROM v6 AS a21 AS y WHERE a21.c1 ORDER BY 16; 
