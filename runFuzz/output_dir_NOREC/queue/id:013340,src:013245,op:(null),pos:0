CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3, c4, c5, c6, c7, c8, c9 ); 
INSERT OR REPLACE INTO v0 ( c3, c4, c9, c7, c2 ) VALUES ( 0, 0, 0, 0, 0 ); 
DELETE FROM v0; 
INSERT INTO v0 ( c3, c7, c8, c2, c5 ) VALUES ( 0, 0, 0, 0, 0 ); 
INSERT OR REPLACE INTO v0 ( c3, c9, c3, c1 ) VALUES ( 0, 0, 0, 0 ); 
INSERT OR REPLACE INTO v0 ( c9, c9, c6, c7, c5 ) VALUES ( 18446744071562067968, 18446744073709551615, NULL, 0, 0 ); 
INSERT OR ABORT INTO v0 ( c4, c5, c8, c6, c3 ) VALUES ( 0, 0, NULL, 0, 0 ); 
UPDATE v0 SET c6 = NULL FROM v0 AS a10, v0 AS a11; 
UPDATE v0 SET c8 = c2 || c6, c2 = c3, c1 = c8; 
INSERT OR FAIL INTO v0 ( c5, c5 ) VALUES ( 100, 0 ) ON CONFLICT DO UPDATE SET c4 = c4, c2 = ( ( 0, 18446744073709551615 ) ) % ( SELECT COUNT ( * ) FROM v0 AS a12 WHERE c4 || 0 NOT NULL NOT NULL + 0 ORDER BY 0 ) >= 0; 
SELECT COUNT ( * ) FROM v0 AS a13 WHERE a13.c1 ORDER BY min ( x'68617265', 18446744073709551488 ) + 0; 
SELECT COUNT ( * ) AS y FROM v0 AS a14 WHERE a14.c8 ORDER BY 100; 
SELECT COUNT ( * ) FROM v0 AS a15 WHERE a15.c2 ORDER BY 2147483647; 
SELECT COUNT ( * ) FROM v0 AS a16 WHERE y ( a16.c3, a16.c8, a16.c8 ) ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a17 WHERE count ( a17.c2 ) != 100 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a18 WHERE a18.c6 ORDER BY 18446744073709551488; 
WITH v0 ( c20 ) AS ( SELECT count ( a19.c9 ) ORDER BY 2147483647 ) SELECT COUNT ( * ) FROM v0 AS a19 WHERE a19.c9 ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v0 AS a21, v0 AS a22, v0 AS a23 AS y WHERE a22.c7 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a24 WHERE ( SELECT * FROM v0 AS a25 WHERE ( ( 18446744071562067968, 0 ) ) % - hex ( 18446744073709551615 ) IS 0 ORDER BY 18446744071562067968 ) = 0 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a26, v0 AS a27, v0 AS a28 WHERE a28.c1 ORDER BY 0; 
