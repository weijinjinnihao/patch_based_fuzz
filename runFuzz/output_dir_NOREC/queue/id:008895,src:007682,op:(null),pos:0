CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE VIEW v2 AS SELECT * FROM v0 AS a3, v0 AS a4 ORDER BY 1; 
SELECT a7.c1, count ( a5.c1 ) FROM v0 AS a5 RIGHT JOIN v0 AS a6 ON a5.c1 = a6.c1 NATURAL JOIN v0 AS a7 ORDER BY 16; 
CREATE TABLE v8 ( c9 INT PRIMARY KEY, c10 REAL ); 
CREATE VIEW v11 AS SELECT c1, c1 FROM v0 AS a12 LEFT JOIN v0 AS a13 ON c1 = c1 ORDER BY 0; 
CREATE VIEW v14 AS SELECT c8, c8 FROM v11 AS a15, v11 AS a16 ORDER BY 16; 
CREATE VIEW v17 AS SELECT c10, c9 FROM v8 AS a18 LEFT JOIN v0 AS a19 ON c10 = c1 ORDER BY 0; 
CREATE VIEW v20 AS SELECT c1, c1 FROM v14 AS a21 RIGHT JOIN v0 AS a22 ON c1 = c1 ORDER BY 255; 
CREATE VIEW v23 AS SELECT c1 FROM v14 AS a24 WHERE c8 IS NOT NULL NOT NULL ORDER BY 255; 
INSERT INTO v20 ( c9 ) VALUES ( 0 ); 
INSERT INTO v11 ( c8, c8 ) VALUES ( 0, 0 ); 
INSERT INTO v8 ( c9 ) VALUES ( 255 ); 
INSERT INTO v2 ( c1, c1 ) VALUES ( 16, 16 ) ON CONFLICT DO UPDATE SET c1 = c1, c1 = c1; 
PRAGMA automatic_index = 0; 
SELECT COUNT ( * ) FROM v8 AS a25 WHERE ( 255 ) == 16 ORDER BY 0; 
WITH RECURSIVE v20 ( c27 ) AS ( SELECT ( SELECT min ( c27 ) OVER ( ORDER BY a26.c1 < ( ( 18446744073709551615, 0 ) ) ) WHERE ( c27 || a26.c1 || a28.c1 ) != 'v0' ORDER BY 255 ) FROM v14 AS a28 GROUP BY a26.c1 ORDER BY 255 ) SELECT COUNT ( * ) FROM v2 AS a26 WHERE v20.c1 ORDER BY 16; 
SELECT COUNT ( * ) FROM v11 AS a29, v14 AS a30, v2 AS a31 WHERE a30.c8 ORDER BY 255; 
SELECT COUNT ( * ) FROM v17 AS a32, v20 AS a33 WHERE a33.c8 ORDER BY 0; 
SELECT COUNT ( * ) FROM v20 AS a34 WHERE a34.c9 ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v20 AS a35 WHERE a35.c9 ORDER BY 16; 
SELECT COUNT ( * ) FROM v8 AS a36 WHERE a36.c9 ORDER BY NOT ( CASE WHEN a36.c10 != 'x1' THEN 18446744073709551615 ELSE 255 END ); 
SELECT COUNT ( * ) FROM v17 AS a37 WHERE a37.c8 ORDER BY 0; 
SELECT COUNT ( * ) FROM v8 AS a38 WHERE a38.c10 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v17 AS a39, v14 AS a40 NATURAL JOIN v23 AS a41 WHERE a40.c8 ORDER BY 16; 
