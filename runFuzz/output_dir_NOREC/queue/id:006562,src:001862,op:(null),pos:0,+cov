CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INT, c3 VARCHAR(1000) ); 
CREATE INDEX i4 ON v0 ( c3 ); 
INSERT INTO v0 ( c2, c1, c2 ) VALUES ( 65536, 65536, 'amx' ) ON CONFLICT ( c2 ) DO UPDATE SET c3 = c2, c1 = c1; 
ANALYZE; 
UPDATE v0 SET c2 = 'v0' WHERE c3 = 'm'; 
ANALYZE v0; 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8, c9, c10, c11, c12 ); 
CREATE TABLE v13 ( c14 INT, c15 TEXT, c16 BLOB, c17 REAL ); 
CREATE INDEX i18 ON v0 ( c2 ); 
SELECT COUNT ( * ) FROM v13 AS a19, v13 AS a20 NATURAL JOIN v5 AS a21 NATURAL JOIN v5 AS a22 WHERE a20.c15 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a23 WHERE a23.c3 ORDER BY 100; 
SELECT COUNT ( * ) FROM v13 AS a24 WHERE a24.c16 IS NOT ( CASE WHEN a24.c17 != 'y' THEN 18446744073709551615 ELSE 65536 END ) ORDER BY 18446744073709551488; 
WITH v13 ( c26 ) AS ( SELECT 65536 ORDER BY 18446744073709551615 ) SELECT COUNT ( * ) FROM v5 AS a25 WHERE v13.c16 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v0 AS a27 WHERE a27.c3 ORDER BY 10; 
SELECT COUNT ( * ) FROM v13 AS a28 WHERE a28.c17 != 'cba' ORDER BY 65536; 
SELECT COUNT ( * ) FROM v0 AS a29, v0 AS a30 NATURAL JOIN v5 AS a31 NATURAL JOIN v5 AS a32 WHERE a29.c3 ORDER BY 65536; 
SELECT COUNT ( * ) FROM v5 AS a33 WHERE a33.c9 ORDER BY 65536; 
SELECT COUNT ( * ) FROM v0 AS a34 WHERE NOCASE ( ) ORDER BY 100; 
SELECT COUNT ( * ) FROM v5 AS a35 WHERE ( - hex ( 2147483647 ) IS 10 ) != 0 ORDER BY 18446744073709551488; 
