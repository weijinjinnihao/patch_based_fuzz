WITH t0 AS ( SELECT 100 y ORDER BY 100 ) INSERT INTO t1 VALUES ( 100, 'v0', 'M' ); 
CREATE VIRTUAL TABLE v2 USING rtree ( c3, c4, c5 ); 
INSERT INTO v2 VALUES ( 0, 100, 100 ), ( 100, 0, 127 ), ( 127, 127, 127 ); 
BEGIN; 
DELETE FROM v2 WHERE c3 = c5; 
END; 
UPDATE v2 SET c5 = c4 * 9223372036854775807 FROM v2 AS a6, v2 AS a7 WHERE c5 < 127; 
UPDATE OR REPLACE v2 SET c3 = 127 FROM v2 AS a8 NATURAL JOIN v2 AS a9 NATURAL JOIN v2 AS a10; 
UPDATE v2 SET c4 = 'v1' FROM v2 AS a11, v2 AS a12, v2 AS a13 WHERE c4 = 18446744073709551488; 
SELECT COUNT ( * ) FROM v2 AS a14 NATURAL JOIN v2 AS a15 WHERE a15.c3 ORDER BY 127; 
SELECT COUNT ( * ) FROM v2 AS a16 WHERE a16.c5 ORDER BY 100; 
SELECT COUNT ( * ) FROM v2 AS a17 WHERE a17.c5 ORDER BY a17.c4 COLLATE NOCASE, a17.c3; 
SELECT COUNT ( * ) FROM v2 AS a18 WHERE a18.c4 ORDER BY 100 - ( a18.c4 + a18.c4 ); 
SELECT COUNT ( * ) FROM v2 AS a19 WHERE ( ( SELECT COUNT ( * ) FROM v2 AS a20 WHERE a19.c3 || 100 NOT NULL NOT NULL + 0 ORDER BY 18446744073709518848 ) % 100 ) == 100 ORDER BY 18446744071562067968; 
WITH v2 ( c22 ) AS ( SELECT 0 FROM v2 AS a23, v2 AS a24 ORDER BY 0 ) SELECT COUNT ( * ) FROM v2 AS a21 WHERE a21.c5 ORDER BY 0; 
SELECT COUNT ( * ) FROM v2 AS a25, v2 AS a26 WHERE a26.c5 ORDER BY 127; 
WITH v27 ( c29 ) AS ( SELECT 0 ORDER BY - hex ( 100 NOT NULL ) ) SELECT COUNT ( * ) FROM v27 AS a28 WHERE c29 ORDER BY 8; 
SELECT COUNT ( * ) FROM v2 AS a30 WHERE a30.c4 ORDER BY CASE WHEN a30.c5 != 'v0' THEN 2147483647 ELSE 18446744071562067968 END; 
SELECT COUNT ( * ) FROM v2 AS a31 WHERE a31.c3 ORDER BY 100; 
