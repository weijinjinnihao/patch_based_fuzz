CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT REPLACE DEFAULT 2147483647, c2 UNIQUE ON CONFLICT IGNORE, c3 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
INSERT INTO v0 ( c1, c2, c2 ) VALUES ( 100, 18446744073709551615, 100 ), ( 0, 2147483647, 2147483647 ); 
INSERT INTO v0 ( c3, c3, c2 ) VALUES ( 2147483647, 18446744073709551615, 2147483647 ) ON CONFLICT DO UPDATE SET c1 = c2, c3 = c2; 
INSERT INTO v0 ( c2, c1, c1 ) VALUES ( 2147483647, 2147483647, 2147483647 ), ( 0, 18446744073709551488, 2147483647 ); 
WITH v4 AS ( SELECT COUNT ( * ) FROM v4 AS a6 WHERE c3 ORDER BY 2147483647 - ( c3 + c2 ) ) SELECT COUNT ( * ) FROM v4 AS a5 WHERE c3 ORDER BY 2147483647; 
SELECT COUNT ( * ) FROM v0 AS a7 WHERE a7.c1 ORDER BY 2147483647 COLLATE binary, 100 COLLATE hex; 
SELECT COUNT ( * ) FROM v0 AS a8 WHERE * ORDER BY 18446744073709518848; 
WITH v9 AS ( SELECT 18446744073709551615 y ORDER BY 18446744073709551615 ) SELECT COUNT ( * ) FROM v9 AS a10 WHERE c1 ORDER BY 2147483647; 
SELECT COUNT ( * ) FROM v0 AS a11 WHERE ( NOT ( CASE WHEN a11.c1 != '_m_' THEN 18446744073709551615 ELSE 100 END ) % 18446744073709518848 || 0 ) ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a12, v0 AS a13 NATURAL JOIN v0 AS a14 NATURAL JOIN v0 AS a15 WHERE a15.c1 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v0 AS a16 WHERE a16.c1 ORDER BY min ( a16.c3, avg ( a16.c3 ) ) + 100; 
SELECT COUNT ( * ) FROM v0 AS a17 WHERE * ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a18 WHERE a18.c1 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a19 WHERE a19.c3 ORDER BY 100; 
