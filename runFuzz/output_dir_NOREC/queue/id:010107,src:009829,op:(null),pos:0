WITH v0 AS ( SELECT 100 y ORDER BY 100 ) INSERT INTO v0 VALUES ( 100, '10000 500', 'v1' ); 
CREATE VIRTUAL TABLE v1 USING rtree ( c2, c3, c4 ); 
INSERT INTO v1 VALUES ( 100, 10, 100 ), ( 100, 100, 255 ), ( 0, 100, 0 ); 
BEGIN; 
DELETE FROM v1 WHERE c4 = c4; 
END; 
UPDATE v1 SET c3 = NULL FROM v1 AS a5, v1 AS a6, v1 AS a7; 
UPDATE OR REPLACE v1 SET c3 = 10 FROM v1 AS a8 NATURAL JOIN v1 AS a9 NATURAL JOIN v1 AS a10; 
UPDATE v1 SET c3 = 'v0' FROM v1 AS a11, v1 AS a12, v1 AS a13 WHERE c4 = 10; 
SELECT COUNT ( * ) FROM v1 AS a14 NATURAL JOIN v1 AS a15 WHERE a14.c4 ORDER BY 100; 
SELECT COUNT ( * ) FROM v1 AS a16 WHERE a16.c2 ORDER BY 100; 
SELECT COUNT ( * ) FROM v1 AS a17 WHERE a17.c4 ORDER BY a17.c4 COLLATE NOCASE, a17.c3; 
SELECT COUNT ( * ) FROM v1 AS a18 WHERE a18.c2 ORDER BY 100 - ( a18.c2 + a18.c2 ); 
SELECT COUNT ( * ) FROM v1 AS a19 WHERE ( ( SELECT COUNT ( * ) FROM v1 AS a20 WHERE a20.c4 || TRUE NOT NULL NOT NULL + 10 ORDER BY 0 ) % 0 ) == 100 ORDER BY 127; 
WITH v1 ( c22 ) AS ( SELECT 127 FROM v1 AS a23, v1 AS a24 ORDER BY 100 ) SELECT COUNT ( * ) FROM v1 AS a21 WHERE a21.c4 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v1 AS a25, v1 AS a26 WHERE a25.c4 ORDER BY 100; 
WITH v27 ( c29 ) AS ( SELECT TRUE ORDER BY - hex ( 100 NOT NULL ) ) SELECT COUNT ( * ) FROM v27 AS a28 WHERE c29 ORDER BY 0; 
SELECT COUNT ( * ) FROM v1 AS a30 WHERE a30.c3 ORDER BY CASE WHEN a30.c4 != 'A' THEN 0 ELSE 0 END; 
SELECT COUNT ( * ) FROM v1 AS a31 WHERE a31.c2 ORDER BY 4294967295; 
