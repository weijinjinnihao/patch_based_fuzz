CREATE TABLE v0 ( c1 INTEGER DEFAULT 'eee', c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 8, 'v1' ), ( 8, 'v0' ), ( 8, 'again' ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN INSERT OR REPLACE INTO v0 ( c2 ) VALUES ( NULL ), ( NULL ) ON CONFLICT DO UPDATE SET c5 = ( ( 8, 8 ) ) % ( SELECT COUNT ( * ) FROM v3 AS a8 WHERE c6 || 127 NOT NULL NOT NULL + 8 ORDER BY 18446744073709551615 ) >= 0, c2 = c1, c2 = ( ( 4, y ( ( c2 || c2 || c2 ), c2 ) ) ) % ( SELECT COUNT ( * ) FROM v3 AS a7 WHERE c2 || 18446744073709518848 NOT NULL NOT NULL + 18446744073709551615 ORDER BY 8 ) >= 187; END; 
ALTER TABLE v3 RENAME TO v9; 
UPDATE v9 SET c6 = 'v1' WHERE c4 = 0; 
SELECT COUNT ( * ) FROM v0 AS a10, v9 AS a11 WHERE a11.c2 ORDER BY 10; 
SELECT COUNT ( * ) FROM v9 AS a12 WHERE a12.c4 ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a13, v9 AS a14 NATURAL JOIN v9 AS a15 WHERE a14.c5 ORDER BY 8; 
SELECT COUNT ( * ) FROM v9 AS a16 WHERE a16.c5 ORDER BY 127; 
SELECT COUNT ( * ) FROM v9 AS a17 WHERE a17.c1 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v9 AS a18 WHERE a18.c4 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a19 NATURAL JOIN v0 AS a20 NATURAL JOIN v9 AS a21 WHERE a20.c1 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a22 WHERE a22.c1 < a22.c1 IS NOT NULL ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v9 AS a23 WHERE a23.c4 ORDER BY 8; 
SELECT COUNT ( * ) FROM v9 AS a24 NATURAL JOIN v9 AS a25 WHERE a25.c6 ORDER BY 0; 
