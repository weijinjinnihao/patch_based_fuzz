CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 REFERENCES t1 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT OR REPLACE INTO v3 VALUES ( 18446744073709551488, 18446744073709551488, 255 ), ( 255, 255, 18446744073709551615 ), ( 18446744073709551488, 18446744073709551488, 255 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c1 = c2; END; 
CREATE VIEW v7 AS SELECT c6, c4 FROM v0 AS a8 LEFT JOIN v3 AS a9 ON c5 = c5 GROUP BY c1 HAVING count ( * ) >= 255 ORDER BY 18446744073709551488; 
INSERT OR IGNORE INTO v7 ( c1, c1, c5, c1 ) VALUES ( 18446744073709551488, 255, 255, 18446744073709551615 ) ON CONFLICT DO UPDATE SET c6 = c5, c5 = c1; 
SELECT COUNT ( * ) FROM v7 AS a10 WHERE x'68617265' ORDER BY 18446744073709551488; 
WITH v0 ( c12 ) AS ( WITH v13 ( c14 ) AS ( SELECT 255 ORDER BY 255 ) SELECT 255 ORDER BY 18446744073709551488 ) SELECT COUNT ( * ) FROM v0 AS a11 WHERE a11.c1 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v3 AS a15 WHERE a15.c1 ORDER BY 10; 
SELECT COUNT ( * ) FROM v3 AS a16 WHERE a16.c1 = ( ( a16.c4 + 18446744073709551488 ) % + a16.c6 ) != 18446744073709551488 ORDER BY 255; 
SELECT COUNT ( * ) FROM v3 AS a17 WHERE a17.c4 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v0 AS a18 WHERE a18.c1 ORDER BY max ( a18.c2 + a18.c2 * 18446744073709551488 ) + 18446744073709551488, min ( a18.c2, avg ( a18.c2 ) ) + 255; 
SELECT COUNT ( * ) FROM v0 AS a19, v0 AS a20 NATURAL JOIN v3 AS a21 WHERE a21.c1 ORDER BY 0; 
SELECT COUNT ( * ) FROM v7 AS a22 WHERE a22.c6 = count ( a22.c5 ) ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v3 AS a23 WHERE a23.c6 ORDER BY 1; 
WITH v24 AS ( SELECT COUNT ( * ) FROM v24 AS a26 WHERE c1 ORDER BY 0 - ( c1 + c2 ) ) SELECT COUNT ( * ) FROM v24 AS a25 WHERE c1 ORDER BY 0; 
