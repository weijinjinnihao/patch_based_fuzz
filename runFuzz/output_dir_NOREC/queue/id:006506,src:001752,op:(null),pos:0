CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c3 > c1 ), c3 INTEGER NOT NULL CHECK( c3 > c3 * 18446744071562067968 ) GENERATED ALWAYS AS( c1 ), c4 INTEGER NOT NULL CHECK( c2 BETWEEN c1 AND c4 ) ); 
INSERT OR IGNORE INTO v0 ( c1, c2, c1, c2 ) VALUES ( 0, 18446744071562067968, 18446744071562067968, 18446744073709551488 ); 
UPDATE v0 SET c1 = 0 WHERE c2 = 2147483647; 
UPDATE v0 SET c2 = c3 * 18446744071562067968 WHERE c1 = 2147483647; 
SELECT COUNT ( * ) FROM v0 AS a5, v0 AS a6 NATURAL JOIN v0 AS a7 NATURAL JOIN v0 AS a8 WHERE a6.c1 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a9 WHERE a9.c4 ORDER BY 0; 
WITH v0 AS ( SELECT 18446744071562067968 y ORDER BY 0 ) SELECT COUNT ( * ) FROM v0 AS a10 WHERE a10.c4 ORDER BY 8; 
SELECT COUNT ( * ) FROM v0 AS a11, v0 AS a12 WHERE a11.c3 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a13, v0 AS a14 WHERE a14.c3 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v0 AS a15 WHERE a15.c4 ORDER BY a15.c4 < a15.c3 IS NOT ( 18446744073709551488, 0 ); 
WITH RECURSIVE v0 ( c17 ) AS ( SELECT a16.c3, max ( a16.c4 || a16.c4 ) FROM v0 AS a18 WHERE ( a18.c4 || a16.c2 || c17 ) != 'v1' GROUP BY c17 ORDER BY 0 ) SELECT COUNT ( * ) FROM v0 AS a16 WHERE a16.c1 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a19 WHERE a19.c3 ORDER BY 0 COLLATE hex; 
SELECT COUNT ( * ) FROM v0 AS a20 WHERE a20.c1 ORDER BY 1; 
SELECT COUNT ( * ) FROM v0 AS a21 WHERE a21.c1 = a21.c1 || a21.c1 ORDER BY 2147483647; 
