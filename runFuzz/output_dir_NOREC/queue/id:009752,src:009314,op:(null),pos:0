CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3, c4, c5 ); 
INSERT INTO v0 ( c1, c5, c3 ) VALUES ( 18446744073709551615, 18446744073709551615, 18446744073709518848 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ); 
CREATE VIEW v6 AS SELECT c5, c2 FROM v0 AS a7 WHERE c3 LIKE 'C' ORDER BY 18446744073709551615; 
INSERT INTO v6 SELECT * FROM v6 AS a8, v0 AS a9 WHERE NOT min ( c1, c5 ) ORDER BY 18446744073709551488 ON CONFLICT ( c5 ) DO UPDATE SET c3 = c5, c2 = c2; 
INSERT INTO v0 ( c3, c3, c4 ) VALUES ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 18446744073709518848, 100, 18446744073709551488 ); 
SELECT COUNT ( * ) FROM v6 AS a10 WHERE a10.c2 ORDER BY *; 
SELECT COUNT ( * ) FROM v6 AS a11 WHERE a11.c2 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v6 AS a12, v6 AS a13 NATURAL JOIN v6 AS a14 NATURAL JOIN v0 AS a15 WHERE a13.c3 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v6 AS a16 WHERE a16.c3 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v6 AS a17 WHERE a17.c2 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a18 WHERE a18.c5 ORDER BY 18446744073709518848 COLLATE binary, NULL NOT NULL + 18446744073709551488 COLLATE hex; 
SELECT COUNT ( * ) FROM v6 AS a19 WHERE a19.c5 ORDER BY ( 18446744073709551615, ( a19.c3 || a19.c5 || a19.c2 ), 8, 18446744073709551488 ) >= 0; 
SELECT COUNT ( * ) FROM v6 AS a20, v6 AS a21 NATURAL JOIN v0 AS a22 NATURAL JOIN v6 AS a23 WHERE a22.c5 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v6 AS a24 WHERE a24.c5 ORDER BY 18446744073709551488; 
SELECT COUNT ( * ) FROM v0 AS a25 WHERE a25.c5 ORDER BY 18446744073709551488; 
