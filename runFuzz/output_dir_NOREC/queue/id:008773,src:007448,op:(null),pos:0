WITH t0 AS ( SELECT 127 ORDER BY 8 ) INSERT INTO t1 VALUES ( 127, 'v1', 'v0' ); 
CREATE VIRTUAL TABLE v2 USING rtree ( c3, c4, c5 ); 
INSERT INTO v2 VALUES ( 8, 127, 127 ), ( 127, 127, 18446744073709518848 ), ( 10, 127, 18446744073709518848 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v2 BEGIN DELETE FROM v2 WHERE ( ( c4 + 0 ) % + c5 ) != 8; END; 
UPDATE OR REPLACE v2 SET c5 = 18446744073709551615; 
UPDATE v2 SET c3 = 'x' WHERE c4 = 127; 
SELECT COUNT ( * ) FROM v2 AS a6 WHERE a6.c4 = a6.c3 || a6.c4 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v2 AS a7, v2 AS a8 NATURAL JOIN v2 AS a9 NATURAL JOIN v2 AS a10 WHERE a10.c5 ORDER BY 0; 
SELECT COUNT ( * ) FROM v2 AS a11 WHERE a11.c4 ORDER BY 8; 
SELECT COUNT ( * ) FROM v2 AS a12 WHERE ( 10, 127 ) == 127 ORDER BY 18446744073709551615; 
SELECT count ( * ) FROM v2 AS a13 WHERE a13.c3 ORDER BY 127; 
SELECT COUNT ( * ) FROM v2 AS a14 WHERE a14.c3 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v2 AS a15 WHERE a15.c3 ORDER BY a15.c4 IS a15.c4; 
SELECT COUNT ( * ) FROM v2 AS a16 WHERE a16.c3 ORDER BY 1; 
SELECT COUNT ( * ) FROM v2 AS a17 NATURAL JOIN v2 AS a18 WHERE a17.c5 ORDER BY 10; 
SELECT COUNT ( * ) FROM v2 AS a19 NATURAL JOIN v2 AS a20 NATURAL JOIN v2 AS a21 WHERE a20.c3 ORDER BY 127; 
