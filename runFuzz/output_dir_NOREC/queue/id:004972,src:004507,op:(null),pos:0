CREATE TABLE v0 ( c1 INTEGER DEFAULT 101, c2, c3, PRIMARY KEY ( c1 ), CHECK( c3 != c1 ), CHECK( c2 != c2 ) ) WITHOUT ROWID; 
CREATE INDEX i4 ON v0 ( c2 + c1 + c2 ) WHERE c1; 
CREATE TEMP TRIGGER tri1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = c2 || c2; END; 
CREATE TABLE v5 ( c6, c7, c8, c9, PRIMARY KEY ( c7, c6 ) ) WITHOUT ROWID; 
INSERT INTO v0 VALUES ( 18446744073709518848, 18446744073709518848, 18446744073709518848, 101 ); 
ALTER TABLE v0 DROP c3; 
SELECT COUNT ( * ) FROM v0 AS a10 WHERE ( 18446744073709518848 ) % 0 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v0 AS a11, v0 AS a12 NATURAL JOIN v0 AS a13 NATURAL JOIN v0 AS a14 WHERE a14.c1 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v0 AS a15 WHERE a15.c1 ORDER BY 1; 
SELECT COUNT ( * ) FROM v0 AS a16, v0 AS a17 NATURAL JOIN v5 AS a18 WHERE a17.c2 ORDER BY 101; 
SELECT COUNT ( * ) FROM v5 AS a19 WHERE a19.c6 IS a19.c9 > 101 = 18446744073709518848 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a20 WHERE a20.c2 ORDER BY 18446744073709551488 COLLATE binary; 
SELECT COUNT ( * ) FROM v5 AS a21 WHERE a21.c9 ORDER BY 8; 
SELECT COUNT ( * ) FROM v0 AS a22, v5 AS a23 NATURAL JOIN v5 AS a24 NATURAL JOIN v5 AS a25 WHERE a23.c9 ORDER BY 18446744073709518848; 
SELECT COUNT ( * ) FROM v5 AS a26 WHERE a26.c7 ORDER BY 0; 
WITH RECURSIVE v0 ( c28 ) AS ( SELECT a29.c3 + 0 FROM v0 AS a29 WHERE c28 < 101 ORDER BY 18446744073709518848 ) SELECT COUNT ( * ) FROM v5 AS a27 WHERE c28 ORDER BY 0; 
