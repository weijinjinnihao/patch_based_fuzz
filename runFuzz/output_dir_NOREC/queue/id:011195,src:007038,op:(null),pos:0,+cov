CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( c1 IS NOT ( CASE WHEN c1 != 'dummy' THEN 0 ELSE 123.000000 END ), 123.000000, 0 ), ( 0, 0, 18446744073709518848 ), ( 123.000000, 9223372036854775807, 123.000000 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN INSERT OR ABORT INTO v3 VALUES ( hex ( hex ( 123.000000 ) ), 18446744073709551488, 9223372036854775807 ), ( 0, 2147483647, 123.000000 ), ( 9223372036854775807, 0, 255 ); END; 
INSERT INTO v0 ( c2, c2, c2 ) VALUES ( 0, 'x', 8 ), ( 0, 'v1', NULL ); 
ALTER TABLE v0 RENAME TO v7; 
UPDATE v7 SET c2 = 'x' WHERE c2 = 0; 
SELECT COUNT ( * ) FROM v7 AS a8 WHERE a8.c1 ORDER BY 0; 
SELECT COUNT ( * ) FROM v7 AS a9 WHERE ( ( a9.c1 + 123.000000 ) % 654 || 2147483647 ) == 123.000000 ORDER BY 123.000000; 
SELECT COUNT ( * ) FROM v7 AS a10 WHERE a10.c1 ORDER BY 8; 
WITH v7 ( c12 ) AS ( WITH v7 AS ( WITH v7 ( c14 ) AS ( SELECT 123.000000 ORDER BY 127 ) SELECT ( ( SELECT COUNT ( * ) FROM v7 AS a15 WHERE c14 || 18446744073709551488 NOT NULL NOT NULL + 18446744073709551615 ORDER BY 18446744073709551488 ) % 123.000000 ) == 0, + a11.c2 AS y FROM v3 AS a13 GROUP BY a11.c2 ORDER BY 123.000000 ) SELECT 123.000000 ORDER BY 0 ) SELECT COUNT ( * ) FROM v7 AS a11 WHERE c12 ORDER BY 123.000000; 
SELECT COUNT ( * ) FROM v7 AS a16 WHERE a16.c1 ORDER BY 16 COLLATE binary, NOT NULL + 0 COLLATE hex; 
SELECT COUNT ( * ) FROM v3 AS a17 WHERE a17.c2 ORDER BY a17.c6 < a17.c5; 
SELECT COUNT ( * ) FROM v7 AS a18 WHERE a18.c1 ORDER BY 100; 
SELECT COUNT ( * ) FROM v7 AS a19 WHERE a19.c1 = ( ( a19.c2 + 0 ) % + a19.c1 ) != 18446744073709551488 ORDER BY 123.000000; 
SELECT COUNT ( * ) FROM v7 AS a20 WHERE a20.c1 ORDER BY 123.000000; 
WITH v7 ( c22 ) AS ( WITH v23 ( c26 ) AS ( SELECT count ( a21.c1 ) ORDER BY 18446744073709518848 ) SELECT 0 FROM v23 AS a24, v23 AS a25 ORDER BY 255 ) SELECT COUNT ( * ) FROM v7 AS a21 WHERE a21.c1 ORDER BY 127; 
