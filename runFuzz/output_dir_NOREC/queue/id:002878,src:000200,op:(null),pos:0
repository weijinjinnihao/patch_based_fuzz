CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE TABLE v2 ( c3 INT PRIMARY KEY, c4 REAL ); 
CREATE VIEW v5 AS SELECT c4, ( + c1 ) y, ( + c1 ) y, ( + c1 ) y, NOT EXISTS ( SELECT NULL FROM v0 AS a8 ORDER BY 0 ), CASE ( ( c1 + 0 ) % 0 || 0 ) == 0 WHEN 0 THEN 0 WHEN 18446744073709551615 THEN 0 WHEN 0 THEN 'v0' END, 'v1' FROM v2 AS a6 LEFT JOIN v0 AS a7 ON c1 = c1 ORDER BY 0; 
CREATE VIEW v9 AS SELECT c3, c3 FROM v5 AS a10 RIGHT JOIN v2 AS a11 ON y = c3 ORDER BY 0; 
CREATE VIEW v12 AS SELECT c1, c3 FROM v0 AS a13 LEFT JOIN v9 AS a14 ON c1 = c3 ORDER BY 0; 
CREATE VIEW v15 AS SELECT apr, apr FROM v2 AS a16 RIGHT JOIN v12 AS a17 ON apr = c3 ORDER BY 0; 
CREATE VIEW v18 AS SELECT c1, c3 FROM v9 AS a19 RIGHT JOIN v9 AS a20 ON c1 = c3 ORDER BY 9223372036854775807; 
INSERT INTO v15 ( id ) VALUES ( 18446744073709551615 ); 
INSERT INTO v5 ( y, c3 ) VALUES ( 0, 0 ); 
INSERT INTO v2 ( c4 ) VALUES ( 18446744073709551488 ); 
INSERT INTO v9 ( c1, c3 ) VALUES ( 9223372036854775807, 0 ); 
PRAGMA automatic_index = 2; 
SELECT COUNT ( * ) FROM v18 AS a21 WHERE a21.id ORDER BY 127; 
SELECT COUNT ( * ) FROM v9 AS a22, v0 AS a23 WHERE a22.c3 ORDER BY 0; 
SELECT COUNT ( * ) FROM v0 AS a24, v2 AS a25 WHERE a24.c1 ORDER BY 18446744073709551615; 
WITH RECURSIVE v12 ( c27 ) AS ( SELECT c27 + 16 FROM v15 AS a28 WHERE a26.c1 < 0 ORDER BY 0 ) SELECT COUNT ( * ) FROM v0 AS a26 WHERE c27 ORDER BY 0; 
WITH RECURSIVE v29 ( c31 ) AS ( SELECT c31, max ( c31 || c31 ) FROM v29 AS a32 WHERE ( c31 || c31 || c31 ) != 'd' GROUP BY c31 ORDER BY 100 ) SELECT COUNT ( * ) FROM v29 AS a30 WHERE c31 ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v9 AS a33, v12 AS a34 NATURAL JOIN v2 AS a35 WHERE a33.c3 ORDER BY 0; 
SELECT COUNT ( * ) FROM v18 AS a36 WHERE a36.y ORDER BY 0; 
WITH RECURSIVE v5 ( c38 ) AS ( SELECT a37.c38 + 18446744073709551488 FROM v18 AS a39 WHERE v5.c4 < 18446744073709551615 ORDER BY 0 ) SELECT COUNT ( * ) FROM v18 AS a37 WHERE v5.c3 ORDER BY 0; 
SELECT COUNT ( * ) FROM v9 AS a40 WHERE abs ( a40.c3 ) ORDER BY 18446744071562067968; 
SELECT COUNT ( * ) FROM v12 AS a41 WHERE count ( * ) >= 0 ORDER BY 0 - ( a41.c3 + a41.apr ); 
