CREATE TABLE v0 ( c1 UNIQUE ON CONFLICT FAIL, c2, c3 AS( c1 + c4 - c4 ) REFERENCES t0, c4 ); 
CREATE INDEX i5 ON v0 ( c3 ) WHERE c4 IS NOT NULL; 
CREATE INDEX i6 ON v0 ( c4 ) WHERE c3 > 10; 
CREATE INDEX i7 ON v0 ( c1, c2 ) WHERE c2 != 0; 
INSERT INTO v0 ( c3, c3, c3 ) VALUES ( 16, 10, 'v1' ) ON CONFLICT ( c2 ) DO UPDATE SET c3 = c3, c3 = y ( c4 ); 
INSERT INTO v0 ( c4, c1, c1 ) SELECT CASE WHEN c4 % 18446744073709518848 != 18446744073709518848 THEN c4 END, c2, c1 FROM v0 AS a8 WHERE c4 <= 10 ORDER BY 18446744073709551615; 
PRAGMA integrity_check; 
SELECT COUNT ( * ) FROM v0 AS a9, v0 AS a10 NATURAL JOIN v0 AS a11 WHERE a11.c2 ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a12 WHERE a12.c1 ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a13 WHERE a13.c2 ORDER BY a13.c2 COLLATE nocase; 
SELECT COUNT ( * ) FROM v0 AS a14 WHERE a14.c4 ORDER BY 4294967295; 
SELECT COUNT ( * ) FROM v0 AS a15 WHERE ( 10, 10 ) == 10 ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a16, v0 AS a17 NATURAL JOIN v0 AS a18 WHERE a16.c4 ORDER BY 10; 
SELECT COUNT ( * ) FROM v0 AS a19 WHERE a19.c4 = a19.c4 || a19.c1 ORDER BY 10; 
WITH RECURSIVE v20 ( c22 ) AS ( SELECT c22, max ( c22 || c22 ) FROM v20 AS a23 WHERE ( c22 || c22 || c22 ) != 'v1' GROUP BY c22 ORDER BY 18446744073709518848 ) SELECT COUNT ( * ) FROM v20 AS a21 WHERE c22 ORDER BY 18446744073709551615; 
WITH v24 AS ( SELECT 10 y ORDER BY 10 ) SELECT COUNT ( * ) FROM v24 AS a25 WHERE c1 ORDER BY 16; 
SELECT COUNT ( * ) FROM v0 AS a26, v0 AS a27 NATURAL JOIN v0 AS a28 WHERE a28.c2 ORDER BY 18446744073709551615; 
