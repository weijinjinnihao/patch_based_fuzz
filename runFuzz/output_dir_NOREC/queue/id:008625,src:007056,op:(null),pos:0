CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INT ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 0, 'x' ), ( 100, 'Z' ), ( c4 > 100 ); 
CREATE INDEX i7 ON v0 ( ( c1 || c2 || c1 ) != 'v0' ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c1 = c2; END; 
WITH RECURSIVE v0 ( c8 ) AS ( SELECT c2 + 0 FROM v3 AS a9 WHERE c2 < 4294967295 ORDER BY 18446744071562067968 ) UPDATE v0 SET c1 = 'v0' WHERE c1 = 100; 
UPDATE v0 SET c1 = 'B' WHERE c1 = 127; 
SELECT COUNT ( * ) FROM v3 AS a10, v0 AS a11 NATURAL JOIN v0 AS a12 NATURAL JOIN v3 AS a13 WHERE a13.c6 ORDER BY 127; 
SELECT COUNT ( * ) FROM v0 AS a14, v0 AS a15 NATURAL JOIN v0 AS a16 WHERE a16.c2 ORDER BY 100; 
SELECT COUNT ( * ) FROM v3 AS a17 WHERE a17.c5 ORDER BY 0; 
WITH v18 ( c20 ) AS ( SELECT c4, count ( ), c1 FROM v18 AS a21 LEFT JOIN v18 AS a22 ON c1 = c1 ORDER BY 0 ) SELECT COUNT ( * ) FROM v18 AS a19 WHERE c6 ORDER BY 100; 
SELECT COUNT ( * ) FROM v0 AS a23 NATURAL JOIN v3 AS a24 WHERE a23.c1 ORDER BY 100; 
SELECT COUNT ( * ) FROM v3 AS a25 WHERE a25.c20 ORDER BY count ( a25.c20 ) != 100; 
SELECT COUNT ( * ) FROM v3 AS a26 WHERE a26.c2 || 100 ORDER BY 100; 
WITH v0 ( c28 ) AS ( SELECT 127 WHERE ( ( c28 + 4294967295 ) % 5.500000 || 127 ) == 4294967295 ORDER BY 100 ) SELECT COUNT ( * ) FROM v3 AS a27 WHERE v0.c2 ORDER BY 18446744073709551615; 
SELECT COUNT ( * ) FROM v0 AS a29 NATURAL JOIN v3 AS a30 NATURAL JOIN v3 AS a31 WHERE a31.c20 ORDER BY 100; 
SELECT COUNT ( * ) FROM v3 AS a32 WHERE a32.c4 ORDER BY 1; 
