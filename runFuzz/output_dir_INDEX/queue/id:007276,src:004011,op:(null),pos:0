CREATE TABLE v0 ( c1 INT GENERATED ALWAYS, c2 TEXT, c3 TEXT, c4 INT, c5 TEXT, c6 ANY ); 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE TABLE v8 ( c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 AS( c34 + c12 - c28 ) REFERENCES t0, c49 ); 
CREATE INDEX i50 ON v0 ( c1 ); 
CREATE INDEX i51 ON v8 ( c39 ); 
CREATE INDEX i52 ON v0 ( c3 ); 
INSERT INTO v8 VALUES ( 16, 16, 16 ), ( 0, 16, 127 ); 
UPDATE v8 SET c26 = c25, c37 = c23; 
CREATE INDEX i53 ON v0 ( c3 ); 
INSERT OR FAIL INTO v8 VALUES ( 127, '%t2%' ), ( 127, 'v0' ), ( 16, 'v1' ); 
SELECT count ( a54.c6 ) FROM v0 AS a54 ORDER BY 16; 
SELECT a55.c4, a55.c4 FROM v0 AS a55 LEFT JOIN v8 AS a56 ON a56.c17 = ( ( hex ( 127 ) ) % 77 ) != 18446744073709551615 ORDER BY 16; 
SELECT * FROM v8 AS a57, v0 AS a58 NATURAL JOIN v8 AS a59 ORDER BY 16; 
SELECT * FROM v0 AS a60 GROUP BY a60.c3 HAVING automatic_index ( * ) >= 16 ORDER BY 127; 
SELECT * FROM v8 AS a61 GROUP BY 127 ORDER BY 16; 
SELECT a62.c6 FROM v0 AS a62 ORDER BY 16; 
SELECT * FROM v8 AS a63 ORDER BY ( a63.c14 + 127 ) % count ( a63.c40 ); 
SELECT * FROM v8 AS a64 WHERE 16 ORDER BY 127; 
SELECT * FROM v8 AS a65 ORDER BY 0; 
WITH RECURSIVE v66 ( c68 ) AS ( SELECT 18446744073709551615 ORDER BY 127 ) SELECT * FROM v66 AS a67 ORDER BY 18446744073709551615; 
