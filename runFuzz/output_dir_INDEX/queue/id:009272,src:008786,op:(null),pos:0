CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c4 > c2 ), c3 INTEGER NOT NULL CHECK( c1 > c1 * 18446744071562067968 ), c4 INTEGER NOT NULL ON CONFLICT FAIL CHECK( c1 BETWEEN NOT NULL AND c2 ) ); 
UPDATE v0 SET c3 = ( SELECT c4 FROM v0 AS a5, v0 AS a6 WHERE c1 = 'd' ORDER BY 18446744071562067968 ); 
CREATE TABLE v7 ( c8 INT NOT NULL, c9 INTEGER NOT NULL, c10 TEXT NOT NULL, c11 REAL NOT NULL, c12 BLOB NOT NULL ) STRICT; 
CREATE TABLE v13 ( c14 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c15 UNIQUE ON CONFLICT IGNORE, c16 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE INDEX i17 ON v13 ( c16 ); 
CREATE INDEX i18 ON v7 ( c10 ); 
PRAGMA quick_check = 10; 
CREATE TABLE v19 ( c20, c21, c22, c23, c24 ); 
INSERT INTO v13 ( c15, c14, c15, c15, c16 ) VALUES ( 18446744071562067968, 12, 'x', 127, x'b1' ), ( 18446744071562067968, 18446744071562067968, 'v1', 2147483647, x'b2b2b2' ); 
CREATE INDEX i25 ON v13 ( c14 ); 
CREATE INDEX i26 ON v19 ( c21 ); 
PRAGMA integrity_check; 
PRAGMA quick_check ( 't1' ); 
UPDATE v7 SET c10 = ( SELECT c8 FROM v7 AS a27 WHERE c12 = 'u' ORDER BY 127 ); 
CREATE INDEX i28 ON v13 ( c15 ); 
SELECT * FROM v7 AS a29 NATURAL JOIN v13 AS a30 ORDER BY 9223372036854775807; 
SELECT * FROM v7 AS a31 WHERE count ( * ) >= 18446744071562067968 = '%foo%' ORDER BY 0; 
SELECT * FROM v7 AS a32 ORDER BY 127; 
WITH v19 ( c34 ) AS ( SELECT c34 + ( SELECT max ( c34 ) FROM v0 AS a41 ORDER BY 0 ), c34 + ( SELECT c34 FROM v13 AS a40 ORDER BY 18446744071562067968 ), a35.c9 + ( SELECT max ( a37.c12 ) FROM v7 AS a39 ORDER BY 0 ) FROM v7 AS a35 ORDER BY 12 ) SELECT * FROM ( SELECT 0 FROM v19 AS a36, v7 AS a37 NATURAL JOIN v7 AS a38 ORDER BY 10 ) AS y, v13 AS a33 ON likely ( 18446744071562067968 OR 0 ) OR 0 ORDER BY ( ( c34 + 0 ) % 8 ) != 12; 
SELECT * FROM v0 AS a42 NATURAL JOIN v13 AS a43 ORDER BY 127; 
SELECT * FROM v19 AS a44 ORDER BY 12; 
SELECT count ( a45.c16 ) FROM v13 AS a45 ORDER BY 0; 
SELECT min ( a47.c9 ), min ( a46.c10 ), max ( a47.c9 ), max ( a46.c11 ), sum ( a47.c10 ), sum ( a47.c9 ), avg ( a46.c9 ), avg ( a47.c8 ) FROM v7 AS a46 NATURAL JOIN v7 AS a47 ORDER BY 18446744071562067968; 
SELECT a48.c15 FROM v13 AS a48 ORDER BY 2147483647; 
SELECT * FROM v7 AS a49 NATURAL JOIN v13 AS a50 ORDER BY 2147483647; 
