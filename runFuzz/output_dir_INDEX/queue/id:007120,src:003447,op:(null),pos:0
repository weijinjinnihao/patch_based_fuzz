SELECT hex ( ) y ORDER BY 1; 
CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
INSERT INTO v0 VALUES ( 18446744073709518848, 'v1' ), ( 18446744073709518848, 'amx' ), ( 18446744073709518848, 'v0' ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE INDEX i5 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 127, 18446744073709518848, 18446744073709518848 ), ( 0, 18446744073709551615, 18446744073709518848 ), ( 18446744073709518848, x'b1', 18446744073709518848 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c3 = c2; END; 
CREATE INDEX i6 ON v0 ( c3 ); 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE INDEX i8 ON v0 ( c3 ); 
ALTER TABLE v0 RENAME TO v9; 
UPDATE v9 SET c1 = 'd' WHERE c2 = 0; 
SELECT * FROM v9 AS a10 ORDER BY ( 18446744073709518848, count ( * ) ); 
SELECT * FROM v9 AS a11 ORDER BY a11.c1; 
SELECT * FROM v9 AS a12, v9 AS a13 NATURAL JOIN v9 AS a14 ORDER BY 18446744073709518848; 
SELECT a15.c1, count ( a15.c1 ) FROM v9 AS a15, v9 AS a16 WHERE a15.c1 = a15.c3 ORDER BY 127; 
SELECT * FROM v9 AS a17 ORDER BY 18446744073709518848; 
SELECT * FROM v9 AS a18, v9 AS a19 ORDER BY 18446744073709518848; 
SELECT * FROM v9 AS a20 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a21 ORDER BY 18446744073709518848; 
SELECT a22.c1 FROM v9 AS a22 ORDER BY 18446744073709518848; 
WITH v9 ( c23, c24, c25, c26, c27, c28 ) AS ( SELECT 18446744073709518848 y ORDER BY 18446744073709518848 ) SELECT 18446744073709518848 - ( v9.c23 + v9.c3 ) WHERE CASE WHEN c28 != 'v0' THEN 18446744073709518848 ELSE 0 END > 0 ORDER BY 18446744073709518848; 
