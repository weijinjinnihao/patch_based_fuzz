CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 4294967295, 'text' ), ( 0, 'v1' ), ( 5.2e6, 'x' ); 
CREATE INDEX i5 ON v0 ( c3 ); 
CREATE VIEW v6 AS SELECT ( ( 4294967295 IS - 4294967295 ) OR NOT ( 10 IS 0 OR ( c1 = 5.2e6 ) ) ) IS 18446744073709551615 FROM v0 AS a7 ORDER BY 4294967295; 
CREATE TRIGGER r1 AFTER UPDATE ON v6 BEGIN DELETE FROM v6 WHERE c1 = y; END; 
CREATE INDEX i8 ON v6 ( y ); 
CREATE INDEX i9 ON v6 ( y ); 
ALTER TABLE v0 RENAME TO v10; 
UPDATE v10 SET c1 = 'v0' WHERE c3 = 0; 
CREATE INDEX i11 ON v10 ( c1 ); 
SELECT a12.c3, a12.c1, a12.c3 FROM v10 AS a12 WHERE a12.c3 >= 'x' ORDER BY 0; 
WITH v6 AS ( SELECT ( SELECT min ( a13.y ) OVER ( ORDER BY 4294967295 ) ORDER BY 0 ) FROM v10 AS a14 GROUP BY a13.y ORDER BY 18446744071562067968 ) SELECT * FROM v6 AS a13 ORDER BY 4294967295; 
SELECT * FROM v6 AS a15 ORDER BY 1; 
SELECT * FROM v10 AS a16 NATURAL JOIN v10 AS a17 ORDER BY 0; 
SELECT * FROM v6 AS a18, v10 AS a19 NATURAL JOIN v10 AS a20 ORDER BY 18446744073709551488; 
WITH v21 AS ( SELECT 18446744073709551615 y ORDER BY 18446744073709518848 ) SELECT * FROM v21 AS a22 ORDER BY 4294967295; 
SELECT * FROM v10 AS a23, v6 AS a24 NATURAL JOIN v10 AS a25 ORDER BY 5.2e6; 
SELECT * FROM v10 AS a26 WHERE a26.c1 > a26.c3 % 10 ORDER BY 18446744073709551615; 
WITH v27 AS ( SELECT hex ( ) y ORDER BY 5.2e6 ) SELECT * FROM v27 AS a28 ORDER BY 10; 
SELECT * FROM v10 AS a29, v10 AS a30 ORDER BY 4294967295; 
