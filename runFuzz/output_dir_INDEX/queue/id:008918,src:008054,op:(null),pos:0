CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10 REFERENCES t1 DEFAULT NULL, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INTEGER PRIMARY KEY, c24 ); 
CREATE TABLE v25 ( c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39 PRIMARY KEY ON CONFLICT REPLACE, c40, c41, c42 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v43 USING rtree ( c44, c45, c46, c47, c48, c49, c50, c51, c52 ); 
CREATE INDEX i53 ON v43 ( c1 ); 
CREATE INDEX i54 ON v0 ( c2 ); 
CREATE INDEX i55 ON v43 ( c46 ); 
CREATE TABLE v56 ( c57, c58, c59, c60, c61 INT PRIMARY KEY ON CONFLICT REPLACE, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i74 ON v25 ( c26 ); 
UPDATE v0 SET c1 = ( c1 + 127 ) % count ( c2 ) WHERE c2 = 127; 
ATTACH ( hex ( 10 ) ) AS sqlite_master; 
CREATE TABLE v75 ( c76 DEFAULT x'ABCD' DEFAULT 0, c77 NOT NULL DEFAULT 127, c78 NOT NULL ON CONFLICT REPLACE DEFAULT 0, c79 NOT NULL ON CONFLICT IGNORE DEFAULT 0, c80 NOT NULL ON CONFLICT ABORT DEFAULT 127 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v25 BEGIN DELETE FROM v3; END; 
ALTER TABLE v43 RENAME TO v81; 
CREATE INDEX i82 ON v75 ( c77 ); 
UPDATE v25 SET c38 = 'x' WHERE c37 = 4294967295; 
CREATE TABLE v83 ( c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106 TEXT, c107, c108 INT, c109, c110, c111, c112, c113, c114, c115 INT UNIQUE ON CONFLICT IGNORE, c116, c117, c118, c119 INTEGER PRIMARY KEY, c120 ); 
SELECT * FROM v81 AS a121 ORDER BY 0; 
SELECT * FROM v56 AS a122 ORDER BY ( CASE WHEN a122.c61 != '1.2' THEN 0 ELSE 127 END ); 
SELECT a123.c49, a123.c1 FROM v81 AS a123 RIGHT JOIN v3 AS a124 ON a123.c48 = a124.c22 > 0 ORDER BY 0; 
SELECT * FROM v0 AS a125 NATURAL JOIN v81 AS a126 ORDER BY 127; 
SELECT * FROM v0 AS a127, v3 AS a128 NATURAL JOIN v75 AS a129 ORDER BY 4294967295; 
SELECT quote ( a130.c1 ), quote ( a130.c2 ), 'v1' FROM v0 AS a130 GROUP BY a130.c1, abs ( a130.c2 ) HAVING count ( * ) >= 127 ORDER BY 127; 
SELECT * FROM v56 AS a131 WHERE a131.c63 > a131.c65 % 18446744071562067968 ORDER BY 127; 
SELECT * FROM v83 AS a132 ORDER BY ( ( a132.c111 + 18446744071562067968 ) % 127 ) < 18446744073709551615; 
SELECT * FROM v0 AS a133 NATURAL JOIN v0 AS a134 ORDER BY 127; 
SELECT * FROM v75 AS a135 ORDER BY ( hex ( 0 ) ) % 0; 
