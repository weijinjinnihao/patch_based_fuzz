CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE TABLE v7 ( c8, c9 INTEGER UNIQUE ON CONFLICT FAIL, c10, c11, c12, c13, c14, c15 INTEGER DEFAULT NULL, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43 DEFAULT 8 DEFAULT 8, c44, c45, c46, c47 INTEGER PRIMARY KEY, c48 ); 
CREATE INDEX i49 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v7 WHERE c6 = c10; END; 
CREATE INDEX i50 ON v3 ( c4 ); 
INSERT INTO v7 VALUES ( ( ( c21 + 8 ) % 8 ) < 8, 'v0', 've' ); 
CREATE INDEX i51 ON v3 ( c2 ); 
ALTER TABLE v7 RENAME TO v52; 
CREATE INDEX i53 ON v52 ( c9 ); 
UPDATE v52 SET c43 = 'v1' WHERE c46 = 8; 
CREATE INDEX i54 ON v3 ( c2 ); 
SELECT * FROM v52 AS a55 ORDER BY 8; 
SELECT a56.c2 FROM v0 AS a56 ORDER BY 8; 
SELECT * FROM v52 AS a57 ORDER BY 8 - ( a57.c12 + a57.c42 ); 
SELECT a59.c9, count ( a59.c35 ) FROM v3 AS a58, v52 AS a59 WHERE a59.c34 = + a59.c9 ORDER BY 0; 
SELECT * FROM v52 AS a60 WHERE a60.c9 = a60.c21 || a60.c12 ORDER BY 8; 
SELECT a61.c5, a61.c2 FROM v3 AS a61 LEFT JOIN v0 AS a62 ON a61.c2 = a61.c2 y ORDER BY 8; 
WITH v63 ( c65 ) AS ( SELECT c65 + ( SELECT max ( c65 ) FROM v63 AS a69 ORDER BY 0 ), c65 + ( SELECT c65 FROM v63 AS a68 ORDER BY 18446744073709551488 ), c65 + ( SELECT max ( c65 ) FROM v63 AS a67 ORDER BY 8 ) FROM v63 AS a66 ORDER BY 0 ) SELECT * FROM v63 AS a64 ORDER BY 4294967295; 
SELECT * FROM v3 AS a70, v52 AS a71 NATURAL JOIN v3 AS a72 ORDER BY 8; 
VALUES ( 127, 8, 8 ) ORDER BY ( c30 || c4 || c46 ) != 'x'; 
SELECT * FROM v3 AS a73 WHERE ( a73.c4 = 8 OR a73.c2 > 4294967295 ) AND a73.c6 IN ( SELECT a73.c2 FROM ( SELECT a74.c12 FROM v52 AS a74 ORDER BY 8 ) AS y WHERE a73.c2 = 4294967295 ORDER BY 8 ) GROUP BY a73.c2, abs ( a73.c5 ) HAVING count ( * ) >= 8 ORDER BY 0; 
