CREATE TABLE v0 ( c1, c2 AS( c2 + c2 - c1 ) NOT NULL ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c1, c2 ) = ( ( SELECT CASE WHEN c1 % 18446744073709551615 != 18446744073709551615 THEN c2 END, c2, c1 FROM v0 AS a5 WHERE c2 <= 18446744073709551615 ORDER BY max ( c1 + c1 * 18446744073709551615 ) + 0, min ( c2, avg ( c2 ) ) + 18446744073709551615 ), 18446744073709551615 ); END; 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = 'v1' WHERE c1 = - 18446744073709551615; END; 
ALTER TABLE v0 RENAME TO v8; 
CREATE INDEX i9 ON v8 ( c2 ); 
SELECT * FROM v8 AS a10 WHERE a10.c2 > 18446744073709551615 ORDER BY 18446744073709551615; 
SELECT a11.c1, max ( a11.c1 || a11.c1 ) FROM v8 AS a11 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a12 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a13, v8 AS a14 NATURAL JOIN v8 AS a15 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a16 WHERE a16.c1 IS NOT NULL >= abs ( a16.c2 ) ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a17, v8 AS a18 NATURAL JOIN v8 AS a19 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a20 ORDER BY count ( * ) >= 0; 
SELECT * FROM ( SELECT 18446744073709551615 ORDER BY 18446744073709551615 ) AS y, ( SELECT 18446744073709551615 ORDER BY 18446744073709551615 ) AS y ON likely ( 0 OR 18446744073709551615 ) < 2 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a21 NATURAL JOIN v8 AS a22 ORDER BY 0; 
