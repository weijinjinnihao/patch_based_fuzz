PRAGMA foreign_keys = 3; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ); 
CREATE INDEX i2 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 127 ); 
INSERT INTO v0 VALUES ( 127 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE TABLE v4 ( c5 INTEGER REFERENCES t1 ( c5 ) ); 
INSERT INTO v0 VALUES ( 127 ); 
INSERT INTO v4 VALUES ( 127 ); 
DELETE FROM v4 WHERE c5 = 100; 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
SELECT a8.c5, max ( a8.c5 || a8.c5 ) FROM v4 AS a8 ORDER BY 127; 
SELECT * FROM v0 AS a9 ORDER BY 127; 
SELECT max ( a10.c5 || a10.c5 ) FROM v4 AS a10 ORDER BY 18446744073709551488; 
SELECT * FROM v4 AS a11 ORDER BY a11.c5 COLLATE binary; 
SELECT a12.c5, a13.c5 FROM v4 AS a12 RIGHT JOIN v4 AS a13 ON a12.c5 = 127 ORDER BY 127; 
SELECT * FROM v4 AS a14, v0 AS a15 ORDER BY 100; 
SELECT * FROM v4 AS a16 ORDER BY 127; 
SELECT * ORDER BY 127; 
WITH v0 ( c18 ) AS ( SELECT 0 ORDER BY 0 ) SELECT * FROM v4 AS a17 ORDER BY 127; 
SELECT count ( ( NOT ( a19.c5 IS NULL ) ) AND ( NOT ( a19.c5 IS NULL ) ) ) FROM v4 AS a19 ORDER BY 127; 
