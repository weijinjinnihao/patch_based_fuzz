CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10 REFERENCES t1 DEFAULT NULL, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INTEGER PRIMARY KEY, c24 ); 
CREATE TABLE v25 ( c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39 PRIMARY KEY ON CONFLICT REPLACE, c40, c41, c42 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v43 USING rtree ( c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54 ); 
ALTER TABLE v25 ADD COLUMN c55 TEXT CHECK( c39 != 18446744073709551488 ) DEFAULT 100; 
CREATE INDEX i56 ON v0 ( c1 ); 
CREATE TABLE v57 ( c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76 REFERENCES t1 DEFAULT 0 DEFAULT 18446744073709551488 ); 
INSERT INTO v3 VALUES ( 4294967295, 'cantaloupe' ), ( 4294967295, 'again' ), ( 100, 'v1' ); 
CREATE INDEX i77 ON v57 ( c63 ); 
CREATE TABLE v78 ( c79 DEFAULT x'ABCD' DEFAULT 100, c80 NOT NULL DEFAULT 4294967295, c81 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744073709551488, c82 NOT NULL ON CONFLICT IGNORE DEFAULT 100, c83 NOT NULL ON CONFLICT ABORT DEFAULT 4294967295 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v25 BEGIN DELETE FROM v57; END; 
CREATE INDEX i84 ON v43 ( c47 ); 
ALTER TABLE v43 RENAME TO v85; 
INSERT INTO v85 VALUES ( 0, 100 ), ( 18446744073709551488, 18446744073709551615 ), ( 127, 18446744073709551488 ), ( 4294967295, 100 ), ( 18446744073709551615, 18446744073709551615 ); 
CREATE INDEX i86 ON v78 ( c79 ); 
CREATE INDEX i87 ON v3 ( c24 ); 
UPDATE v0 SET c1 = 'v1' WHERE c2 = 18446744073709551615; 
SELECT max ( a88.c71 || a88.c59 ) FROM v57 AS a88 ORDER BY 100; 
SELECT * FROM v85 AS a89 ORDER BY 0; 
SELECT * FROM v0 AS a90 NATURAL JOIN v25 AS a91 ORDER BY 18446744073709551615; 
SELECT * FROM v25 AS a92 NATURAL JOIN v3 AS a93 ORDER BY 4294967295; 
SELECT * FROM v85 AS a94 WHERE a94.c45 = a94.c46 ORDER BY 4294967295; 
SELECT a95.c47, count ( a95.c22 ) FROM v85 AS a95 ORDER BY 18446744073709551488; 
SELECT quote ( a96.c2 ), quote ( a96.c1 ), 'x' FROM v85 AS a96 GROUP BY a96.c51, a96.c48, count ( a96.c54 ) ORDER BY 0; 
SELECT * FROM v3 AS a97 ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a98 ORDER BY max ( a98.c10 + a98.c21 * 0 ) + 0, min ( a98.c6, avg ( a98.c20 ) ) + 18446744073709551615; 
SELECT * FROM v85 AS a99 WHERE a99.c1 % 0 ORDER BY 16; 
