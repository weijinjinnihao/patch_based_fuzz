CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ) WITHOUT ROWID; 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 'v1' ), ( 18446744073709551615, 'v1' ), ( 10, 'x' ); 
INSERT INTO v4 VALUES ( 10, 16, 10 ), ( 18446744073709551488, 16, 16 ), ( 10, 255, 255 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v0 WHERE c2 = c1; END; 
CREATE TABLE v8 ( c9, c10 TEXT, c11, PRIMARY KEY ( c11, c9 ), UNIQUE ( c9 ) ) WITHOUT ROWID; 
ALTER TABLE v4 RENAME TO v12; 
CREATE INDEX i13 ON v0 ( c1 ); 
CREATE INDEX i14 ON v0 ( c2 ); 
UPDATE v12 SET c5 = 'v1' WHERE c7 = 18446744073709551615; 
CREATE INDEX i15 ON v12 ( c2 ); 
SELECT * FROM v0 AS a16 GROUP BY 10 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a17 GROUP BY a17.c7, a17.c5 < a17.c7 ORDER BY 10; 
SELECT a18.c6, count ( * ) FROM v12 AS a18 ORDER BY 10; 
SELECT ( SELECT min ( ) OVER ( ORDER BY 10 ) ORDER BY 0 ) FROM v12 AS a19 GROUP BY y ( a19.c2 ) ORDER BY 20; 
SELECT * FROM v0 AS a20, v0 AS a21 ORDER BY 0; 
SELECT * FROM v0 AS a22, v12 AS a23 ORDER BY 8; 
SELECT * FROM v12 AS a24 GROUP BY a24.c2, abs ( a24.c7 ) ORDER BY 10; 
SELECT a26.c5, a26.c6 IS NOT NULL FROM v12 AS a25 LEFT JOIN v12 AS a26 ON a26.c5 = a26.c2 ORDER BY 10; 
SELECT * ORDER BY 18446744073709551488; 
VALUES ( 0, 18446744073709551488, 10, 18446744073709551488 ) ORDER BY 10; 
