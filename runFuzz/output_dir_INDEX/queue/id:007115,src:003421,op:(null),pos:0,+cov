CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 127, 'v1' ), ( 127, 'v1' ), ( 127, 'v1' ); 
CREATE INDEX i8 ON v0 ( c2 ); 
INSERT INTO v4 VALUES ( 0, 127, 18446744073709551488 ), ( 18446744073709551488, 18446744073709518848, 18446744071562067968 ), ( 127, 18446744073709551488, 18446744073709551615 ); 
CREATE INDEX i9 ON v4 ( c1 ); 
BEGIN; 
CREATE INDEX i10 ON v4 ( c7 ); 
CREATE INDEX i11 ON v4 ( c7 ); 
DELETE FROM v4 WHERE c7 = c7; 
END; 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v12 SET c1 = '1-one' WHERE c2 = c2 NOT NULL; 
SELECT * FROM v4 AS a13, v12 AS a14 ORDER BY 18; 
SELECT * FROM v12 AS a15, v12 AS a16 NATURAL JOIN v12 AS a17 ORDER BY 127; 
SELECT a18.c2 FROM v12 AS a18 ORDER BY 0; 
SELECT * FROM v12 AS a19 WHERE a19.c1 > 18446744071562067968 ORDER BY 127; 
SELECT * FROM v12 AS a20 ORDER BY ( a20.c2 + 100 ) % count ( a20.c2 ); 
SELECT * ORDER BY 18446744073709551488; 
SELECT a21.c2, UTF16le ( a21.c1 ) AS y FROM v12 AS a21 GROUP BY a21.c2 ORDER BY 100; 
SELECT * FROM v12 AS a22 WHERE a22.c2 IS NOT NULL >= 18446744073709518848 ORDER BY 127; 
SELECT * FROM v12 AS a23 WHERE a23.c2 NOT NULL ORDER BY 18446744073709551488; 
SELECT a24.c2, count ( * ), avg ( a24.c1 ), max ( a24.c2 + a24.c2 * 18446744073709551615 ) FROM v12 AS a24 ORDER BY 127; 
