CREATE TABLE v0 ( c1, c2 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c2, c2 ) = ( ( SELECT CASE WHEN c1 % 8 != 18446744073709551488 THEN c2 END, c1, c1 FROM v0 AS a3 WHERE c2 <= 18446744073709551488 ORDER BY max ( c1 + c2 * 18446744073709551488 ) + 18446744073709551488, min ( c1, avg ( c2 ) ) + 18446744073709551488 ), 18446744073709551488 ); END; 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE TABLE v5 ( c6 INTEGER PRIMARY KEY, c7 INT, c8 VARCHAR(1000) ); 
CREATE INDEX i9 ON v5 ( c7 ); 
CREATE TRIGGER r1 AFTER INSERT ON v0 BEGIN UPDATE v5 SET c7 = 8 FROM v0 AS a10, v0 AS a11 NATURAL JOIN v5 AS a12; END; 
CREATE INDEX i13 ON v0 ( c2 ); 
CREATE INDEX i14 ON v0 ( c2 ); 
CREATE INDEX i15 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME c1 TO c16; 
SELECT a17.c16, count ( ( NOT ( a17.c16 IS NULL ) ) AND ( NOT ( a17.c2 IS NULL ) ) ) FROM v0 AS a17 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 2147483647; 
SELECT * FROM v0 AS a18 GROUP BY a18.c16 HAVING a18.c16 > a18.c16 % 16 >= 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT ( 18446744073709551488, count ( * ) ) != 8 ORDER BY 16; 
SELECT * FROM v0 AS a19 ORDER BY 8; 
SELECT * FROM v5 AS a20, v5 AS a21 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a22, v0 AS a23 NATURAL JOIN v0 AS a24 ORDER BY 18446744073709551488; 
WITH v25 ( c27 ) AS ( WITH v28 AS ( SELECT ( SELECT min ( c27 ) OVER ( ORDER BY 2147483647 ) ORDER BY 18446744073709551488 ) FROM v28 AS a30 GROUP BY c27 ORDER BY 18446744073709551488 ) SELECT 18446744073709551488 ORDER BY 2147483647 ) SELECT c27 + ( SELECT max ( c27 ) FROM v28 AS a32, v28 AS a33 NATURAL JOIN v28 AS a34 ORDER BY 0 ), c27 + ( SELECT max ( c27 ) FROM v28 AS a31 ORDER BY 2147483647 ), c27 + ( SELECT max ( c27 ) FROM v25 AS a29 ORDER BY 18446744073709551488 ) FROM v25 AS a26 ORDER BY 2147483647; 
SELECT * FROM v0 AS a35, v5 AS a36 NATURAL JOIN v5 AS a37 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a38 WHERE a38.c2 > 18446744073709551488 ORDER BY 8; 
