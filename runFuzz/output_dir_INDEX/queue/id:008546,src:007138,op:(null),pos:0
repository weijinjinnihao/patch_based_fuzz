CREATE TABLE v0 ( c1 DEFAULT 'v1' DEFAULT 65, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c4 ); 
INSERT INTO v0 VALUES ( 65, 'x' ), ( 18446744073709551488, 'x' ), ( 0, 'GHI' ); 
CREATE INDEX i8 ON v3 ( c6 ); 
INSERT INTO v3 VALUES ( 16, 16, 18446744073709551488 ), ( 0, 18446744073709518848, 16 ), ( 2147483647, 2147483647, 18446744073709518848 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3; END; 
CREATE INDEX i9 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v10; 
UPDATE v10 SET c1 = '40000 400 1 1' WHERE 2147483647; 
CREATE INDEX i11 ON v10 ( c1 ); 
CREATE INDEX i12 ON v10 ( c1 ); 
SELECT * FROM v10 AS a13 ORDER BY 0; 
SELECT count ( a14.c2 ) FROM v10 AS a14 ORDER BY 18446744073709518848; 
SELECT * FROM v3 AS a15 ORDER BY max ( a15.c6 + a15.c5 * 127 ) + 127; 
SELECT * FROM v10 AS a16 GROUP BY a16.c1 HAVING a16.c1 > a16.c1 % 9223372036854775807 >= 100 ORDER BY 65; 
SELECT * FROM v10 AS a17 GROUP BY a17.c1 HAVING a17.c1 > a17.c2 % 4294967295 >= 100 ORDER BY 16; 
SELECT * FROM v10 AS a18 ORDER BY ( ( a18.c1 + 65 ) % 9223372036854775807 ) < 18446744073709551488; 
SELECT 16 IN ( SELECT * FROM v10 AS a21 ORDER BY 18446744073709551488 ) FROM v10 AS a19 NATURAL JOIN v10 AS a20 ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a22, v10 AS a23 NATURAL JOIN v3 AS a24 ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a25, v10 AS a26 NATURAL JOIN v10 AS a27 ORDER BY 18446744073709551488; 
WITH v10 ( c29, c30, c31, c32, c33, c34 ) AS ( SELECT 2147483647 y ORDER BY 255 ) SELECT * FROM v10 AS a28 ORDER BY 65; 
