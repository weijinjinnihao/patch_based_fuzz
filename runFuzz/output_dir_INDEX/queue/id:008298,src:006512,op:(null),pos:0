CREATE TABLE v0 ( c1, c2, c3, PRIMARY KEY ( c1 ), CHECK( c1 != c3 ), CHECK( c1 != c3 ) ) WITHOUT ROWID; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE TEMP TRIGGER tri1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = c2 || c3 WHERE c1 = c1 || c2; END; 
CREATE INDEX i5 ON v0 ( c3 ); 
CREATE TABLE v6 ( c7, c8, c9, c10, PRIMARY KEY ( c10, c8 ) ) WITHOUT ROWID; 
INSERT OR REPLACE INTO v0 VALUES ( 18446744073709551488, 18446744073709551488, 1.200000, 1.200000 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v0 DROP COLUMN c2; 
CREATE TABLE v12 ( c13 INTEGER PRIMARY KEY, c14 INTEGER NOT NULL CHECK( c13 > c16 ), c15 INTEGER NOT NULL CHECK( c15 > ( ( c14 + 9223372036854775807 ) % 1.200000 ) != 18446744073709551488 ), c16 INTEGER NOT NULL CHECK( c14 BETWEEN c16 AND c14 ) ); 
CREATE INDEX i17 ON v6 ( c10 ); 
CREATE VIRTUAL TABLE v18 USING rtree ( c19, c20, c21 ); 
SELECT * FROM v0 AS a22 ORDER BY 1.200000; 
SELECT * FROM v18 AS a23, v12 AS a24 ORDER BY 1.200000; 
SELECT * ORDER BY 9223372036854775807; 
SELECT * FROM v18 AS a25 ORDER BY 1.200000; 
SELECT * FROM v12 AS a26 GROUP BY a26.c13 ORDER BY 1.200000; 
SELECT * FROM v18 AS a27 ORDER BY 0; 
SELECT - 9223372036854775807 ORDER BY 1.200000; 
SELECT * FROM v18 AS a28 WHERE a28.c19 ORDER BY 1.200000; 
SELECT * FROM v18 AS a29 ORDER BY 100; 
SELECT * FROM v12 AS a30 ORDER BY 9223372036854775807; 
