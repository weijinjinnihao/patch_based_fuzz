CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
CREATE INDEX i6 ON v0 ( c3 ); 
CREATE TABLE v7 ( c8 INTEGER PRIMARY KEY, c9 INTEGER NOT NULL CHECK( c11 > c9 ), c10 INTEGER NOT NULL CHECK( NOT NULL ), c11 INTEGER NOT NULL ON CONFLICT FAIL CHECK( ( ( ( ( c8 + 100 ) % 100 ) == 18446744073709551615 ) % 16 ) NOT BETWEEN c8 AND c11 ) ); 
CREATE TABLE v12 ( c13 INT NOT NULL, c14 INTEGER NOT NULL, c15 TEXT NOT NULL, c16 REAL NOT NULL, c17 BLOB NOT NULL ) STRICT; 
CREATE INDEX i18 ON v7 ( c8 ); 
CREATE INDEX i19 ON v12 ( c13 ); 
CREATE TABLE v20 ( c21 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c22 UNIQUE ON CONFLICT IGNORE, c23 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TABLE v24 ( c25, c26, c27, c28, c29 ); 
INSERT INTO v24 ( c29, c27, c28, c27, c27 ) VALUES ( 0, 16, 'Y', 16, x'b1' ), ( 100, 16, 'v0', 16, x'b2b2b2' ); 
PRAGMA integrity_check; 
CREATE INDEX i30 ON v0 ( c2 ); 
CREATE INDEX i31 ON v7 ( c10 ); 
PRAGMA quick_check ( 't1' ); 
UPDATE v0 SET c2 = ( SELECT c5 FROM v0 AS a32 WHERE c1 = 'v1' ORDER BY 100 ); 
SELECT * FROM v0 AS a33 ORDER BY max ( a33.c4 + a33.c3 * 100 ) + 0, min ( a33.c4, avg ( a33.c1 ) ) + 0; 
SELECT * ORDER BY 100; 
SELECT count ( * ) FROM v7 AS a34 ORDER BY 100; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT * FROM v20 AS a35 ORDER BY 100; 
WITH RECURSIVE v36 AS ( SELECT 100 y ORDER BY 0 ) SELECT c13, c8 FROM v36 AS a37 WHERE c21 GLOB 'v0' AND c10 >= x'6162' ORDER BY 100; 
WITH v38 ( c40 ) AS ( SELECT 'v0' ORDER BY 0 ) SELECT ( ( 100 IS NOT 0 ) OR NOT ( 0 IS 18446744073709551488 OR ( c40 = 100 ) ) ) IS 100 FROM v38 AS a39 ORDER BY 16; 
SELECT ( SELECT min ( a41.c28 ) OVER ( ORDER BY 0 ) ORDER BY 0 ) FROM v24 AS a41 WHERE count ( * ) >= 18446744073709551488 = 'x' GROUP BY a41.c28 ORDER BY 0; 
SELECT * FROM v20 AS a42, v0 AS a43 ORDER BY 100; 
SELECT * FROM v12 AS a44 NATURAL JOIN v20 AS a45 ORDER BY 100; 
SELECT * FROM v20 AS a46 ORDER BY 18446744073709551615; 
