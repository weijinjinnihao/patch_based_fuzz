CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE TABLE v4 ( c5, c6, c7, c8, c9, c10 INTEGER, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46 INTEGER PRIMARY KEY, c47 ); 
CREATE TABLE v48 ( c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62 PRIMARY KEY ON CONFLICT REPLACE, c63, c64, c65 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v66 USING rtree ( c67, c68, c69, c70, c71, c72, c73, c74, c75 ); 
CREATE TABLE v76 ( c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93 TEXT UNIQUE NOT NULL ); 
INSERT INTO v48 VALUES ( 2.000000, 'v0' ), ( 2.000000, 've' ), ( 2.000000, 'c1' ); 
CREATE TABLE v94 ( c95 DEFAULT x'ABCD' DEFAULT 2.000000, c96 NOT NULL DEFAULT 2.000000, c97 NOT NULL ON CONFLICT REPLACE DEFAULT 2.000000, c98 NOT NULL ON CONFLICT IGNORE DEFAULT 2.000000, c99 NOT NULL ON CONFLICT ABORT DEFAULT 2.000000 ); 
CREATE INDEX i100 ON v48 ( c56 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v76 BEGIN INSERT INTO v66 VALUES ( 2.000000, 2.000000 ); END; 
ALTER TABLE v66 RENAME TO v101; 
CREATE INDEX i102 ON v94 ( c97 ); 
CREATE INDEX i103 ON v48 ( c55 ); 
UPDATE v76 SET c91 = 'x' WHERE c91 = 2.000000; 
CREATE INDEX i104 ON v4 ( c17 ); 
SELECT * FROM v101 AS a105, v0 AS a106 NATURAL JOIN v94 AS a107 ORDER BY 2.000000; 
SELECT CASE WHEN a108.c84 % 2.000000 != 2.000000 THEN a108.c79 END, a108.c86, a108.c89 FROM v76 AS a108 WHERE a108.c83 <= 18446744073709551488 ORDER BY 18446744073709551615; 
SELECT a109.c95, a109.c99 FROM v94 AS a109 LEFT JOIN v4 AS a110 ON ( 'v1', a109.c96 > 18446744073709551488, 'v1' ) < 2.000000 = a110.c21 ORDER BY 2.000000; 
SELECT * FROM v76 AS a111 ORDER BY + a111.c85; 
SELECT * FROM v76 AS a112, v0 AS a113 NATURAL JOIN v101 AS a114 ORDER BY 2.000000; 
SELECT * FROM v94 AS a115, v101 AS a116 NATURAL JOIN v94 AS a117 ORDER BY 2.000000; 
SELECT * ORDER BY 2.000000; 
SELECT count ( a118.c68 ) FROM v101 AS a118 ORDER BY 2.000000; 
SELECT * FROM v0 AS a119 NATURAL JOIN v101 AS a120 ORDER BY 2.000000; 
SELECT * FROM v101 AS a121 WHERE a121.c74 != a121.c68 ORDER BY 2.000000; 
