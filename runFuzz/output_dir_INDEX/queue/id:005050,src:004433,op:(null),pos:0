CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
UPDATE v0 SET c5 = ( SELECT c4 FROM v0 AS a6, v0 AS a7 WHERE c5 = 'v0' ORDER BY 18446744073709551615 ); 
CREATE INDEX i8 ON v0 ( c3 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE TABLE v10 ( c11 INT NOT NULL, c12 INTEGER NOT NULL, c13 TEXT NOT NULL, c14 REAL NOT NULL, c15 BLOB NOT NULL ) STRICT; 
CREATE TABLE v16 ( c17 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c18 UNIQUE ON CONFLICT IGNORE, c19 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TABLE v20 ( c21, c22, c23, c24, c25 ); 
CREATE INDEX i26 ON v10 ( c12 ); 
INSERT INTO v10 ( c12, c14, c14, c13, c12 ) VALUES ( 18446744073709551615, 18446744073709551615, '1.1', 18446744073709551615, x'b1' ), ( 100, 18446744073709551615, 'x', 2147483647, x'b2b2b2' ); 
PRAGMA integrity_check; 
PRAGMA quick_check ( 't1' ); 
CREATE INDEX i27 ON v20 ( c24 ); 
UPDATE v10 SET c14 = ( SELECT c13 FROM v10 AS a28 WHERE c13 = 'v1' ORDER BY 18446744073709551615 ); 
SELECT * FROM v16 AS a29 GROUP BY 18446744073709551615 ORDER BY 18446744073709551615; 
SELECT * FROM v20 AS a30 GROUP BY a30.c22, abs ( a30.c23 ) HAVING count ( * ) >= 2147483647 ORDER BY 18446744073709551615; 
SELECT * FROM v16 AS a31 ORDER BY 18446744073709551615; 
SELECT ( CASE WHEN c3 != 'v1' THEN 100 ELSE 18446744073709551615 END ) ORDER BY 0; 
SELECT a32.c3, count ( ( NOT ( a32.c3 IS NULL ) ) AND ( NOT ( a32.c5 IS NULL ) ) ) FROM v0 AS a32 ORDER BY 100; 
WITH v10 ( c34 ) AS ( SELECT 2147483647 ORDER BY 18446744073709551615 ) SELECT * FROM v16 AS a33 ORDER BY 100; 
WITH RECURSIVE v35 ( c37 ) AS ( SELECT 18446744073709551615 ORDER BY 0 ) SELECT * FROM v35 AS a36 ORDER BY 100; 
WITH v38 ( c41 ) AS ( WITH v42 ( c43, c44, c45, c46, c47, c48 ) AS ( SELECT 100 y ORDER BY 10 ) SELECT 18446744073709551615 ORDER BY 255 ) SELECT c41, c41 FROM v38 AS a39 RIGHT JOIN v38 AS a40 ON c41 = c41 WHERE c41 = + c41 ORDER BY 127; 
SELECT a49.c19, count ( ( NOT ( a49.c19 IS NULL ) ) AND ( NOT ( a49.c17 IS NULL ) ) ) FROM v16 AS a49 ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a50 ORDER BY + a50.c12; 
