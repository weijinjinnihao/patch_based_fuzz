CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 REFERENCES t1 DEFAULT 127 DEFAULT 4294967295 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 'v1', 4294967295, 0 ); 
INSERT INTO v4 VALUES ( 0, 10, 10 ), ( 18446744071562067968, 4294967295, 127 ), ( 10, 8, 4294967295 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v0 WHERE c5 = c1; END; 
CREATE INDEX i8 ON v4 ( c5 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
ALTER TABLE v4 RENAME TO v11; 
CREATE INDEX i12 ON v11 ( c1 ); 
UPDATE v11 SET c1 = 'x' WHERE c1 = 4294967295; 
SELECT * FROM v11 AS a13 ORDER BY 18446744073709551488; 
VALUES ( 10, 10, 18446744073709551488 ), ( 4294967295, 10, 4294967295 ), ( 100, x'b1', 100 ) ORDER BY 4294967295; 
SELECT a14.c5, count ( ( NOT ( a14.c7 IS NULL ) ) AND ( NOT ( a14.c7 IS NULL ) ) ) FROM v11 AS a14 ORDER BY 8; 
SELECT * FROM v11 AS a15 ORDER BY ( CASE WHEN a15.c6 != 'v1' THEN 10 ELSE 16 END ); 
SELECT a16.c1, max ( a16.c1 || a16.c5 ) FROM v11 AS a16 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a17, v11 AS a18 ORDER BY 16; 
WITH RECURSIVE v11 AS ( SELECT 10 y ORDER BY 4294967295 ) SELECT * FROM v0 AS a19 ORDER BY 10; 
SELECT * FROM v0 AS a20 ORDER BY 18446744073709518848; 
SELECT * FROM v0 AS a21 ORDER BY 10; 
SELECT * FROM v11 AS a22 ORDER BY 10; 
