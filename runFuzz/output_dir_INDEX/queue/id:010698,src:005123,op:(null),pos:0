CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
BEGIN TRANSACTION; 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 'v1', 18446744073709551615, 18446744073709551615 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 18446744073709551615, 0 ), ( 2147483647, 0, NULL ), ( 18446744073709551615, 0, 2147483647 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
CREATE INDEX i8 ON v3 ( c6 ); 
CREATE INDEX i9 ON v3 ( c4 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( ( ( c1 + 18446744073709551615 ) % 0 ) < 0, '%t3%', 'u' ); 
ALTER TABLE v3 RENAME TO v11; 
UPDATE v11 SET c4 = 'v0' WHERE c4 = 18446744073709551615; 
SELECT * FROM v11 AS a12 WHERE ( ( a12.c6 + 18446744073709551615 ) % 18446744073709551615 ) == 18446744073709518848 ORDER BY 0; 
SELECT a13.c2 FROM v0 AS a13 ORDER BY 0; 
SELECT a14.c5, count ( ( NOT ( a14.c6 IS NULL ) ) AND ( NOT ( a14.c6 IS NULL ) ) ) FROM v11 AS a14 ORDER BY + a14.c4; 
SELECT * FROM v11 AS a15 ORDER BY 100; 
SELECT * FROM v0 AS a16 WHERE 0 ORDER BY 9223372036854775807; 
WITH RECURSIVE v11 ( c18 ) AS ( SELECT max ( c8 ( 18446744073709551615, ( a17.c4 + 18446744073709551615 ), a17.c6 != 'x' ) || a17.c6 ) ORDER BY 18446744073709551615 ) SELECT * FROM v11 AS a17 ORDER BY 18446744073709551615; 
SELECT a19.c5, count ( ( NOT ( a19.c4 IS NULL ) ) AND ( NOT ( a19.c4 IS ( 'v1', a19.c6 > 255, 'x' ) ) ) ) FROM v11 AS a19 ORDER BY 0; 
SELECT * FROM v0 AS a20 GROUP BY y ( a20.c2 ) ORDER BY 18446744073709551615; 
SELECT * FROM v11 AS a21 ORDER BY 18446744073709551615; 
SELECT * FROM v11 AS a22 NATURAL JOIN v0 AS a23 ORDER BY 2147483647; 
