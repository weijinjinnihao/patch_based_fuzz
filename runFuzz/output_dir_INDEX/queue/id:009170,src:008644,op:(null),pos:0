CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c2 UNIQUE ON CONFLICT IGNORE, c3 UNIQUE ON CONFLICT FAIL ); 
INSERT INTO v0 VALUES ( 5.4e-08, 127, 127 ) ON CONFLICT ( c3 ) DO UPDATE SET c3 = c1, c1 = c2; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c2 ); 
INSERT INTO v0 ( c1, c2, c2 ) VALUES ( 127, 127, 127 ), ( 127, 18446744073709518848, 18446744073709551488 ); 
INSERT INTO v0 ( c2, c2, c1 ) VALUES ( 18446744073709518848, 16, 18446744073709518848 ); 
INSERT INTO v0 ( c3, c2, c2 ) VALUES ( 18446744073709551488, 18446744073709551615, 18446744073709551488 ), ( 127, 16, 0 ) ON CONFLICT ( c3 ) DO UPDATE SET c1 = c3, c2 = y ( c3 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
WITH v0 ( c9 ) AS ( SELECT 0 GROUP BY a8.c2 HAVING automatic_index ( * ) >= 18446744073709518848 ORDER BY 255 ) SELECT * FROM v0 AS a8 ORDER BY 127; 
SELECT * FROM v0 AS a10 GROUP BY a10.c9 HAVING automatic_index ( * ) >= 18446744073709551488 ORDER BY 127; 
SELECT * FROM v0 AS a11, v0 AS a12 ORDER BY 18446744073709518848; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 18446744073709551488 ) SELECT * FROM v0 AS a13 ORDER BY 16; 
SELECT * FROM v0 AS a14 ORDER BY max ( a14.c2 + a14.c3 * 127 ) + 18446744073709551488, min ( a14.c2, avg ( a14.c3 ) ) + NULL >= 16; 
SELECT * FROM ( SELECT 127 FROM v0 AS a16 NATURAL JOIN v0 AS a17 ORDER BY 127 ) AS y, v0 AS a15 ON likely ( 18446744073709551488 OR 18446744073709551488 ) OR 16 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a18 GROUP BY a18.c2, abs ( a18.c2 ) HAVING count ( * ) >= 127 ORDER BY 127; 
SELECT * FROM v0 AS a19, v0 AS a20 ORDER BY 1.500000; 
SELECT count ( a21.c2 ) FROM v0 AS a21 ORDER BY 1.200000; 
SELECT * FROM v0 AS a22, v0 AS a23 NATURAL JOIN v0 AS a24 ORDER BY 255; 
