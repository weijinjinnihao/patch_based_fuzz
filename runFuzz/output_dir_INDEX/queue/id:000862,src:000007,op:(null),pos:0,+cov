CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v0 VALUES ( 10 ), ( 18446744071562067968 ), ( 10, 10, 'v1', 10, x'b2b2b2' ), ( 10, 'x' ); 
CREATE INDEX i9 ON v5 ( c7 ); 
INSERT INTO v0 VALUES ( 10, 18446744073709551488, 4294967295 ), ( 18446744071562067968, 0, 18446744073709551615 ), ( 18446744073709551488, 10, 18446744071562067968 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v5 BEGIN DELETE FROM v0 WHERE c6 = c2; END; 
CREATE INDEX i11 ON v5 ( c6 ); 
ALTER TABLE v5 RENAME TO v12; 
UPDATE v12 SET c8 = 'ghi' WHERE c6 = 100; 
SELECT * FROM v12 AS a13 ORDER BY max ( a13.c7 + a13.c7 * 0 ) + 16, min ( a13.c6, avg ( a13.c6 ) ) + 18446744073709551615; 
SELECT * FROM v12 AS a14, v12 AS a15 ORDER BY 10; 
SELECT * FROM v12 AS a16 GROUP BY 10 ORDER BY 100; 
SELECT * FROM v0 AS a17 ORDER BY 18446744073709551488; 
SELECT a18.c7, a19.c6 FROM v12 AS a18 LEFT JOIN v12 AS a19 ON a19.c8 = a18.c6 y ORDER BY 10; 
SELECT * FROM v12 AS a20 GROUP BY y ( a20.c8 ) ORDER BY 2147483647; 
SELECT * ORDER BY 10; 
SELECT a21.c7, max ( a21.c7 || a21.c6 ) FROM v12 AS a21 ORDER BY 18446744073709551488; 
WITH v22 ( c24 ) AS ( SELECT 10 ORDER BY 10 ) SELECT * FROM v22 AS a23 ORDER BY 18446744073709551615; 
SELECT a25.c7 AS y, a25.c7 || a25.c6 AS y FROM v12 AS a25 WHERE + a25.c8 = 'v1' ORDER BY 10; 
