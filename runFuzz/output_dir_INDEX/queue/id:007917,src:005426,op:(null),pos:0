CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8, c9, c10, c11, c12 ); 
CREATE TABLE v13 ( c14 INTEGER, c15 INTEGER PRIMARY KEY, c16 BLOB, FOREIGN KEY ( c14 ) REFERENCES t2 ); 
CREATE INDEX i17 ON v13 ( c14 ); 
INSERT INTO v0 VALUES ( 127, 'v0' ), ( 127, 'v0' ), ( 127, 'v1' ); 
INSERT INTO v3 VALUES ( 10, 127, 127 ), ( 10, 127, 127 ), ( 127, 255, 127 ); 
INSERT INTO v13 VALUES ( 10, x'b1' ), ( 0, 127 ), ( 100, 255 ); 
CREATE TABLE IF NOT EXISTS v18 ( c19 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c20 UNIQUE ON CONFLICT IGNORE, c21 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TRIGGER r1 AFTER UPDATE ON v13 BEGIN DELETE FROM v18; END; 
CREATE TABLE v22 ( c23 REFERENCES t1 DEFAULT NULL, c24, c25, c26, c27, c28, c29, c30, c31, c32 INTEGER UNIQUE ON CONFLICT FAIL, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57 PRIMARY KEY, CHECK( ( ( c51 + 100 ) % 255 ) != 127 ) ) WITHOUT ROWID; 
ALTER TABLE v3 RENAME TO v58; 
CREATE INDEX i59 ON v58 ( c2 ); 
CREATE INDEX i60 ON v58 ( c4 ); 
CREATE INDEX i61 ON v22 ( c41 ); 
UPDATE v18 SET c21 = 'x' WHERE c20 = 18446744073709551615; 
SELECT * FROM v22 AS a62 ORDER BY 100; 
SELECT 100 IN ( SELECT a63.c6, a63.c1 FROM v58 AS a63 ORDER BY 127 ) ORDER BY 18446744073709551488; 
SELECT * FROM v13 AS a64 ORDER BY 4294967295; 
SELECT * FROM v18 AS a65 ORDER BY ( ( a65.c20 + 2147483647 ) % 0 ) != 160; 
SELECT * FROM v58 AS a66 ORDER BY ( 127, count ( * ) ); 
SELECT * FROM v13 AS a67 ORDER BY a67.c14 COLLATE NOCASE; 
SELECT * FROM v22 AS a68, v0 AS a69 NATURAL JOIN v58 AS a70 ORDER BY 100; 
SELECT a71.c45, max ( a71.c28 || a71.c33 ) FROM v22 AS a71 ORDER BY 160; 
SELECT * ORDER BY 0; 
SELECT * FROM v58 AS a72 ORDER BY 255; 
