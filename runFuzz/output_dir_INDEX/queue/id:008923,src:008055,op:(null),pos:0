CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10 REFERENCES t1 DEFAULT NULL, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INTEGER PRIMARY KEY, c24 ); 
CREATE TABLE v25 ( c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39 PRIMARY KEY ON CONFLICT REPLACE, c40, c41, c42 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v43 USING rtree ( c44, c45, c46, c47, c48, c49, c50, c51, c52 ); 
CREATE INDEX i53 ON v0 ( c1 ); 
CREATE TABLE v54 ( c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71 TEXT UNIQUE NOT NULL ); 
UPDATE v25 SET c31 = ( c27 + 0 ) % count ( c34 ) WHERE c42 = 0; 
UPDATE v54 SET c16 = NULL, c55 = c1, c2 = c2 FROM v0 AS a72, v3 AS a73; 
CREATE INDEX i74 ON v25 ( c37 ); 
CREATE INDEX i75 ON v25 ( c26 ); 
ATTACH ( hex ( 16 ) ) AS sqlite_master; 
CREATE TABLE v76 ( c77 DEFAULT x'ABCD' DEFAULT 16, c78 NOT NULL DEFAULT 0, c79 REFERENCES t1 DEFAULT 0 DEFAULT 0, c80 NOT NULL ON CONFLICT IGNORE DEFAULT 0, c81 NOT NULL ON CONFLICT ABORT DEFAULT 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v25 BEGIN DELETE FROM v54; END; 
ALTER TABLE v43 RENAME TO v82; 
UPDATE v54 SET c61 = 'v0' WHERE c65 = 100; 
CREATE INDEX i83 ON v82 ( c47 ); 
CREATE INDEX i84 ON v0 ( c1 ); 
SELECT * FROM v0 AS a85 GROUP BY a85.c2, abs ( a85.c2 ) HAVING CASE WHEN a85.c2 != 'x' THEN 8 ELSE 0 END > 0 >= 4294967295 ORDER BY 4294967295; 
SELECT * FROM v54 AS a86 GROUP BY x'616263', 'v1', a86.c61 = + a86.c64 HAVING count ( * ) >= 18446744071562067968 ORDER BY 18446744073709551615; 
SELECT * FROM v76 AS a87, v82 AS a88 NATURAL JOIN v82 AS a89 ORDER BY 0; 
SELECT * FROM v0 AS a90 WHERE a90.c2 != 0 ORDER BY 4294967295; 
SELECT * FROM v3 AS a91 LEFT JOIN ( SELECT count ( * ) AS y, a92.c50 FROM ( v82 AS a92 INNER JOIN v54 AS a93 ON a93.c65 = a93.c57 ) AS y WHERE a92.c2 > 0 GROUP BY a92.c52 ORDER BY 4294967295 ) AS y ON a91.c16 = a91.c20 ORDER BY 0; 
SELECT * FROM v82 AS a94 GROUP BY a94.c48, abs ( a94.c2 ) ORDER BY 2147483647; 
SELECT a95.c51, count ( a95.c48 ) FROM v82 AS a95 ORDER BY 0; 
SELECT c2, count ( c7 ) WHERE c45 ORDER BY ( ( c19 + - 0 ) % 16 ) != 0 + 16; 
WITH v96 ( c98 ) AS ( WITH v99 AS ( SELECT ( SELECT min ( c98 ) OVER ( ORDER BY 16 ) ORDER BY 0 ) FROM v96 AS a100 GROUP BY c98 ORDER BY 127 ) SELECT 0 ORDER BY 127 ) SELECT * FROM v96 AS a97 ORDER BY 0; 
SELECT a101.c1, count ( ( NOT ( a101.c51 IS NULL ) ) AND ( NOT ( a101.c2 IS NULL ) ) ) FROM v82 AS a101 ORDER BY 16; 
