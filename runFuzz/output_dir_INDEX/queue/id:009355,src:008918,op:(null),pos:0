CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17 PRIMARY KEY ON CONFLICT REPLACE, c18, c19, c20 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i21 ON v3 ( c11 ); 
CREATE VIRTUAL TABLE v22 USING rtree ( c23, c24, c25, c26, c27, c28, c29, c30, c31 ); 
CREATE TABLE v32 ( c33, c34, c35, c36, c37 INT PRIMARY KEY ON CONFLICT REPLACE, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49 TEXT UNIQUE NOT NULL ); 
UPDATE v0 SET c1 = ( c1 + 18446744073709551488 ) % count ( c2 ) WHERE c1 = 255; 
ATTACH ( hex ( 18446744073709551488 ) ) AS sqlite_master; 
CREATE INDEX i50 ON v22 ( c23 ); 
CREATE TABLE v51 ( c52 DEFAULT x'ABCD' DEFAULT 255, c53 NOT NULL DEFAULT 255, c54 NOT NULL ON CONFLICT REPLACE DEFAULT 0, c55 NOT NULL ON CONFLICT IGNORE DEFAULT 255, c56 NOT NULL ON CONFLICT ABORT DEFAULT 255 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v51 BEGIN DELETE FROM v51; END; 
ALTER TABLE v22 RENAME TO v57; 
UPDATE v51 SET c53 = 'v0' WHERE c54 = 255; 
CREATE INDEX i58 ON v57 ( c2 ); 
CREATE TABLE v59 ( c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82 TEXT, c83, c84 INT, c85, c86, c87, c88, c89, c90, c91 INT UNIQUE ON CONFLICT IGNORE, c92, c93, c94, c95 INTEGER PRIMARY KEY, c96 ); 
CREATE INDEX i97 ON v57 ( c29 ); 
CREATE INDEX i98 ON v32 ( c41 ); 
SELECT ( SELECT min ( ) OVER ( ORDER BY 255 ) ORDER BY 18446744073709551488 ) FROM v0 AS a99 GROUP BY a99.c2 ORDER BY 255; 
SELECT a100.c54, max ( a100.c54 || a100.c56 ) FROM v51 AS a100 ORDER BY 255; 
SELECT a101.c39, count ( a101.c37 ) FROM v32 AS a101 ORDER BY 255; 
SELECT max ( a102.c52 || a102.c54 ) FROM v51 AS a102 ORDER BY 18446744073709551615; 
SELECT * FROM v59 AS a103 NATURAL JOIN v57 AS a104 ORDER BY 18446744073709551615; 
SELECT * FROM v51 AS a105 WHERE a105.c54 = a105.c55 % 255 ORDER BY 18446744073709551615; 
WITH v106 ( c108 ) AS ( SELECT c2, max ( c2 || c14 ) ORDER BY 255 ) SELECT * FROM v106 AS a107 ORDER BY 9223372036854775807; 
SELECT * FROM v51 AS a109 WHERE a109.c53 IS NOT NULL ORDER BY 255; 
SELECT * FROM v3 AS a110 NATURAL JOIN v57 AS a111 ORDER BY 255; 
SELECT * FROM v57 AS a112 ORDER BY 0; 
