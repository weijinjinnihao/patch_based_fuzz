CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 'two-b' ), ( 992, 'utf-16' ), ( 992, 'v1' ); 
INSERT INTO v0 VALUES ( 992, 992, 992 ), ( 18446744073709551488, 18446744073709551488, 992 ), ( 992, 992, 992 ); 
CREATE TABLE v7 ( c8 INTEGER PRIMARY KEY, c9 INTEGER NOT NULL CHECK( c9 > c9 ), c10 INTEGER NOT NULL CHECK( c8 > c8 * 18446744073709551488 ), c11 INTEGER NOT NULL CHECK( c9 BETWEEN c8 < c11 AND c9 ) ); 
CREATE INDEX i12 ON v7 ( c11 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3; END; 
CREATE INDEX i13 ON v0 ( c1 ); 
ALTER TABLE v3 RENAME TO v14; 
CREATE INDEX i15 ON v7 ( c9 ); 
CREATE INDEX i16 ON v0 ( c1 ); 
UPDATE v7 SET c11 = 'x' WHERE c9 = 4294967295; 
SELECT * FROM v0 AS a17 WHERE a17.c2 = a17.c1 ORDER BY 18446744073709551615; 
SELECT * FROM v14 AS a18 WHERE a18.c4 != 18446744073709551488 ORDER BY 992; 
SELECT count ( a19.c2 ) FROM v0 AS a19 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 0; 
SELECT * FROM v7 AS a20, v0 AS a21 ORDER BY 992; 
SELECT * FROM v7 AS a22 ORDER BY 18446744073709518848; 
SELECT * FROM v14 AS a23, v0 AS a24 ORDER BY 18446744073709551488; 
SELECT ( CASE WHEN a25.c2 = 992 THEN 18446744073709551488 ELSE ( a25.c2 + 18446744073709551488 ) / 992 END ) AS y, count ( * ) FROM v14 AS a25 ORDER BY 992; 
SELECT * FROM v7 AS a26 ORDER BY 18446744073709551488; 
SELECT lower ( a27.c6 ) FROM v14 AS a27, v0 AS a28 ORDER BY 18446744073709551615; 
