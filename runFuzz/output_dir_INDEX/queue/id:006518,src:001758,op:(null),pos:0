CREATE TABLE v0 ( c1, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c2, c1 ) = ( ( SELECT CASE WHEN c2 % 18446744073709551488 != 18446744073709551488 THEN c2 END, c1, c1 FROM v0 AS a4 WHERE c1 <= 18446744073709551488 ORDER BY max ( c2 + c1 * 18446744073709551488 ) + 18446744073709551488, min ( c1, avg ( c2 ) ) + 2147483647 ), 18446744073709551488 ); END; 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c1 = 'again' WHERE c2 = - 18446744073709551615; END; 
CREATE INDEX i6 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v7; 
CREATE INDEX i8 ON v7 ( c2 ); 
CREATE INDEX i9 ON v7 ( c1 ); 
SELECT count ( ( NOT ( a10.c1 IS NULL ) ) AND ( NOT ( a10.c2 IS NULL ) ) ) FROM v7 AS a10 ORDER BY 18446744073709551488; 
SELECT a11.c2 FROM v7 AS a11 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a12 GROUP BY a12.c1 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a13, v7 AS a14 NATURAL JOIN v7 AS a15 ORDER BY 18446744073709551488; 
SELECT ( ( hex ( 18446744073709551615 ) ) % 255 ) FROM v7 AS a16, v7 AS a17 ORDER BY 0; 
SELECT * FROM v7 AS a18 ORDER BY a18.c1 COLLATE nocase; 
SELECT * FROM v7 AS a19, v7 AS a20 NATURAL JOIN v7 AS a21 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v7 AS a22 GROUP BY 18446744073709551615 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a23 GROUP BY a23.c2 ORDER BY 18446744073709551488; 
