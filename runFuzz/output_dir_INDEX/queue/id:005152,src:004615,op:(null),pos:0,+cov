CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT FAIL, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v3 ( c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 'v0' ), ( 18446744073709551488, 'v1' ), ( 487, 'v1' ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 18446744073709551488, 487 ), ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, x'b1', 18446744073709551488 ); 
CREATE TRIGGER y AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c2 = c4; END; 
CREATE INDEX i10 ON v3 ( c6 ); 
UPDATE v0 SET c1 = 'v0' WHERE c1 = 487; 
CREATE INDEX i11 ON v3 ( c4 ); 
SELECT * ORDER BY 127; 
SELECT * FROM v0 AS a12 WHERE hex ( 487 ) ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a13, v3 AS a14 ORDER BY 487; 
SELECT * FROM v3 AS a15 ORDER BY a15.c5 COLLATE binary; 
SELECT * FROM v3 AS a16 ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a17 GROUP BY y ( a17.c6 ) ORDER BY 487; 
SELECT * FROM v0 AS a18 GROUP BY a18.c2, abs ( a18.c2 ) ORDER BY 487; 
SELECT * FROM v3 AS a19, v0 AS a20 NATURAL JOIN v3 AS a21 ORDER BY 0; 
WITH RECURSIVE v0 ( c23 ) AS ( SELECT max ( a22.c4 || v0.c1 ) ORDER BY 18446744073709551488 ) SELECT * FROM v3 AS a22 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a24 GROUP BY y ( a24.c1 ) ORDER BY 18446744073709551488; 
