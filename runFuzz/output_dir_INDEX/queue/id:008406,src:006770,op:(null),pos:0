CREATE TABLE v0 ( c1 NOT NULL, c2 NOT NULL DEFAULT 18446744073709551488, c3 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744073709551488, c4 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744073709551488, c5 NOT NULL ON CONFLICT ABORT DEFAULT 16 ); 
INSERT INTO v0 ( c4, c2, c2, c5, c5 ) VALUES ( 16, 18446744073709551488, 16, 18446744073709551488, 18446744073709551488 ); 
DELETE FROM v0; 
INSERT INTO v0 ( c3, c5, c5, c5, c4 ) VALUES ( 16, 16, 0, 18446744073709551488, 16 ); 
INSERT OR IGNORE INTO v0 ( c2, c4, c5, c5 ) VALUES ( 100, 100, 16, 16 ); 
CREATE INDEX i6 ON v0 ( c4 ); 
INSERT OR REPLACE INTO v0 ( c1, c5, c3, c3, c2 ) VALUES ( 16, 0, NULL, 18446744073709551488, 100 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE TABLE v8 ( c9, c10, c11, c12, c13, c14, c15, c16, c17, c18 INT UNIQUE ON CONFLICT IGNORE, c19 AS( c31 + c14 - c25 ) NOT NULL, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31 REFERENCES t1 DEFAULT 16 DEFAULT 18446744073709551488, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43 PRIMARY KEY, CHECK( ( ( c27 + 16 ) % 16 ) != 18446744073709551488 ) ) WITHOUT ROWID; 
INSERT OR IGNORE INTO v8 ( c33, c31, c23, c16, c37 ) VALUES ( 18446744073709551488, 18446744073709551488, NULL, 16, 18446744073709551488 ); 
UPDATE OR IGNORE v8 SET c11 = NULL, c32 = c40, c22 = c30; 
UPDATE v8 SET c41 = NULL, c32 = c30, c41 = c16; 
CREATE INDEX i44 ON v0 ( c4 ); 
INSERT OR ABORT INTO v0 ( c3, c1, c4, c2 ) VALUES ( 16, 16, 100, 16 ); 
CREATE INDEX i45 ON v8 ( c27 ); 
CREATE INDEX i46 ON v8 ( c32 ); 
SELECT * FROM v8 AS a47, v8 AS a48 NATURAL JOIN v8 AS a49 ORDER BY 16; 
SELECT * FROM v8 AS a50, v0 AS a51 NATURAL JOIN v8 AS a52 ORDER BY 100; 
SELECT a53.c4, max ( a53.c3 || a53.c5 ) FROM v0 AS a53 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a54 GROUP BY 8 ORDER BY 18446744073709551488; 
SELECT hex ( ) FROM v0 AS a55 ORDER BY 16; 
SELECT * FROM v8 AS a56 ORDER BY 18446744073709551615; 
SELECT a57.c11, count ( a57.c13 ) FROM v8 AS a57 ORDER BY 100; 
SELECT count ( c5 ) ORDER BY 18446744073709551488; 
SELECT * FROM v8 AS a58, v0 AS a59 NATURAL JOIN v0 AS a60 ORDER BY 100; 
SELECT * FROM v8 AS a61 NATURAL JOIN v0 AS a62 ORDER BY 16; 
