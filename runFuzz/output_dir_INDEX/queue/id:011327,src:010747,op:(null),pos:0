CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 2147483647, ( c2 + 2147483647 ) ), ( 2147483647, 'a' ), ( 2147483647, 'v0' ); 
CREATE INDEX i7 ON v0 ( c2 ); 
INSERT INTO v3 VALUES ( 18446744071562067968, 2147483647, 2147483647 ), ( 2147483647, 2147483647, 255 ), ( 2147483647, 2147483647, 0 ); 
CREATE TABLE v8 ( c9, c10, c11 INTEGER NOT NULL CHECK( c10 > c12 ), c12 INTEGER NOT NULL CHECK( c12 > c10 * 18446744071562067968 ), c13 INTEGER NOT NULL CHECK( c11 BETWEEN c9 AND c11 ) ); 
CREATE INDEX i14 ON v0 ( c2 ); 
ALTER TABLE v3 RENAME TO v15; 
CREATE INDEX i16 ON v15 ( c1 ); 
CREATE INDEX i17 ON v0 ( c2 ); 
ALTER TABLE v15 RENAME TO v18; 
UPDATE v18 SET c2 = 'v1' WHERE c6 = 18446744073709551488; 
CREATE INDEX i19 ON v18 ( c2 ); 
SELECT * FROM v18 AS a20, v18 AS a21 NATURAL JOIN v18 AS a22 ORDER BY 2147483647; 
SELECT a23.c4, count ( a23.c4 ) FROM v18 AS a23 ORDER BY 8; 
SELECT * FROM v0 AS a24 WHERE a24.c1 = a24.c2 >= 2147483647 ORDER BY 2147483647; 
SELECT * ORDER BY 8; 
SELECT * FROM v0 AS a25 ORDER BY a25.c2 COLLATE nocase; 
WITH RECURSIVE v18 AS ( SELECT 18446744073709551488 y ORDER BY 2147483647 ) SELECT * FROM v8 AS a26 ORDER BY 18446744073709551488; 
SELECT * FROM v18 AS a27, v8 AS a28 NATURAL JOIN v18 AS a29 ORDER BY 18446744073709551488; 
SELECT a30.c2 FROM v0 AS a30 ORDER BY 18446744073709551488; 
SELECT * FROM v18 AS a31 LEFT JOIN ( SELECT count ( * ) AS y, a33.c2 FROM ( v18 AS a32 NATURAL JOIN v0 AS a33 ) AS y WHERE a31.c2 > 16 GROUP BY a31.c2 ORDER BY 255 ) AS y ON a31.c1 = y ( a31.c2 ) ORDER BY 0; 
SELECT * FROM v0 AS a34 WHERE a34.c1 IS NOT NULL ORDER BY 2147483647; 
