PRAGMA foreign_keys = 3; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ); 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 127 ); 
INSERT INTO v0 VALUES ( 18446744073709518848 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE TABLE v5 ( c6 INTEGER REFERENCES t1 ( c6 ) ); 
INSERT INTO v5 VALUES ( 127 ); 
INSERT INTO v0 VALUES ( 127 ); 
DELETE FROM v5 WHERE c6 = 18446744073709518848; 
CREATE INDEX i7 ON v5 ( c6 ); 
DELETE FROM v0 WHERE CASE WHEN c1 != 'maggy' THEN 18446744073709518848 ELSE 18446744073709518848 END > 18446744073709551488; 
SELECT a8.c1, max ( a8.c1 || a8.c1 ) FROM v0 AS a8 ORDER BY 127; 
SELECT * FROM v5 AS a9 ORDER BY 16; 
SELECT max ( a10.c1 || a10.c1 ) FROM v0 AS a10 ORDER BY 127; 
SELECT * FROM v0 AS a11 ORDER BY a11.c1 COLLATE binary; 
SELECT a12.c6, a12.c6 FROM v5 AS a12 RIGHT JOIN v0 AS a13 ON a13.c1 = 18446744073709518848 ORDER BY 100; 
SELECT * FROM v0 AS a14, v5 AS a15 ORDER BY 0; 
SELECT * FROM v0 AS a16 ORDER BY 100; 
SELECT * ORDER BY 100; 
WITH v5 ( c18 ) AS ( SELECT 1201900000 ORDER BY 127 ) SELECT * FROM v0 AS a17 ORDER BY 127; 
SELECT count ( ( NOT ( a19.c6 IS NULL ) ) AND ( NOT ( a19.c6 IS NULL ) ) ) FROM v5 AS a19 ORDER BY 100; 
