CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 8, '2' ), ( 8, 'v1' ), ( 8, 'abc1' ); 
INSERT INTO v3 VALUES ( 8, 0, 18446744073709551488 ), ( 8, 8, 8 ), ( 18446744073709551488, 9223372036854775807, 18446744073709551488 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
INSERT INTO v0 SELECT * FROM v3 AS a8, v3 AS a9 NATURAL JOIN v3 AS a10 ORDER BY 18446744073709551488; 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0; END; 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v3 RENAME TO v12; 
CREATE INDEX i13 ON v12 ( c5 ); 
CREATE INDEX i14 ON v12 ( c6 ); 
UPDATE v12 SET c5 = 'v0' WHERE c5 = 8; 
SELECT * FROM v12 AS a15 WHERE a15.c4 = a15.c5 ORDER BY 18446744073709518848; 
SELECT * FROM v0 AS a16 WHERE a16.c1 != 18446744073709551488 ORDER BY 8; 
SELECT count ( a17.c2 ) FROM v0 AS a17 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 8; 
SELECT * FROM v0 AS a18, v12 AS a19 ORDER BY 8; 
SELECT * FROM v12 AS a20 ORDER BY 127; 
SELECT * FROM v12 AS a21, v0 AS a22 ORDER BY 18446744073709551488; 
SELECT ( CASE WHEN a23.c6 = 16 THEN 18446744073709518848 ELSE ( a23.c1 + 0 ) / 18446744073709518848 END ) AS y, count ( * ) FROM v12 AS a23 ORDER BY 9223372036854775807; 
SELECT * FROM v12 AS a24 ORDER BY 8; 
SELECT lower ( a25.c2 ) FROM v0 AS a25, v12 AS a26 ORDER BY 8; 
