CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT OR REPLACE INTO v0 VALUES ( 16, 'M' ), ( 16, 'D' ), ( 16, 'Parent' ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 16, 16 ), ( 16, 18446744073709551615, 127 ), ( 16, 16, 18446744073709551615 ); 
CREATE INDEX i10 ON v5 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c2 = c1; END; 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v12 SET c1 = 'v1' WHERE c1 = 18446744073709551615; 
SELECT * FROM v12 AS a13 ORDER BY max ( a13.c2 + a13.c1 * 18446744073709551615 ) + 16, min ( a13.c1, avg ( a13.c1 ) ) + 16; 
SELECT * FROM v12 AS a14, v5 AS a15 ORDER BY 0; 
SELECT * FROM v5 AS a16 GROUP BY 18446744073709551615 ORDER BY 255; 
SELECT * FROM v12 AS a17 ORDER BY 0; 
SELECT a18.c6, a18.c8 FROM v5 AS a18 LEFT JOIN v12 AS a19 ON a19.c2 = a19.c2 y ORDER BY 16; 
SELECT * FROM v5 AS a20 GROUP BY y ( a20.c6 ) ORDER BY 16; 
SELECT * ORDER BY 18446744073709551615; 
SELECT a21.c2, max ( a21.c2 || a21.c2 ) FROM v12 AS a21 ORDER BY 18446744073709551488; 
WITH v22 ( c24 ) AS ( SELECT 0 ORDER BY 18446744073709551488 ) SELECT * FROM v22 AS a23 ORDER BY 18446744073709551615; 
SELECT a25.c2 AS y, a25.c2 || a25.c2 AS y FROM v12 AS a25 WHERE + a25.c2 = 'v1' ORDER BY 18446744073709551615; 
