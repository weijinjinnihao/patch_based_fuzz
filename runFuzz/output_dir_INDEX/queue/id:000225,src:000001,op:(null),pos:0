CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE TABLE v3 ( c4 INT PRIMARY KEY, c5 REAL ); 
CREATE INDEX i6 ON v3 ( c5 ); 
CREATE VIEW v7 AS SELECT c4, c1 FROM v0 AS a8 LEFT JOIN v3 AS a9 ON c1 = c1 ORDER BY 1.250000; 
CREATE VIEW v10 AS SELECT id, id FROM v3 AS a11 RIGHT JOIN v7 AS a12 ON c5 = c5 ORDER BY 1.250000; 
CREATE VIEW v13 AS SELECT c5, c4 FROM v3 AS a14 LEFT JOIN v3 AS a15 ON c5 = c5 ORDER BY 10; 
CREATE VIEW v16 AS SELECT id, c1 FROM v0 AS a17 RIGHT JOIN v10 AS a18 ON apr = apr ORDER BY 1.250000; 
INSERT INTO v7 ( id ) VALUES ( 10 ); 
INSERT INTO v3 ( c5, c5 ) VALUES ( 1.250000, 1.250000 ); 
CREATE INDEX i19 ON v7 ( id ); 
INSERT INTO v16 ( id ) VALUES ( 1.250000 ); 
CREATE INDEX i20 ON v10 ( id ); 
CREATE INDEX i21 ON v13 ( id ); 
INSERT INTO v10 ( id, id ) VALUES ( 1.250000, 1.250000 ); 
PRAGMA automatic_index = 8; 
SELECT a22.c5, count ( a22.c4 ) FROM v3 AS a22 ORDER BY 8; 
SELECT * FROM v10 AS a23, v0 AS a24 ORDER BY 1.250000; 
SELECT * FROM v13 AS a25 ORDER BY 18446744073709551488; 
SELECT * FROM v10 AS a26 ORDER BY a26.id COLLATE NOCASE; 
WITH v10 ( c28 ) AS ( SELECT 1.250000 ORDER BY 1.250000 ) SELECT * FROM v7 AS a27 ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a29 ORDER BY 1; 
SELECT avg ( id ) FROM ( SELECT * FROM v16 AS a30 RIGHT JOIN v7 AS a31 ON a30.id ORDER BY 1.250000 ) AS y ORDER BY 18446744073709551615; 
SELECT * ORDER BY 100; 
SELECT 2147483647 - ( id + id ) WHERE ( CASE WHEN c4 != 'x' THEN 10 ELSE 18446744073709551488 END ) ORDER BY 1.250000; 
SELECT * FROM v7 AS a32 ORDER BY a32.id, a32.apr, a32.id; 
