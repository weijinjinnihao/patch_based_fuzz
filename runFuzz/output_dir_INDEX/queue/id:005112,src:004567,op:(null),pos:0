CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE TABLE v8 ( c9 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c10 UNIQUE ON CONFLICT IGNORE, c11 UNIQUE ON CONFLICT REPLACE ) WITHOUT ROWID; 
CREATE INDEX i12 ON v0 ( c1 ); 
INSERT INTO v8 VALUES ( 100, 'v1' ), ( 100, 'v1' ), ( 18446744071562067968, 'x' ); 
INSERT INTO v3 VALUES ( 18446744071562067968, 1.100000, 100 ), ( 100, 18446744071562067968, 222 ), ( 1.100000, 18446744073709551615, 4294967295 ); 
CREATE INDEX i13 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v8 WHERE c11 = c1; END; 
ALTER TABLE v8 RENAME TO v14; 
CREATE INDEX i15 ON v14 ( c9 ); 
SELECT a16.c11, max ( a16.c10 || a16.c11 ) FROM v14 AS a16 ORDER BY 100; 
SELECT * FROM v0 AS a17 ORDER BY 18446744071562067968; 
SELECT a18.c10, count ( ( NOT ( a18.c9 IS NULL ) ) AND ( NOT ( a18.c10 IS NULL ) ) ) FROM v14 AS a18 ORDER BY 18446744071562067968; 
SELECT count ( a19.c2 ) FROM v0 AS a19 ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a20 ORDER BY 1; 
WITH RECURSIVE v21 AS ( SELECT c5 FROM v21 AS a23 WHERE c1 LIKE 'first' ORDER BY 4294967295 ) SELECT * FROM v21 AS a22 ORDER BY 18446744071562067968; 
WITH v24 AS ( SELECT 10 y ORDER BY 100 ) SELECT c11 % 0, c9 / 4294967295, c1, printf ( 'v0', c10 ) FROM v24 AS a25 ORDER BY 100; 
SELECT * FROM v0 AS a26 ORDER BY 1; 
SELECT * FROM ( SELECT 18446744071562067968 ORDER BY 0 ) AS y, ( SELECT 10 ORDER BY 100 ) AS y ON likely ( 100 OR 18446744071562067968 ) IS 100 ORDER BY 100; 
SELECT * FROM v3 AS a27 ORDER BY a27.c4 COLLATE nocase; 
