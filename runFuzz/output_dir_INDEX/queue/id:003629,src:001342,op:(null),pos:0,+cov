CREATE TABLE v0 ( c1 INTEGER, c2 TEXT, c3 BLOB, CHECK( coalesce ( c2, c1 ) ) ); 
PRAGMA writable_schema = 3; 
UPDATE v0 SET c2 = 'v1' WHERE c2 = c1 NOT NULL; 
PRAGMA writable_schema = 5; 
INSERT INTO v0 VALUES ( 0, 8, 8 ); 
ALTER TABLE v0 RENAME COLUMN c4 TO c4; 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE TABLE v6 ( c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, FOREIGN KEY ( c12, c10, c12, c8, c15, c7, c8, c19, c18, c14, c8, c18 ) REFERENCES t4 ); 
CREATE INDEX i20 ON v0 ( c2 ); 
CREATE TABLE v21 ( c22, c23, c24 ); 
CREATE INDEX i25 ON v6 ( c12 ); 
INSERT INTO v6 VALUES ( 0, 0, 0 ); 
CREATE INDEX i26 ON v21 ( c24 ); 
CREATE INDEX i27 ON v6 ( c7 ); 
CREATE TABLE IF NOT EXISTS v28 ( c29, c30 TEXT, c31, PRIMARY KEY ( c31, c31 ), UNIQUE ( c29 ) ); 
SELECT a32.c3, count ( ( NOT ( a32.c1 IS NULL ) ) AND ( NOT ( a32.c3 IS NULL ) ) ) FROM v0 AS a32 ORDER BY 100; 
SELECT * FROM v0 AS a33, v0 AS a34 NATURAL JOIN v0 AS a35 ORDER BY 18446744073709551488; 
SELECT * FROM v6 AS a36, v0 AS a37 NATURAL JOIN v21 AS a38 ORDER BY 255; 
SELECT * FROM v28 AS a39, v21 AS a40 ORDER BY 8; 
SELECT * FROM v0 AS a41 ORDER BY 8 COLLATE hex; 
WITH v28 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT * FROM v0 AS a42 ORDER BY 3; 
WITH RECURSIVE v6 AS ( SELECT 100 y ORDER BY 100 ) SELECT * FROM v0 AS a43 ORDER BY 0; 
SELECT max ( a44.c18 || a44.c12 ) FROM v6 AS a44 ORDER BY 255; 
SELECT a45.c1, ( + a45.c3 ) y, ( + a46.c31 ) y, ( + a46.c29 ) y, NOT EXISTS ( SELECT NULL FROM v28 AS a47 ORDER BY 18446744071562067968 ), CASE a46.c29 WHEN 18446744071562067968 THEN 18446744071562067968 WHEN 3 THEN 127 WHEN 255 THEN 'x' END, 'x' FROM v0 AS a45 LEFT JOIN v28 AS a46 ON a46.c31 = a46.c29 ORDER BY 2147483647; 
SELECT 100 IN ( SELECT a48.c1, a48.c1 FROM v0 AS a48 ORDER BY 0 ) ORDER BY 4294967295; 
