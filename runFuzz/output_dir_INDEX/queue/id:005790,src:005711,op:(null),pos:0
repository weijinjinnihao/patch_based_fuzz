CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE TABLE v4 ( c5, c6, c7, c8, c9, c10 INTEGER, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46 INTEGER PRIMARY KEY, c47 ); 
CREATE INDEX i48 ON v0 ( c2 ); 
CREATE TABLE v49 ( c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63 PRIMARY KEY ON CONFLICT REPLACE, c64, c65, c66 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i67 ON v49 ( c65 ); 
CREATE VIRTUAL TABLE v68 USING rtree ( c69, c70, c71, c72, c73, c74, c75, c76, c77 ); 
CREATE TABLE v78 ( c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95 TEXT UNIQUE NOT NULL ); 
INSERT INTO v78 VALUES ( 100, 'x' ), ( 10, 'v1' ), ( ( c88 || c89 || c88 ) != 'v0', 'v1' ); 
CREATE INDEX i96 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 100, 'C' ), ( 100, '10000 500' ), ( 10, 'M' ); 
INSERT INTO v4 SELECT * FROM v4 AS a97 ORDER BY ( ( hex ( 18446744073709551488 ) ) % 10 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v68; END; 
ALTER TABLE v49 RENAME TO v98; 
UPDATE v4 SET c35 = 'B' WHERE c32 = 100; 
CREATE INDEX i99 ON v68 ( c75 ); 
SELECT * FROM v4 AS a100 ORDER BY 'v1'; 
SELECT * FROM v98 AS a101 WHERE a101.c57 IS 100 ORDER BY 0; 
SELECT * FROM v4 AS a102 ORDER BY 10; 
SELECT * FROM v4 AS a103 ORDER BY 18446744073709551488; 
WITH RECURSIVE v68 ( c105 ) AS ( SELECT 0 ORDER BY 9223372036854775807 ) SELECT * FROM v68 AS a104 ORDER BY 0; 
WITH v106 AS ( SELECT * FROM v106 AS a108 ORDER BY c19, c31 ) SELECT * FROM v106 AS a107 ORDER BY 100; 
SELECT * FROM v78 AS a109, v98 AS a110 NATURAL JOIN v68 AS a111 ORDER BY 10; 
SELECT * FROM v98 AS a112 WHERE count ( * ) >= 100 = 'v1' ORDER BY 9223372036854775807; 
SELECT a113.c94, a113.c82 FROM v78 AS a113 WHERE a113.c86 = 'x' ORDER BY 100; 
SELECT a114.c74, a114.c77 FROM v68 AS a114 ORDER BY a114.c75 COLLATE NOCASE; 
