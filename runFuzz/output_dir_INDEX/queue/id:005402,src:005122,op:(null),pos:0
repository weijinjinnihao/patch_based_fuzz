CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 + c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( 'three', 0, 0 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TABLE v9 ( c10, c11 INTEGER UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 DEFAULT 0 DEFAULT 0, c46, c47, c48, c49 INTEGER PRIMARY KEY, c50 ); 
CREATE INDEX i51 ON v4 ( c6 ); 
CREATE INDEX i52 ON v9 ( c26 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v0 WHERE c6 = c1; END; 
INSERT INTO v0 VALUES ( ( ( c1 + 0 ) % 0 ) < 0, 'v1', 'v1' ); 
CREATE INDEX i53 ON v9 ( c19 ); 
ALTER TABLE v9 RENAME TO v54; 
UPDATE v54 SET c28 = 'v0' WHERE c34 = 255; 
SELECT * FROM v54 AS a55 WHERE CASE WHEN a55.c25 != 'x' THEN 0 ELSE 0 END > 0 ORDER BY 18446744073709551488; 
SELECT * FROM v54 AS a56 WHERE a56.c24 = a56.c42 || a56.c44 ORDER BY 0; 
SELECT count ( a57.c2 ) FROM v0 AS a57 ORDER BY 0; 
SELECT a58.c7, count ( ( NOT ( a58.c7 IS NULL ) ) AND ( NOT ( a58.c6 IS NULL ) ) ) FROM v4 AS a58 ORDER BY 18446744073709551615; 
SELECT * FROM v54 AS a59 GROUP BY a59.c36, abs ( a59.c24 ) ORDER BY 0; 
SELECT max ( a60.c2 || a60.c1 ) FROM v0 AS a60 ORDER BY 18446744073709551488; 
SELECT * FROM v54 AS a61 GROUP BY a61.c17, abs ( a61.c36 ) HAVING count ( * ) >= 0 ORDER BY 127; 
SELECT * FROM v4 AS a62 LEFT JOIN ( SELECT count ( * ) AS y, a64.c31 FROM ( v54 AS a63 INNER JOIN v54 AS a64 ON a63.c29 = a64.c32 ) AS y WHERE a64.c21 > 0 GROUP BY a63.c28 ORDER BY 8 ) AS y ON a62.c7 = a62.c5 y ORDER BY 8; 
SELECT * FROM v54 AS a65 WHERE a65.c18 = 18446744073709551488 ORDER BY 127; 
SELECT * FROM v0 AS a66, v4 AS a67 NATURAL JOIN v0 AS a68 ORDER BY 127; 
