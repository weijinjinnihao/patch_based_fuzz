CREATE TABLE v0 ( c1 BLOB PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c3 > c1 ), c3 INTEGER NOT NULL CHECK( c2 > c1 * 127 ), c4 INTEGER NOT NULL ON CONFLICT REPLACE CHECK( c4 BETWEEN c1 AND c2 ) ); 
CREATE INDEX i5 ON v0 ( c2 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
INSERT INTO v0 ( c1, c2, c2, c2 ) VALUES ( 127, 0, 18446744073709551488, 0 ), ( 127, 0, 0, 0 ), ( 127, 0, 8, 127 ) ON CONFLICT ( c1 ) DO UPDATE SET c1 = c4, c4 = c1; 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c4 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
UPDATE v0 SET c1 = 18446744073709551488 WHERE c4 = 0; 
UPDATE v0 SET c2 = c3 * 0 WHERE c2 = 0; 
SELECT * FROM v0 AS a10 ORDER BY 18446744073709551488 COLLATE binary, 0 COLLATE hex; 
WITH v0 ( c13, c14, c15, c16, c17, c18 ) AS ( SELECT 18446744073709551488 y ORDER BY 0 ) SELECT a11.c1, a11.c18 FROM v0 AS a11 LEFT JOIN v0 AS a12 ON c16 != 18446744073709551488 = c15 ORDER BY 18446744073709551488; 
SELECT max ( a20.c4, a19.c2 ), min ( a20.c18, a19.c1 ) FROM v0 AS a19, v0 AS a20 ORDER BY 0; 
SELECT * FROM v0 AS a21, v0 AS a22 NATURAL JOIN v0 AS a23 ORDER BY 0; 
SELECT * FROM v0 AS a24 ORDER BY 127; 
SELECT a26.c1, a26.c2 FROM v0 AS a25 RIGHT JOIN v0 AS a26 ON a25.c13 = a26.c1 y ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a27 ORDER BY 0; 
SELECT * ORDER BY 0; 
SELECT * FROM v0 AS a28 WHERE a28.c4 NOT NULL ORDER BY 127; 
SELECT ( ( 18446744073709551488 IS NOT 18446744071562067968 ) OR NOT ( 0 IS 10 OR ( a29.c2 = 18446744073709551488 ) ) ) IS 16 FROM v0 AS a29 y ORDER BY 18446744073709551615; 
