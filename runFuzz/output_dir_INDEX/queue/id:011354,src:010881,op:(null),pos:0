ATTACH 'count.test cases for NOT INDEXED' AS sqlite_master; 
CREATE TABLE v0 ( c1, c2 ); 
INSERT INTO v0 VALUES ( 10, 'v0' ); 
CREATE TABLE v3 ( c4, c5 ); 
INSERT INTO v3 VALUES ( 10, 'x' ); 
CREATE TABLE v6 ( c7, c8 ); 
CREATE INDEX i9 ON v3 ( c4 ); 
INSERT INTO v0 VALUES ( 10, 'v0' ); 
CREATE TABLE v10 ( c11, c12 INTEGER UNIQUE ON CONFLICT FAIL, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37 PRIMARY KEY, CHECK( ( ( c26 + 10 ) % 18446744071562067968 ) != 18446744073709551615 ) ) WITHOUT ROWID; 
CREATE TABLE v38 ( c39, c40, c41, c42, c43 INT, c44, c45, c46, c47, c48, c49, c50, c51, c52 PRIMARY KEY ON CONFLICT REPLACE, c53, c54, c55 TEXT UNIQUE NOT NULL ); 
INSERT INTO main . v6 VALUES ( 0, '40000 400 1 1' ); 
CREATE TABLE main . v56 ( c57, c58 ); 
INSERT INTO main . v38 VALUES ( 18446744073709551488, 'x' ); 
CREATE INDEX i59 ON v10 ( c11 ); 
ANALYZE; 
UPDATE v56 SET c57 = 10; 
UPDATE v3 SET c5 = 10; 
UPDATE v10 SET c30 = 0; 
CREATE INDEX i60 ON v56 ( c57 ); 
CREATE INDEX i61 ON v3 ( c5 ); 
CREATE INDEX i62 ON v38 ( c51 ); 
WITH v63 AS ( WITH RECURSIVE v64 ( c70 ) AS ( SELECT max ( c7 || c13 ) ORDER BY 10 ) SELECT * FROM ( v63 AS a65 ), ( v63 AS a66 ), ( v63 AS a67 ), ( v63 AS a68 NATURAL JOIN v64 AS a69 ) WHERE c29 = c32 + 18446744073709551615 AND c8 = 10 AND c1 = c8 + 10 ORDER BY 10 ) VALUES ( x'68617265', '2-two', 'x' ) ORDER BY 10; 
WITH v71 AS ( SELECT * FROM v71 AS a73 JOIN v71 AS a74 USING ( c40, c57, c1, c5, c7, c4, c58, c57 ) WHERE c58 = c4 >= 18446744073709551615 ORDER BY 18446744073709551615 ) SELECT * FROM v71 AS a72 ORDER BY 0; 
SELECT * FROM v56 AS a75 GROUP BY a75.c57, a75.c58, count ( a75.c57 ) ORDER BY 18446744073709551615; 
SELECT count ( ( NOT ( a76.c5 IS NULL ) ) AND ( NOT ( a76.c5 IS NULL ) ) ) FROM v3 AS a76 ORDER BY 10; 
SELECT * FROM ( SELECT 16 FROM v3 AS a78 NATURAL JOIN v10 AS a79 ORDER BY 10 ) AS y, v3 AS a77 ON likely ( 10 OR 10 ) OR 4294967295 ORDER BY 18446744071562067968; 
SELECT * FROM v6 AS a80 ORDER BY 8; 
SELECT * FROM v3 AS a81, v0 AS a82 NATURAL JOIN v0 AS a83 ORDER BY 18446744073709551488; 
WITH v84 ( c86 ) AS ( WITH v87 AS ( WITH v88 AS ( SELECT 18446744073709551488 y ORDER BY 18446744073709551615 ) SELECT avg ( c86 ) FROM ( SELECT * ORDER BY x'616263' ) AS y ORDER BY 18446744073709551615 ) SELECT 0 ORDER BY 4294967295 ) SELECT * FROM v84 AS a85 ORDER BY 255; 
SELECT a89.c58, count ( a89.c58 ) FROM v56 AS a89 ORDER BY 4294967295; 
SELECT * FROM v10 AS a90 NATURAL JOIN v0 AS a91 ORDER BY 10; 
