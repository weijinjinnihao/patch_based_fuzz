CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c3 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE INDEX i6 ON v0 ( c3 ); 
DROP TABLE IF EXISTS v0; 
INSERT INTO v0 VALUES ( 2147483647, 'v0' ), ( 2147483647, 'mad' ), ( 100, 'GHI' ); 
INSERT INTO v0 VALUES ( 2147483647, 0, 0 ), ( 2147483647, 2147483647, 18446744073709551488 ), ( 8, x'b1', 2147483647 ); 
CREATE TABLE v7 ( c8, c9 INTEGER UNIQUE ON CONFLICT FAIL, c10, PRIMARY KEY ( c10, c10, c9, c8, c8, c8, c9, c10 ), CHECK( ( ( c8 + 2147483647 ) > 8 ) != 2147483647 ) ) WITHOUT ROWID; 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v7 WHERE c8 = c9; END; 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v7 RENAME TO v12; 
CREATE INDEX i13 ON v12 ( c9 ); 
UPDATE v12 SET c8 = 'x' WHERE c9 = 0; 
SELECT quote ( a14.c10 ), quote ( a14.c8 ), 'v1' FROM v12 AS a14 GROUP BY a14.c8, abs ( a14.c9 ) HAVING count ( * ) >= 100 ORDER BY max ( a14.c8 + a14.c9 * 9223372036854775807 ) + 2147483647, min ( a14.c9, avg ( a14.c8 ) ) + NULL >= 2147483647; 
SELECT * ORDER BY 2147483647; 
SELECT ( 2147483647, ( a15.c1 + 2147483647 ), a16.c10 != 'x1i' ) FROM v0 AS a15 JOIN v12 AS a16 USING ( a15.c3 ) ORDER BY a15.c1, a15.c1; 
SELECT * FROM v0 AS a17 ORDER BY 18446744073709518848; 
SELECT * FROM v12 AS a18 GROUP BY a18.c10 HAVING automatic_index ( * ) >= 2147483647 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a19 ORDER BY 1; 
SELECT count ( ( NOT ( a20.c2 IS NULL ) ) AND ( NOT ( a20.c1 IS NULL ) ) ) FROM v0 AS a20 ORDER BY 2147483647; 
SELECT * FROM v12 AS a21 ORDER BY ( 2147483647, count ( * ) ) != 0; 
SELECT * FROM v12 AS a22 WHERE a22.c10 = 127 ORDER BY 8; 
SELECT * FROM v12 AS a23 NATURAL JOIN v12 AS a24 ORDER BY 0; 
