CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c1 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 0, 'v1' ), ( 0, 'v0' ), ( 0, 'v0' ); 
CREATE TABLE v9 ( c10, c11, c12, c13, PRIMARY KEY ( c13, c10 ) ) WITHOUT ROWID; 
CREATE INDEX i14 ON v3 ( c1 ); 
CREATE INDEX i15 ON v3 ( c5 ); 
BEGIN; 
INSERT INTO v3 VALUES ( 0, 0, 0 ), ( 8, 0, 0 ), ( 0, 10, 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v9 WHERE c11 = c1; END; 
CREATE INDEX i16 ON v3 ( c1 ); 
ALTER TABLE v3 RENAME TO v17; 
UPDATE v0 SET c2 = 'v1' WHERE c2 = 0; 
SELECT * FROM v9 AS a18 GROUP BY a18.c10, a18.c12, count ( a18.c10 ) ORDER BY 0; 
SELECT a19.c1, max ( a19.c2 || a19.c1 ) FROM v0 AS a19 ORDER BY 0; 
SELECT * ORDER BY 0; 
SELECT * FROM v17 AS a20 ORDER BY 0; 
SELECT * FROM v9 AS a21 ORDER BY 18446744073709551488; 
SELECT * FROM v17 AS a22, v17 AS a23 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a24 GROUP BY count ( ( NOT ( a24.c1 IS NULL ) ) AND ( NOT ( a24.c2 IS NULL ) ) ) ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a25 WHERE a25.c1 = a25.c2 % 18446744073709518848 ORDER BY 8; 
WITH v26 ( c28 ) AS ( SELECT 0 ORDER BY 0 ) SELECT * FROM v26 AS a27 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a29 WHERE a29.c10 = CASE WHEN a29.c13 != 'again' THEN 0 ELSE 18446744073709551488 END > 127 ORDER BY 0; 
