PRAGMA foreign_keys = 1; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ); 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 100 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 100 ); 
CREATE TABLE v5 ( c6 INTEGER REFERENCES rtree ( c6 ) ); 
INSERT INTO v0 VALUES ( 100 ); 
INSERT INTO v5 VALUES ( 18446744073709551615 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
DELETE FROM v0 WHERE c1 = 100; 
CREATE INDEX i8 ON v0 ( c1 ); 
SELECT * FROM v5 AS a9 ORDER BY 1; 
SELECT a10.c1, ( a10.c1 / 100 ), typeof ( a10.c1 ) y FROM v0 AS a10 ORDER BY 100; 
SELECT * FROM v5 AS a11 GROUP BY a11.c6, a11.c6, count ( a11.c6 ) ORDER BY 100; 
SELECT * FROM v0 AS a12 ORDER BY 127; 
SELECT count ( a14.c6 ), a13.c1 FROM v0 AS a13 LEFT JOIN v5 AS a14 ON a13.c1 = a14.c6 ORDER BY 100; 
SELECT * ORDER BY 100; 
SELECT count ( ) FROM v5 AS a15 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 8; 
SELECT * FROM v5 AS a16, v0 AS a17 NATURAL JOIN v5 AS a18 ORDER BY 100; 
SELECT * FROM v5 AS a19, v0 AS a20 NATURAL JOIN v5 AS a21 ORDER BY 18446744073709551615; 
