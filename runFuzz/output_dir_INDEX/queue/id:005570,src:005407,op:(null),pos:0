CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 'v1', 'x', NULL ), ( 0, 'two-b' ), ( 18446744073709551488, 'x' ); 
CREATE INDEX i7 ON v3 ( c2 ); 
CREATE INDEX i8 ON v3 ( c5 ); 
CREATE TABLE v9 ( c10, c11 INTEGER UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 DEFAULT 18446744073709551488 DEFAULT 0, c46, c47, c48, c49 INTEGER PRIMARY KEY, c50 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c2 = c2; END; 
INSERT INTO v9 VALUES ( ( ( c46 + 255 ) % 2147483647 ) < 8, 'x', 't-first' ); 
CREATE INDEX i51 ON v3 ( c6 ); 
CREATE INDEX i52 ON v3 ( c5 ); 
ALTER TABLE v3 RENAME TO v53; 
CREATE INDEX i54 ON v0 ( c1 ); 
UPDATE v53 SET c4 = 'v0' WHERE c2 = 127; 
SELECT max ( a55.c11 || a55.c15 ) FROM v9 AS a55 ORDER BY 127; 
SELECT * FROM v0 AS a56 ORDER BY 0; 
VALUES ( - 127, 'x' ), ( 18446744073709551488, 18446744073709551488, 127 ), ( 127, 127, 255 ) ORDER BY 127; 
SELECT a57.c4 FROM v53 AS a57 ORDER BY 0; 
WITH RECURSIVE v58 AS ( SELECT 127 y ORDER BY 127 ) SELECT * FROM v58 AS a59 ORDER BY 0; 
SELECT * FROM v0 AS a60 ORDER BY 8; 
SELECT * FROM v53 AS a61 ORDER BY 127; 
SELECT a62.c4 FROM v53 AS a62 ORDER BY 8; 
SELECT a63.c2, max ( a63.c2 || a63.c1 ) FROM v0 AS a63 ORDER BY 127; 
SELECT * FROM v9 AS a64, v9 AS a65 NATURAL JOIN v9 AS a66 ORDER BY 18446744073709551488; 
