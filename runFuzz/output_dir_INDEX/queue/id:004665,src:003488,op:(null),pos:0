CREATE TABLE v0 ( c1, c2, c3, c4, PRIMARY KEY ( c4, c2, c3, c4, c4, c2, c1 ) ) WITHOUT ROWID; 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v5 VALUES ( 18446744071562067968, '40000 21' ), ( 18446744073709551615, 'v0' ), ( 0, 'v1' ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 18446744071562067968, 18446744073709551615 ), ( 18446744073709551615, 18446744071562067968, 18446744071562067968 ), ( 18446744071562067968, 18446744071562067968, 18446744073709551488 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v0 ( c3 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0; END; 
CREATE INDEX i11 ON v0 ( c3 ); 
ALTER TABLE v0 RENAME TO v12; 
CREATE INDEX i13 ON v5 ( c7 ); 
CREATE INDEX i14 ON v12 ( c4 ); 
UPDATE v12 SET c1 = 'x' WHERE c2 = 16; 
SELECT * FROM v5 AS a15 WHERE a15.c8 = a15.c7 ORDER BY 16; 
SELECT * FROM v12 AS a16 WHERE a16.c2 != 10 ORDER BY 18446744073709551615; 
SELECT count ( a17.c3 ) FROM v12 AS a17 ORDER BY 18446744071562067968; 
SELECT * ORDER BY 0; 
SELECT * FROM v12 AS a18, v12 AS a19 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a20 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a21, v12 AS a22 ORDER BY 18446744073709551615; 
SELECT ( CASE WHEN a23.c6 = 9223372036854775807 THEN 18446744073709551488 ELSE ( a23.c8 + 18446744073709551488 ) / 8 END ) AS y, count ( * ) FROM v5 AS a23 ORDER BY 9223372036854775807; 
SELECT * FROM v5 AS a24 ORDER BY 0; 
SELECT lower ( a25.c1 ) FROM v12 AS a25, v12 AS a26 ORDER BY 0; 
