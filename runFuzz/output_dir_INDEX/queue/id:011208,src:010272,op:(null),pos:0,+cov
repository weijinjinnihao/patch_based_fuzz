CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL ON CONFLICT REPLACE, c3 TEXT, PRIMARY KEY ( c1, c3, c1, c3, c2, c1, c3, c2, c1, c2 ), CONSTRAINT y UNIQUE ( c3, c2, c3, c3, c3, c1, c1, c2 ) ); 
INSERT INTO v0 VALUES ( 16, 'v1', 'hello' ); 
INSERT INTO v0 VALUES ( 16, '-2', 'v1' ); 
CREATE INDEX i4 ON v0 ( c1 ); 
UPDATE v0 SET c3 = zeroblob ( 16 ); 
CREATE TABLE v5 ( c6, c7 INTEGER DEFAULT 16, c8 REFERENCES p1 ( c7 ) ); 
INSERT INTO v5 VALUES ( 'real', 'v0', 'x' ); 
INSERT INTO v0 VALUES ( x'616263', 'Y', 'x' ); 
CREATE TABLE v9 ( c10, c11, c12 COLLATE NOCASE ); 
INSERT INTO v0 VALUES ( 16, 18446744073709551615, 16 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 18446744073709551615 = ( ( c2 + 16 ) % count ( c3 ) ) != 16, 16, 16 ); 
CREATE INDEX i13 ON v5 ( c7 ); 
INSERT INTO v0 VALUES ( '**%s**', 'x', 'v1' ) ON CONFLICT ( c2 ) DO UPDATE SET c3 = c3, c1 = c2; 
CREATE INDEX i14 ON v5 ( c6 ); 
INSERT INTO v5 VALUES ( c6 > 16, '', 'x' ); 
INSERT INTO v0 VALUES ( - 16, 'Item1', 'v1' ); 
CREATE INDEX i15 ON v5 ( c7 ); 
CREATE TABLE v16 ( c17, c18, c19 COLLATE NOCASE ); 
INSERT INTO v5 SELECT * FROM v9 AS a20 ORDER BY 100; 
UPDATE v0 SET c3 = zeroblob ( 16 ); 
CREATE INDEX i21 ON v16 ( c19 ); 
INSERT INTO v0 SELECT * FROM v5 AS a22 ORDER BY 18446744073709551615; 
INSERT INTO v16 SELECT c1, c6 FROM v0 AS a23 RIGHT JOIN v5 AS a24 ORDER BY 18446744073709551615; 
INSERT INTO v16 SELECT * FROM v0 AS a25 ORDER BY 0; 
WITH v5 ( c27 ) AS ( WITH v5 ( c28 ) AS ( WITH v29 ( c30, c31, c32, c33, c34, c35 ) AS ( SELECT 0 y ORDER BY 16 ) SELECT 16 ORDER BY 4294967295 ) SELECT 18446744073709551615 ORDER BY 16 ) SELECT * FROM v0 AS a26 ORDER BY 16; 
SELECT * FROM v0 AS a36 GROUP BY a36.c1, abs ( a36.c2 ) HAVING CASE WHEN a36.c1 != 'wvu' THEN 18446744073709551615 ELSE 18446744073709551488 END > 16 >= 18446744073709551488 ORDER BY 18446744073709551615; 
SELECT a37.c8, count ( a37.c6 ) FROM v5 AS a37 ORDER BY 16; 
SELECT ( ( c1 + 18446744073709551488 ) % 16 ) == 16 ORDER BY 0; 
SELECT a38.c35 FROM v5 AS a38 ORDER BY 0 COLLATE hex; 
SELECT * FROM v5 AS a39, v9 AS a40 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a41 ORDER BY 18446744071562067968; 
SELECT * FROM v16 AS a42, v5 AS a43 NATURAL JOIN v5 AS a44 ORDER BY 16; 
SELECT a45.c17, count ( a45.c17 ) FROM v16 AS a45 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a46 WHERE ( ( SELECT * FROM v5 AS a47 WHERE a46.c8 = a46.c8 || a47.c35 ORDER BY 100 ) % 18446744073709551615 ) > 16 ORDER BY 18446744073709551615; 
