CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4 UNIQUE, c5, c6 UNIQUE ON CONFLICT IGNORE, c7 UNIQUE ON CONFLICT FAIL, c8 UNIQUE ON CONFLICT IGNORE, c9, c10, c11, c12, c13, c14 REFERENCES t1 DEFAULT NULL, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27 INTEGER PRIMARY KEY, c28 ); 
CREATE TABLE v29 ( c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43 PRIMARY KEY ON CONFLICT REPLACE, c44, c45 INT PRIMARY KEY, c46 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v47 USING rtree ( c48, c49, c50, c51, c52, c53, c54, c55, c56 ); 
CREATE TABLE v57 ( c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69 BLOB, c70, c71, c72, c73, c74 TEXT UNIQUE NOT NULL ); 
UPDATE v3 SET c21 = ( c22 + 0 ) % count ( c8 ) WHERE c26 = 0; 
CREATE INDEX i75 ON v0 ( c1 ); 
CREATE INDEX i76 ON v57 ( c63 ); 
CREATE INDEX i77 ON v57 ( c59 ); 
ATTACH ( hex ( 0 ) ) AS sqlite_master; 
CREATE INDEX i78 ON v47 ( c54 ); 
CREATE TABLE v79 ( c80 DEFAULT x'ABCD' DEFAULT 16, c81 NOT NULL DEFAULT 0, c82 NOT NULL ON CONFLICT REPLACE DEFAULT 16, c83 NOT NULL ON CONFLICT IGNORE DEFAULT 8, c84 NOT NULL ON CONFLICT ABORT DEFAULT 16 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3; END; 
CREATE INDEX i85 ON v0 ( c1 ); 
ALTER TABLE v47 RENAME TO v86; 
UPDATE v86 SET c52 = '40000 21' WHERE c53 = 18446744073709551615; 
SELECT a87.c52, count ( * ), avg ( a87.c43 ), max ( ) FROM v86 AS a87 ORDER BY 16; 
SELECT count ( c56 ) GROUP BY count ( ( NOT ( c84 IS NULL ) ) AND ( NOT ( c41 IS NULL ) ) ) ORDER BY 18446744073709551615; 
SELECT * FROM v86 AS a88 ORDER BY count ( * ) >= 18446744073709551615; 
SELECT * FROM v57 AS a89 NATURAL JOIN v3 AS a90 ORDER BY 9223372036854775807; 
WITH v29 AS ( SELECT a92.c1 FROM v86 AS a92 WHERE a91.c32 LIKE 'v1' ORDER BY 8 ) SELECT * FROM v29 AS a91 ORDER BY 16; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 16 ) SELECT 16 < v0.c2 FROM v79 AS a93 ORDER BY 4294967295; 
WITH v86 AS ( SELECT 8 y ORDER BY 100 ) SELECT * FROM v3 AS a94 ORDER BY 0; 
SELECT * FROM v0 AS a95 WHERE ( ( a95.c1 + 8 ) % 16 ) == 8 ORDER BY 8; 
SELECT a96.c72 FROM v57 AS a96 ORDER BY 0; 
SELECT * FROM v86 AS a97 GROUP BY y ( a97.c55, a97.c53, a97.c43, a97.c1, a97.c51, a97.c54, a97.c50, a97.c55, a97.c49, a97.c31, a97.c49, a97.c52, a97.c51, a97.c17, a97.c50, a97.c31, a97.c53 ) ORDER BY 0; 
