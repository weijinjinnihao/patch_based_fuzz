CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c4 || ( c2 || c4 || c2 ) != 'v1' || c2 ), c3 INTEGER NULL CHECK( c3 > c1 * 16 ), c4 INTEGER NOT NULL CHECK( c3 BETWEEN c4 AND c4 ) ); 
INSERT INTO v0 ( c3, c3, c1, c2, c1 ) VALUES ( 18446744073709551615, 16, 16, 10, 16 ); 
CREATE INDEX i5 ON v0 ( c2 ); 
DELETE FROM v0; 
CREATE INDEX i6 ON v0 ( c3 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
INSERT INTO v0 ( c3, c2, c2, c1, c4 ) VALUES ( 16, 16, 16, 18446744073709551488, 18446744073709551488 ); 
INSERT OR IGNORE INTO v0 ( c2, c3, c4, c1 ) VALUES ( 16, 0, 18446744073709551488, 10 ); 
INSERT OR REPLACE INTO v0 ( c1, c1, c1, c1, c1 ) VALUES ( 10, 16, NULL, 0, 8 ); 
CREATE INDEX i8 ON v0 ( c4 ); 
INSERT OR ABORT INTO v0 ( c3, c4, c3, c3, c2, c1, c4, c2, c2, c2, c2, c1, c4, c2, c1 ) VALUES ( hex ( 16 ), 10, 'XX', ( ( c2 + 10 ) % 10 ) == 10 ); 
UPDATE OR IGNORE v0 SET c1 = NULL, c4 = c2, c1 = c3; 
CREATE INDEX i9 ON v0 ( c3 ); 
PRAGMA quick_check ( 10 ); 
UPDATE v0 SET c4 = NULL, c2 = c3, c2 = c3; 
INSERT OR ABORT INTO v0 ( c2, c3, c1, c4 ) VALUES ( 8, 18446744073709551615, 16, 16 ); 
SELECT quote ( a10.c4 ), a10.c2 = a10.c4, 'v0' FROM v0 AS a10 GROUP BY a10.c2, abs ( a10.c1 ) HAVING count ( * ) >= 18446744073709551615 ORDER BY max ( a10.c1 + a10.c4 * 18446744073709551488 ) + 16, min ( a10.c3, avg ( a10.c4 ) ) + NULL >= 18446744073709551488; 
SELECT * FROM v0 AS a11, v0 AS a12 NATURAL JOIN v0 AS a13 ORDER BY 10; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a14, v0 AS a15 NATURAL JOIN v0 AS a16 ORDER BY 0; 
SELECT * FROM v0 AS a17 GROUP BY a17.c2, a17.c3, count ( a17.c4 ) ORDER BY 18446744071562067968; 
SELECT count ( * ) FROM v0 AS a18 ORDER BY 10; 
SELECT a19.c2 + ( SELECT max ( a20.c4 ) FROM v0 AS a21 ORDER BY 16 ), a19.c3 + ( SELECT max ( a19.c4 ) FROM v0 AS a20 ORDER BY 18446744073709551615 ), a19.c2 + ( VALUES ( - 0, 'v1' ), ( 16, 10, 3 ), ( 0, 16, 16 ) ORDER BY 16 ) FROM v0 AS a19 ORDER BY 3; 
SELECT a22.c1, ( + a22.c1 ) y, ( + a22.c1 ) y, ( + a22.c3 ) y, NOT EXISTS ( SELECT NULL FROM v0 AS a24 ORDER BY 16 ), CASE a23.c4 WHEN 4294967295 THEN 16 WHEN 16 THEN 4294967295 WHEN 18446744073709551615 THEN 't-first' END, 'x' FROM v0 AS a22 LEFT JOIN v0 AS a23 ON a22.c4 = a23.c2 ORDER BY 16; 
WITH v0 AS ( SELECT a26.c2 FROM v0 AS a26 WHERE a26.c4 LIKE 'v1' ORDER BY 16 ) SELECT * FROM v0 AS a25 ORDER BY 16; 
SELECT * FROM v0 AS a27 ORDER BY 18446744073709551488; 
