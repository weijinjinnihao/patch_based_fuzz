CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 COLLATE integrity_check ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 127, 'x' ), ( 127, 'x' ), ( 127, 'v1' ); 
INSERT INTO v3 VALUES ( 2147483647, 127, 2147483647 ), ( 127, 127, 127 ), ( 8, 127, 127 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c2 = c5; END; 
CREATE INDEX i9 ON v0 ( c1 ); 
ALTER TABLE v3 RENAME TO v10; 
CREATE INDEX i11 ON v10 ( c6 ); 
CREATE INDEX i12 ON v10 ( c2 ); 
UPDATE v10 SET c6 = 'v0' WHERE c2 = 127; 
SELECT * FROM v0 AS a13 ORDER BY a13.c2 COLLATE NOCASE; 
WITH v10 AS ( SELECT hex ( ) y ORDER BY 2147483647 ) SELECT * FROM v10 AS a14 ORDER BY 2147483647; 
SELECT * FROM v10 AS a15, v10 AS a16 ORDER BY 127; 
SELECT count ( ( NOT ( a17.c6 IS NULL ) ) AND ( NOT ( a17.c5 IS NULL ) ) ) FROM v10 AS a17 ORDER BY 0; 
SELECT * FROM v10 AS a18 WHERE ( CASE WHEN a18.c2 != 'y' THEN 0 ELSE 127 END ) ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a19 WHERE a19.c5 > 2147483647 ORDER BY 18446744071562067968; 
WITH RECURSIVE v20 AS ( SELECT c2 FROM v20 AS a22 WHERE c1 LIKE 'v0' ORDER BY 2147483647 ) SELECT * FROM v20 AS a21 WHERE c2 > 2147483647 ORDER BY 0; 
SELECT * FROM v10 AS a23 ORDER BY 18446744073709551488; 
SELECT * FROM v10 AS a24 WHERE a24.c4 = 4294967295 ORDER BY 127; 
SELECT a27.c2 FROM v10 AS a25 LEFT JOIN v10 AS a26 ON ( a26.c4 = a27.c6 AND a27.c4 = 'v1' ) LEFT JOIN v10 AS a27 ON ( a26.c6 = a25.c5 ) WHERE a26.c2 = 'x' ORDER BY 2147483647; 
