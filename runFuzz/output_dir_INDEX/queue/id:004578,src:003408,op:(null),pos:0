CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( 'x', 18446744071562067968, 18446744071562067968 ); 
INSERT INTO v4 VALUES ( 18446744071562067968, 0 = 'v1', 0 ), ( 0, 18446744071562067968, 0 ), ( 18446744071562067968, 18446744071562067968, 18446744071562067968 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v0 WHERE c5 = c7; END; 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE INDEX i10 ON v0 ( c1 ); 
ALTER TABLE v4 RENAME TO v11; 
CREATE INDEX i12 ON v11 ( c7 ); 
UPDATE v11 SET c1 = 'v0' WHERE c7 = 0; 
SELECT * FROM v11 AS a13 ORDER BY 18446744071562067968; 
VALUES ( 127, 0, 100 ), ( 18446744071562067968, 127, 18446744071562067968 ), ( 18446744071562067968, x'b1', 18446744071562067968 ) ORDER BY 9223372036854775807; 
SELECT a14.c7, count ( ( NOT ( a14.c7 IS NULL ) ) AND ( NOT ( a14.c6 IS NULL ) ) ) FROM v11 AS a14 ORDER BY 0; 
SELECT * FROM v11 AS a15 ORDER BY ( CASE WHEN a15.c7 != 'apple' THEN 18446744071562067968 ELSE 18446744073709551615 END ); 
SELECT a16.c1, max ( a16.c2 || a16.c1 ) FROM v0 AS a16 ORDER BY 9223372036854775807; 
SELECT * FROM v0 AS a17, v0 AS a18 ORDER BY 18446744071562067968; 
WITH RECURSIVE v11 AS ( SELECT 127 y ORDER BY 18446744073709551615 ) SELECT * FROM v11 AS a19 ORDER BY 100; 
SELECT * FROM v11 AS a20 ORDER BY 18446744071562067968; 
SELECT * FROM v11 AS a21 ORDER BY 18446744071562067968; 
SELECT * FROM v11 AS a22 ORDER BY 9223372036854775807; 
