CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
CREATE INDEX i6 ON v0 ( c4 ); 
CREATE TABLE v7 ( c8 INTEGER PRIMARY KEY, c9 INTEGER NOT NULL CHECK( c10 > c9 ), c10 INTEGER NOT NULL CHECK( NOT NULL ), c11 INTEGER NOT NULL ON CONFLICT FAIL CHECK( c11 BETWEEN c9 AND c9 ) ); 
CREATE TABLE v12 ( c13 INT NOT NULL, c14 INTEGER NOT NULL, c15 TEXT NOT NULL, c16 REAL NOT NULL, c17 BLOB NOT NULL ) STRICT; 
CREATE INDEX i18 ON v0 ( c1 ); 
CREATE INDEX i19 ON v12 ( c13 ); 
CREATE TABLE v20 ( c21 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c22 UNIQUE ON CONFLICT IGNORE, c23 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TABLE v24 ( c25, c26, c27, c28, c29 ); 
INSERT INTO v12 ( c16, c17, c16, c13, c14 ) VALUES ( 18446744073709551488, 18446744073709551488, 'M', 18446744073709551488, x'b1' ), ( 100, 18446744073709551488, 'v1', 100, x'b2b2b2' ); 
PRAGMA integrity_check; 
CREATE INDEX i30 ON v20 ( c22 ); 
CREATE TABLE v31 ( c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49 INTEGER CHECK( c36 != 18446744073709551488 ), c50 PRIMARY KEY, CHECK( ( ( c35 + 18446744073709551488 ) % 18446744073709551488 ) != 18446744073709551488 ) ) WITHOUT ROWID; 
PRAGMA quick_check ( 't1' ); 
UPDATE v7 SET c11 = ( SELECT c9 FROM v20 AS a51 WHERE c22 = 'x' ORDER BY 4294967295 ); 
SELECT * FROM v7 AS a52 ORDER BY max ( a52.c10 + a52.c10 * 18446744073709551488 ) + 18446744073709551615, min ( a52.c8, avg ( a52.c11 ) ) + 18446744073709551488; 
SELECT * ORDER BY 100; 
SELECT count ( * ) FROM v12 AS a53 ORDER BY 100; 
WITH v7 AS ( SELECT hex ( ) y ORDER BY 4294967295 ) SELECT * FROM v7 AS a54 ORDER BY 100; 
WITH RECURSIVE v55 AS ( SELECT 100 y ORDER BY 18446744073709551615 ) SELECT c22, c15 FROM v55 AS a56 WHERE c50 GLOB 'y' AND c27 >= x'6162' ORDER BY 18446744073709551488; 
WITH v57 ( c59 ) AS ( SELECT 'v1' ORDER BY 0 ) SELECT ( ( 18446744073709551488 IS NOT 18446744073709551488 ) OR NOT ( 18446744073709551488 IS 9223372036854775807 OR ( c59 = 18446744073709518848 ) ) ) IS 100 FROM v57 AS a58 ORDER BY 4294967295; 
SELECT ( SELECT min ( a60.c23 ) OVER ( ORDER BY 18446744073709551488 ) ORDER BY 18446744073709551615 ) FROM v20 AS a60 WHERE count ( * ) >= 127 = 'v0' GROUP BY a60.c21 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a61, v31 AS a62 ORDER BY 18446744073709551488; 
SELECT * FROM v31 AS a63 NATURAL JOIN v12 AS a64 ORDER BY 18446744073709551615; 
SELECT * FROM v31 AS a65 ORDER BY 18446744073709551488; 
