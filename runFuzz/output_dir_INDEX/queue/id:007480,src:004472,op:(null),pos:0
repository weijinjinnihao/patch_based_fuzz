CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE TABLE v2 ( c3 INT PRIMARY KEY, c4 REAL ); 
INSERT INTO v0 SELECT c1 + ( SELECT max ( c1 ) FROM v2 AS a8 ORDER BY 10 ), c1 + ( SELECT max ( c1 ) FROM v0 AS a7 ORDER BY 10 ), c1 + ( SELECT max ( c1 ) FROM v0 AS a6 ORDER BY 10 ) FROM v0 AS a5 ORDER BY 10; 
CREATE INDEX i9 ON v2 ( c4 ); 
CREATE VIEW v10 AS SELECT c1, c1 FROM v2 AS a11 LEFT JOIN v0 AS a12 ON c4 = c1 ORDER BY 18446744073709551615; 
CREATE TABLE v13 ( c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INT UNIQUE ON CONFLICT IGNORE, c24, c25, c26, c27, c28 INTEGER, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38 INTEGER UNIQUE ON CONFLICT FAIL, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 UNIQUE, c49, PRIMARY KEY ( c27, c30 ) ); 
CREATE VIEW v50 AS SELECT c26, c40 FROM v13 AS a51 RIGHT JOIN v13 AS a52 ON c40 = c36 ORDER BY 6; 
CREATE VIEW v53 AS SELECT c3, c3 FROM v2 AS a54 LEFT JOIN v2 AS a55 ON c4 = c4 ORDER BY 18446744073709551615; 
CREATE VIEW v56 AS SELECT c4, c3 FROM v53 AS a57 RIGHT JOIN v10 AS a58 ON c3 = c1 ORDER BY 10; 
CREATE INDEX i59 ON v50 ( c4 ); 
CREATE INDEX i60 ON v2 ( c3 ); 
CREATE INDEX i61 ON v10 ( c3 ); 
CREATE VIEW v62 AS SELECT c1, c1 FROM v0 AS a63 RIGHT JOIN v0 AS a64 ON c1 = c1 ORDER BY 18446744073709551615; 
INSERT INTO v0 ( c1 ) VALUES ( 10 ); 
INSERT INTO v13 ( c45, c29 ) VALUES ( 4, 127 ); 
INSERT INTO v2 ( c3 ) VALUES ( 10 ); 
ALTER TABLE v50 ADD COLUMN c65 REFERENCES t1 DEFAULT 18446744073709551488; 
PRAGMA integrity_check = 7; 
CREATE INDEX i66 ON v62 ( c4 ); 
SELECT * FROM v10 AS a67, v56 AS a68 NATURAL JOIN v56 AS a69 ORDER BY 18446744073709551615; 
SELECT * FROM v53 AS a70 ORDER BY - x'68617265'; 
SELECT a71.c1 FROM v0 AS a71 ORDER BY 18446744071562067968; 
SELECT * FROM v62 AS a72 NATURAL JOIN v56 AS a73 ORDER BY 10; 
SELECT * ORDER BY 10; 
SELECT * FROM v2 AS a74 WHERE a74.c3 != 10 ORDER BY 10; 
SELECT * FROM v53 AS a75 ORDER BY 4; 
SELECT max ( a76.c1 || a76.c4 ) FROM v62 AS a76 ORDER BY 10; 
SELECT * FROM v62 AS a77 ORDER BY 127; 
SELECT a78.c3 FROM v10 AS a78 ORDER BY 4; 
