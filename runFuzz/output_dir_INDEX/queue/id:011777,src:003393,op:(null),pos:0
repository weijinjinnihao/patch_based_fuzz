CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 0, 'v0' ), ( 0, 'x' ), ( 100, 'd' ); 
CREATE INDEX i7 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 0, 18446744073709551615, 0 ), ( 100, 8, 0 ), ( 100, 0, 0 ); 
CREATE TABLE v8 ( c9 UNIQUE, c10, c11 UNIQUE ON CONFLICT IGNORE, c12 UNIQUE ON CONFLICT FAIL, c13 AS( c14 + c9 - c18 ) CHECK( c13 BETWEEN c22 AND c14 ) CHECK( c23 BETWEEN c22 AND c22 ), c14, c15 UNIQUE ON CONFLICT REPLACE DEFAULT 0, c16, c17, c18, c19, c20 CHECK( c24 != 0 ) CHECK( ( ( 'v1', 100 ) % 255 ) NOT BETWEEN c21 AND c11 ), c21, c22 INTEGER UNIQUE ON CONFLICT IGNORE, c23 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 0, c24, PRIMARY KEY ( c23, c10 ), UNIQUE ( c23 ) ); 
CREATE INDEX i25 ON v3 ( c4 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v8 WHERE c1 = c5; END; 
CREATE INDEX i26 ON v8 ( c16 ); 
ALTER TABLE v3 RENAME TO v27; 
CREATE INDEX i28 ON v0 ( c2 ); 
UPDATE v8 SET c13 = '%02x' WHERE c14 = 0; 
CREATE TABLE v29 ( c30 INTEGER PRIMARY KEY, c31 INTEGER NOT NULL CHECK( c30 > c33 ), c32 INTEGER NOT NULL CHECK( c32 > c32 != 0 ), c33 INTEGER NOT NULL CHECK( c33 BETWEEN c32 AND c31 ) ); 
SELECT * FROM v0 AS a34 GROUP BY a34.c1, abs ( a34.c2 ) HAVING count ( * ) >= 100 ORDER BY 0; 
SELECT * FROM v0 AS a35 GROUP BY ( ( SELECT * FROM v27 AS a36 WHERE a35.c1 = a35.c2 || a35.c1 ORDER BY 0 ) % 18446744073709551488 ), abs ( a35.c2 ) ORDER BY 100; 
SELECT * FROM v29 AS a37 ORDER BY 100; 
SELECT 255 IN ( SELECT a39.c32 FROM v29 AS a39 ORDER BY 0 ) y FROM v29 AS a38 ORDER BY 0; 
SELECT count ( a40.c31 ) FROM v29 AS a40 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a41 GROUP BY a41.c23, abs ( a41.c10 ) HAVING CASE WHEN a41.c19 != 'aaabbb' THEN 18446744073709551615 ELSE 0 END > 0 >= 100 ORDER BY 0; 
SELECT * FROM v29 AS a42 ORDER BY 100; 
WITH v29 ( c44 ) AS ( WITH v29 ( c45 ) AS ( WITH v46 AS ( WITH v46 AS ( SELECT 18446744073709551615 y ORDER BY 0 ) SELECT avg ( v29.c32 ) FROM ( SELECT * ORDER BY x'616263' ) AS y ORDER BY 0 ) SELECT 0 ORDER BY 0 ) SELECT 255 ORDER BY 18446744073709551615 ) SELECT * FROM v0 AS a43 ORDER BY 18446744073709551615; 
SELECT count ( ( NOT ( a47.c5 IS NULL ) ) AND ( NOT ( a47.c5 IS NULL ) ) ) FROM v27 AS a47 ORDER BY 0; 
SELECT * FROM v27 AS a48 ORDER BY ( ( a48.c4 + 8 ) % 0 ); 
