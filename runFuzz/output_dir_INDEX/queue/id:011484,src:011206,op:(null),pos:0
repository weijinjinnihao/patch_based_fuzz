CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL ON CONFLICT REPLACE, c3 TEXT, PRIMARY KEY ( c2, c1, c3, c3, c2, c2, c2, c1, c1, c2 ), CONSTRAINT y UNIQUE ( c3, c3, c1, c3, c2, c1, c3, c2 ) ); 
CREATE INDEX i4 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 101, 'x', 'cantaloupe' ); 
INSERT INTO v0 VALUES ( 101, 'v0', 'x' ); 
UPDATE v0 SET c3 = zeroblob ( 987 ); 
CREATE TABLE v5 ( c6, c7 INTEGER DEFAULT 101, c8 REFERENCES p1 ( c6 ) ); 
INSERT INTO v5 VALUES ( 'x', 'x', 'v1' ); 
CREATE INDEX i9 ON v5 ( c8 ); 
INSERT OR IGNORE INTO v0 ( c2, c1, c1, c3, c1, c3, c3, c1, c2, c2, c1, c3, c1, c2, c1, c3, c2, c2, c2, c3 ) VALUES ( 101, 101, 101, 127 ); 
CREATE TABLE v10 ( c11, c12, c13 COLLATE NOCASE ); 
INSERT INTO v0 VALUES ( 101, 101, 100 ), ( 127, 101, 100 ), ( 101 = 'v0', 127, 101 ); 
CREATE VIEW v14 ( c15, c16, c17, c18, c19 ) AS SELECT avg ( c19 ) FROM ( SELECT * ORDER BY 101 ) AS y WHERE ( c19 || c16 || c19 ) != 'v0' ORDER BY 101; 
INSERT INTO v14 VALUES ( 'v1', 'v0', 'v0' ) ON CONFLICT ( c17 ) DO UPDATE SET c18 = y, y = c18; 
CREATE INDEX i20 ON v0 ( c2 ); 
INSERT INTO v14 VALUES ( c19 > 101, 'v0', 'xyz%dabc' ); 
INSERT INTO v5 VALUES ( - 18446744073709551488, 'v1', 'v0' ); 
CREATE TABLE v21 ( c22, c23, c24 COLLATE NOCASE ); 
INSERT INTO v14 SELECT * FROM v5 AS a25 ORDER BY 100; 
UPDATE v0 SET c1 = zeroblob ( 100 ); 
CREATE INDEX i26 ON v10 ( c11 ); 
INSERT INTO v5 SELECT * FROM v21 AS a27 ORDER BY 127; 
INSERT INTO v10 SELECT c7, c7 FROM v5 AS a28 RIGHT JOIN v5 AS a29 ORDER BY 4294967295; 
INSERT INTO v21 SELECT * FROM v14 AS a30 ORDER BY 100; 
SELECT * FROM v0 AS a31 WHERE a31.c2 > ( a31.c1 + - 101 ) ORDER BY 101; 
SELECT * FROM v10 AS a32 ORDER BY 100; 
SELECT count ( ( NOT ( a33.c7 IS NULL ) ) AND ( NOT ( a33.c6 IS NULL ) ) ) FROM v5 AS a33 ORDER BY 18446744073709551615; 
WITH RECURSIVE v34 ( c36 ) AS ( SELECT max ( c8 ( 101, ( c36 + 100 ), c36 != 'v1' ) || c36 ) ORDER BY 18446744073709551615 ) SELECT * FROM v34 AS a35 ORDER BY 101; 
SELECT * FROM v10 AS a37 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a38 WHERE CASE WHEN a38.c2 != '1' THEN 1000 ELSE 0 END > 127 ORDER BY 0; 
SELECT a39.c8, count ( * ) FROM v5 AS a39 WHERE hex ( 101 ) ORDER BY 101; 
SELECT * FROM v0 AS a40 GROUP BY a40.c1 HAVING automatic_index ( * ) >= 101 ORDER BY 255; 
SELECT * FROM v10 AS a41 WHERE ( ( a41.c11 + 101 ) % 18446744073709518848 ) == 101 ORDER BY 101; 
SELECT * FROM v0 AS a42, v0 AS a43 NATURAL JOIN v0 AS a44 ORDER BY 2.250000; 
