BEGIN; 
CREATE TABLE v0 ( c1 STRING, c2 STRING, CONSTRAINT y PRIMARY KEY ( c2 ) ); 
CREATE TABLE v3 AS SELECT c2 FROM v0 AS a4 ORDER BY 18446744073709551615; 
CREATE TABLE v5 ( c6 TEXT, c7 FLOAT, c8 TEXT ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 18446744073709551615, 'v0' ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 18446744073709551615, 'x' ); 
CREATE INDEX i9 ON v5 ( c8 ); 
CREATE VIRTUAL TABLE v10 USING rtree ( c11, c12, c13, c14, c15, c16, c17, c18, c19 ); 
CREATE TABLE v20 ( c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51 PRIMARY KEY, CHECK( ( ( c27 + 18446744073709551615 ) % 18446744073709551615 ) != 18446744073709551615 ) ) WITHOUT ROWID; 
VALUES ( 18446744073709551615, 18446744073709551615, 'v0' ) ORDER BY 1; 
INSERT INTO v10 VALUES ( 18446744073709551615, 18446744073709551615, 'one-c' ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 255, '40000 400 1 1' ); 
CREATE INDEX i52 ON v0 ( c2 ); 
CREATE INDEX i53 ON v5 ( c8 ); 
CREATE INDEX i54 ON v10 ( c12 ); 
CREATE INDEX i55 ON v20 ( c34 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 18446744073709551615, '4' ); 
COMMIT; 
WITH v56 AS ( SELECT 18446744073709551615 y ORDER BY 18446744073709551615 ) SELECT avg ( c57 ) FROM ( WITH v58 ( c61 ) AS ( SELECT 18446744073709551615 ORDER BY 18446744073709551615 ) SELECT * FROM v56 AS a59 RIGHT JOIN v56 AS a60 ON c61 ORDER BY 18446744073709551615 ) AS y ORDER BY 18446744073709551615; 
WITH v20 AS ( SELECT hex ( ) y ORDER BY 18446744073709551615 ) SELECT * FROM v0 AS a62 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a63 ORDER BY 18446744073709551615, 18446744073709551615; 
SELECT a64.c7, count ( a64.c8 ) FROM v5 AS a64 ORDER BY 255; 
SELECT * FROM v20 AS a65 WHERE count ( * ) >= 18446744073709551615 = 'v0' ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a66 GROUP BY a66.c7, abs ( a66.c7 ) HAVING count ( * ) >= 18446744073709551615 ORDER BY 0; 
SELECT a67.c11, count ( ( NOT ( a67.c17 IS NULL ) ) AND ( NOT ( a67.c15 IS NULL ) ) ) FROM v10 AS a67 ORDER BY 255; 
SELECT * FROM v20 AS a68, v10 AS a69 NATURAL JOIN v20 AS a70 ORDER BY 18446744073709551615; 
SELECT * FROM v20 AS a71 WHERE ( CASE WHEN a71.c40 != 'v0' THEN 18446744073709551615 ELSE 100 END ) ORDER BY 18446744073709551615; 
SELECT count ( a72.c8 ) FROM v5 AS a72 ORDER BY 18446744073709551615; 
