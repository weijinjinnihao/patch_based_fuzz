CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9 INTEGER, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28 INTEGER PRIMARY KEY ON CONFLICT IGNORE, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 INTEGER PRIMARY KEY, c46 ); 
CREATE INDEX i47 ON v0 ( c2 ); 
CREATE INDEX i48 ON v3 ( c38 ); 
CREATE INDEX i49 ON v0 ( c1 ); 
CREATE TABLE v50 ( c51, c52, c53, c54, c55 INT, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v68 USING rtree ( c69, c70, c71, c72, c73, c74, c75, c76, c77 ); 
CREATE TABLE v78 ( c79 UNIQUE, c80 INTEGER UNIQUE ON CONFLICT FAIL, c81, c82, c83 TEXT UNIQUE NOT NULL ); 
INSERT INTO v68 VALUES ( 0, 'v1' ), ( 0, 'v0' ), ( ( c74 || c18 || c76 ) != 'v1', 'x' ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v84 USING rtree ( c85, c86, c87 ); 
CREATE INDEX i88 ON v3 ( c44 ); 
INSERT INTO v68 VALUES ( 0, 'v1' ), ( 'v1', 'v0' ), ( 0, 'x' ); 
CREATE TABLE v89 ( c90 DEFAULT x'ABCD' DEFAULT 0, c91 NOT NULL DEFAULT 0, c92 NOT NULL ON CONFLICT REPLACE DEFAULT 0, c93 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744073709551488, c94 NOT NULL ON CONFLICT ABORT DEFAULT 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v84; END; 
ALTER TABLE v68 RENAME TO v95; 
UPDATE v95 SET c56 = 'v1' WHERE c71 = 0; 
CREATE INDEX i96 ON v0 ( c1 ); 
SELECT * FROM v0 AS a97 NATURAL JOIN v89 AS a98 ORDER BY 0; 
WITH v50 AS ( SELECT * FROM v50 AS a101 ORDER BY a101.c51, a101.c51 ) SELECT * FROM v84 AS a99 JOIN v0 AS a100 USING ( v50.c58 ) WHERE max ( v50.c57 ) = ( a100.c1 ) AND v50.c58 = 0 ORDER BY 0; 
SELECT * FROM v78 AS a102 WHERE a102.c81 NOT NULL ORDER BY 127; 
SELECT a103.c93 FROM v89 AS a103 ORDER BY 0; 
WITH v95 ( c104 ) AS ( SELECT '1.10' ORDER BY 0 ) SELECT v95.c73, v95.c72, lower ( ( SELECT c104 FROM v3 AS a106 WHERE a105.c59 = v95.c32 ORDER BY 0 ) ), '2-two' FROM ( SELECT count ( * ) AS y, a105.c67 AS y FROM v50 AS a105 GROUP BY 18446744073709551488 ORDER BY 127 ) AS y ORDER BY 8; 
SELECT * FROM v50 AS a107 NATURAL JOIN v3 AS a108 ORDER BY 127; 
SELECT * FROM ( SELECT 0 ORDER BY 0 ) AS y, ( SELECT a109.c1, avg ( a109.c1 ) + 18446744073709551488 FROM v0 AS a109 GROUP BY a109.c2 HAVING a109.c2 > a109.c2 % 127 >= 0 ORDER BY 0 ) AS y ON hex ( 0 ) OR 0 ORDER BY 0; 
SELECT * FROM v95 AS a110 WHERE 0 ORDER BY 255; 
WITH v84 AS ( SELECT ( SELECT min ( a111.c87 ) OVER ( ORDER BY 0 IN v84 ) ORDER BY 18446744073709551488 ) FROM v50 AS a112 GROUP BY a112.c64 ORDER BY 0 ) SELECT * FROM v84 AS a111 ORDER BY 0; 
SELECT * FROM v78 AS a113 WHERE a113.c80 = a113.c82 >= 18446744073709551615 ORDER BY 0; 
