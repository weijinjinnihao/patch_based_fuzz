CREATE TABLE v0 ( c1 BLOB PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c2 > c2 ), c3 INTEGER NOT NULL CHECK( c2 > c4 * 3 ), c4 INTEGER NOT NULL CHECK( c2 NOT BETWEEN c1 AND c1 ) ); 
INSERT INTO v0 ( c4, c4, c4, c4 ) VALUES ( 3, 2147483647, 3, 4294967295 ), ( 2147483647, 2147483647, 3, 3 ), ( 2147483647, 8, 3, 3 ) ON CONFLICT ( count ( c3 ) ) WHERE c1 IS NOT NULL DO UPDATE SET c4 = c1, c1 = c1; 
UPDATE v0 SET c2 = 2147483647 WHERE c3 = 3; 
CREATE INDEX i5 ON v0 ( c2 ); 
CREATE INDEX i6 ON v0 ( c2 ); 
CREATE INDEX i7 ON v0 ( c4 ); 
UPDATE v0 SET c1 = c2 * 0 WHERE c2 = 255; 
CREATE INDEX i8 ON v0 ( c4 ); 
CREATE INDEX i9 ON v0 ( c3 ); 
SELECT * FROM v0 AS a10 ORDER BY 1; 
SELECT a11.c3 + ( SELECT max ( a13.c2 ) FROM v0 AS a14 ORDER BY 2147483647 ), a11.c1 + ( SELECT CASE WHEN a13.c2 % 3 != 3 THEN a13.c4 END, a12.c2, a12.c2 FROM v0 AS a13 WHERE a11.c1 <= 3 ORDER BY 2147483647 ), a11.c4 + ( SELECT max ( a12.c4 ) FROM v0 AS a12 ORDER BY 3 ) FROM v0 AS a11 ORDER BY 3; 
SELECT a15.c1, count ( ( NOT ( a15.c3 IS NULL ) ) AND ( NOT ( a15.c4 IS NULL ) ) ) FROM v0 AS a15 ORDER BY 8; 
SELECT * FROM v0 AS a16 ORDER BY 127; 
SELECT a17.c4, count ( ( NOT ( a17.c2 IS NULL ) ) AND ( NOT ( a17.c1 IS NULL ) ) ) FROM v0 AS a17 ORDER BY 3; 
SELECT * FROM v0 AS a18 NATURAL JOIN v0 AS a19 ORDER BY 3; 
SELECT count ( ( NOT ( a20.c1 IS NULL ) ) AND ( NOT ( a20.c1 IS NULL ) ) ) FROM v0 AS a20 ORDER BY 127; 
SELECT * FROM v0 AS a21 GROUP BY y ( a21.c2 ) ORDER BY 2147483647; 
WITH RECURSIVE v22 ( c24 ) AS ( SELECT max ( c24 || c24 ) ORDER BY 2147483647 ) SELECT * FROM v22 AS a23 ORDER BY 4294967295; 
SELECT * FROM v0 AS a25, v0 AS a26 NATURAL JOIN v0 AS a27 ORDER BY 16; 
