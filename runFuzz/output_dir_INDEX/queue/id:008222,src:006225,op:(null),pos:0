CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 10, 'v0' ), ( 0, 'one-a' ), ( 10, 'utf-16' ); 
INSERT INTO v3 VALUES ( 0, 0, 0 ), ( 0, 127, 10 ), ( 18446744073709551615, 18446744073709551615, 10 ); 
CREATE INDEX i8 ON v3 ( c5 ); 
CREATE INDEX i9 ON v3 ( c5 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN INSERT INTO v0 ( c5, c2 ) VALUES ( 0, 0, 18446744073709551615 ), ( 255, 18446744071562067968, 10 ), ( 18446744073709551615, 0, 10 ) ON CONFLICT ( c2 ) DO UPDATE SET c6 = c2, c2 = c2; END; 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v3 RENAME TO v12; 
UPDATE v0 SET c1 = 'v0' WHERE c1 = 18446744073709551615; 
SELECT * FROM ( SELECT 0 FROM v12 AS a14 NATURAL JOIN v12 AS a15 ORDER BY 10 ) AS y, v12 AS a13 ON likely ( 18446744073709551615 OR 0 ) OR 100 ORDER BY 8; 
SELECT a16.c2, count ( ( NOT ( a16.c2 IS NULL ) ) AND ( NOT ( a16.c2 IS NULL ) ) ), a16.c2, a16.c2 FROM v0 AS a16 ORDER BY 127; 
SELECT a17.c5, count ( ( NOT ( a17.c2 IS NULL ) ) AND ( NOT ( a17.c6 IS NULL ) ) ) FROM v12 AS a17 ORDER BY 255; 
SELECT * FROM v0 AS a18 ORDER BY 10; 
SELECT * FROM v0 AS a19 GROUP BY a19.c1 HAVING a19.c2 > a19.c1 % 0 >= 18446744073709551615 ORDER BY 0; 
SELECT * FROM v12 AS a20 ORDER BY 0; 
SELECT a21.c2 FROM v0 AS a21 ORDER BY 0; 
SELECT * FROM v12 AS a22 WHERE a22.c6 = CASE WHEN a22.c5 != 'v1' THEN 0 ELSE 10 END > 127 ORDER BY 10; 
SELECT * FROM v12 AS a23 ORDER BY 0; 
SELECT a24.c5 FROM v12 AS a24 ORDER BY 18446744073709551615; 
