CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v5 VALUES ( 1.300000, 'v1' ), ( 1.300000, 'x' ), ( 1.300000, 'v0' ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v5 VALUES ( 18446744073709551488, 1.300000, 18446744073709551488 ), ( 1.300000, 2147483647, 18446744073709551488 ), ( 1.300000, 1.300000, 1.300000 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c7 = c7; END; 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v12 SET c2 = '?k<D Q' FROM v5 AS a13, v12 AS a14 WHERE c6 = 1.300000; 
SELECT * FROM v12 AS a15 ORDER BY max ( a15.c2 + a15.c1 * 1.300000 ) + 18446744073709551488, min ( a15.c1, avg ( a15.c2 ) ) + 1.300000; 
SELECT * FROM v12 AS a16, v12 AS a17 ORDER BY 18446744073709551488; 
SELECT * FROM v5 AS a18 GROUP BY 1.300000 ORDER BY 0; 
SELECT * FROM v12 AS a19 ORDER BY 127; 
SELECT a20.c1, a21.c6 FROM v12 AS a20 LEFT JOIN v5 AS a21 ON a21.c6 = a20.c2 y ORDER BY 1.300000; 
SELECT * FROM v5 AS a22 GROUP BY y ( a22.c6 ) ORDER BY 1.300000; 
SELECT * ORDER BY 0; 
SELECT a23.c1, max ( a23.c2 || a23.c1 ) FROM v12 AS a23 ORDER BY 1.300000; 
WITH v24 ( c26 ) AS ( SELECT 4294967295 ORDER BY 4294967295 ) SELECT * FROM v24 AS a25 ORDER BY 18446744073709551488; 
SELECT a27.c2 AS y, a27.c1 || a27.c1 AS y FROM v12 AS a27 WHERE + a27.c2 = 'pear' ORDER BY 0; 
