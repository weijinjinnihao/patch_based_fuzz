CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c1 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 16, 'M' ), ( 16, 'v0' ), ( 16, 't1' ); 
INSERT INTO v3 VALUES ( 16, 18446744073709551488, 16 ), ( 16, 16, 16 ), ( 18446744073709551615, 16, 0 ); 
CREATE INDEX i10 ON v3 ( c6 ); 
CREATE INDEX i11 ON v3 ( c4 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN UPDATE v3 SET c2 = 'x' FROM v3 AS a12, v0 AS a13 NATURAL JOIN v0 AS a14 WHERE c2 = c2; END; 
ALTER TABLE v3 RENAME TO v15; 
UPDATE v15 SET c1 = 'v1' WHERE c5 = 16; 
SELECT * FROM v15 AS a16 ORDER BY 16; 
SELECT * FROM v15 AS a17, v15 AS a18 ORDER BY 0; 
SELECT * ORDER BY 16; 
SELECT * FROM v15 AS a19, v15 AS a20 NATURAL JOIN v0 AS a21 ORDER BY 16; 
SELECT a22.c6, a23.c4 FROM v15 AS a22 RIGHT JOIN v15 AS a23 ON count ( * ) >= 18446744073709551488 = a22.c4 ORDER BY 0; 
SELECT * FROM v0 AS a24, v15 AS a25 WHERE max ( a25.c6, a25.c1 ) > 0 ORDER BY 18446744073709518848; 
SELECT ( SELECT count ( * ) FROM v15 AS a27, v0 AS a28 WHERE a27.c6 = a28.c1 AND a27.c1 = a26.c6 ORDER BY 0 ), a26.c4, a26.c4, 'x' FROM v15 AS a26 ORDER BY 16; 
WITH v29 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT ( ( c1 + 18446744073709551488 ) % 16 ) == 16 FROM v29 AS a30 ORDER BY 16; 
SELECT * ORDER BY 16; 
SELECT * FROM v0 AS a31 WHERE ( ( a31.c2 + 0 ) % 0 ) == 18446744073709551488 ORDER BY 16; 
