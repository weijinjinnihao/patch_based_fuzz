CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
INSERT INTO v0 VALUES ( 255, 'B' ), ( 9223372036854775807, '12345' ), ( 8, 'v1' ); 
CREATE TABLE v4 ( c5, c6, c7, c8, PRIMARY KEY ( c6, c8 ) ) WITHOUT ROWID; 
CREATE INDEX i9 ON v0 ( c1 ); 
BEGIN; 
INSERT INTO v0 VALUES ( 0, 0, 0 ), ( 255, 255, 0 ), ( 255, 0, 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c8 = c2; END; 
CREATE INDEX i10 ON v4 ( c5 ); 
ALTER TABLE v0 RENAME TO v11; 
UPDATE v11 SET c1 = NULL; 
CREATE INDEX i12 ON v11 ( c2 ); 
UPDATE v11 SET c2 = 'GHI' WHERE c2 = 255; 
CREATE INDEX i13 ON v4 ( c5 ); 
SELECT * ORDER BY 18446744073709551488; 
WITH v14 AS ( SELECT c1 FROM v14 AS a16 WHERE c7 LIKE 'v1' ORDER BY 10 ) SELECT * FROM v14 AS a15 ORDER BY 127; 
SELECT * FROM v11 AS a17 GROUP BY count ( ( NOT ( a17.c3 IS NULL ) ) AND ( NOT ( a17.c2 IS NULL ) ) ) ORDER BY 255; 
SELECT * FROM v11 AS a18 ORDER BY max ( NULL, - x'68617265', 'x' ) + 0, min ( a18.c1, avg ( a18.c1 ) ) + NULL >= 18446744073709551615; 
SELECT * FROM v4 AS a19 ORDER BY 1; 
SELECT a20.c1, count ( ( NOT ( a20.c3 IS NULL ) ) AND ( NOT ( a20.c2 IS NULL ) ) ) FROM v11 AS a20 ORDER BY 9223372036854775807; 
SELECT * FROM v4 AS a21, v11 AS a22 NATURAL JOIN v4 AS a23 ORDER BY 0; 
WITH v11 ( c26 ) AS ( SELECT 0 ORDER BY 127 ) SELECT a25.c2, a24.c7 IS ( 'two-b', c26 > 0, 'v0' ) < 255 FROM v4 AS a24 LEFT JOIN v11 AS a25 ON a25.c2 = c26 ORDER BY 255; 
SELECT * ORDER BY 10; 
SELECT * FROM v4 AS a27 ORDER BY 255; 
