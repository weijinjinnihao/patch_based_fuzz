CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING fts5 ( c6 ); 
INSERT INTO v5 VALUES ( 8, 'f' ), ( 8, 'v0' ), ( 255, 'v1' ); 
CREATE INDEX i7 ON v5 ( c6 ); 
INSERT INTO v5 VALUES ( 8, 255, 8 ), ( 8, 18446744073709551488, 18446744073709551488 ), ( 8, 255, 4294967295 ); 
CREATE INDEX i8 ON v5 ( c6 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c6 = c6; END; 
CREATE INDEX i9 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v10; 
UPDATE v10 SET c2 = 'anx' WHERE c2 = 8; 
SELECT * FROM v5 AS a11 ORDER BY max ( a11.c6 + a11.c6 * 8 ) + 255, min ( a11.c6, avg ( a11.c6 ) ) + 9223372036854775807; 
SELECT * FROM v5 AS a12, v10 AS a13 ORDER BY 8; 
SELECT * FROM v10 AS a14 GROUP BY 8 ORDER BY 8; 
SELECT * FROM v10 AS a15 ORDER BY 8; 
SELECT a17.c1, a17.c2 FROM v10 AS a16 LEFT JOIN v10 AS a17 ON a16.c2 = a16.c1 y ORDER BY 18446744071562067968; 
SELECT * FROM v5 AS a18 GROUP BY y ( a18.c6 ) ORDER BY 8; 
SELECT * ORDER BY 8; 
SELECT a19.c1, max ( a19.c1 || a19.c1 ) FROM v10 AS a19 ORDER BY 4294967295; 
WITH v20 ( c22 ) AS ( SELECT 8 ORDER BY 8 ) SELECT * FROM v20 AS a21 ORDER BY 8; 
SELECT a23.c2 AS y, a23.c1 || a23.c1 AS y FROM v10 AS a23 WHERE + a23.c1 = 'yyy' ORDER BY 255; 
