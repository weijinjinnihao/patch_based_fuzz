CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17 PRIMARY KEY ON CONFLICT REPLACE, c18, c19, c20 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v21 USING rtree ( c22, c23, c24, c25, c26, c27, c28, c29, c30 ); 
CREATE TABLE v31 ( c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i49 ON v0 ( c2 ); 
CREATE INDEX i50 ON v3 ( c19 ); 
CREATE INDEX i51 ON v31 ( c40 ); 
INSERT INTO v21 VALUES ( 123, 'x' ), ( 18446744073709551615, 'x' ), ( 123, 'x' ); 
CREATE TABLE v52 ( c53 DEFAULT x'ABCD' DEFAULT 123, c54 NOT NULL DEFAULT 123, c55 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744071562067968, c56 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744073709551615, c57 NOT NULL ON CONFLICT ABORT DEFAULT 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0; END; 
ALTER TABLE v21 RENAME TO v58; 
CREATE INDEX i59 ON v0 ( c1 ); 
CREATE INDEX i60 ON v58 ( c26 ); 
CREATE TABLE v61 ( c62 TEXT, c63 INTEGER, c64 INT, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88 PRIMARY KEY, CHECK( ( ( c70 + 18446744073709551615 ) > 123 ) != 18446744073709551615 ) ) WITHOUT ROWID; 
SELECT count ( ) FROM v58 AS a89 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 123; 
SELECT a90.c57, max ( a90.c53 || a90.c56 ) FROM v52 AS a90 ORDER BY 127; 
SELECT a91.c54, a92.c14 FROM v52 AS a91 LEFT JOIN v3 AS a92 ON count ( ( NOT ( a91.c53 IS NULL ) ) AND ( NOT ( a92.c16 IS NULL ) ) ) ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a93 WHERE CASE WHEN a93.c1 != 'v1' THEN 18446744073709551488 ELSE 18446744073709551615 END > 0 ORDER BY 18446744073709551615; 
SELECT a95.c2, a94.c4 FROM v3 AS a94 JOIN v58 AS a95 ON a95.c23 = a94.c9 WHERE a95.c29 IN ( 0, 123, 18446744073709551615 ) ORDER BY 0; 
SELECT * FROM v0 AS a96 WHERE a96.c1 = CASE WHEN a96.c2 != 'aB%' THEN 123 ELSE 123 END > 0 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 123; 
SELECT a98.c6, a98.c20 FROM v0 AS a97 NATURAL JOIN v3 AS a98 ON a97.c2 = a97.c1 ORDER BY 123; 
SELECT * FROM v52 AS a99 ORDER BY NULL; 
