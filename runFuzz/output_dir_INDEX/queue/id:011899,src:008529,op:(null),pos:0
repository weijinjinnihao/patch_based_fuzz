CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE INDEX i6 ON v0 ( c3 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 0, 'v1' ), ( 8, 'ABX' ), ( 0, 'v1' ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 8, 8 ), ( 0, 18446744073709551615, 18446744073709551615 ), ( 127, 0, 0 ); 
CREATE INDEX i8 ON v0 ( c3 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c3 = c1; END; 
ALTER TABLE v0 RENAME TO v9; 
UPDATE v9 SET c2 = 'x' FROM v9 AS a10 NATURAL JOIN v9 AS a11; 
SELECT * FROM v9 AS a12 NATURAL JOIN v9 AS a13 ORDER BY 1000; 
SELECT count ( a14.c2 ) FROM v9 AS a14 ORDER BY 0; 
SELECT max ( a15.c1 || a15.c2 ) FROM v9 AS a15 ORDER BY 0; 
SELECT * FROM ( v9 AS a16 ), ( v9 AS a17 ), ( v9 AS a18 ), ( v9 AS a19 NATURAL JOIN v9 AS a20 ) WHERE a18.c2 = a16.c3 + 10 AND a20.c2 = 255 AND a17.c1 = a20.c1 + 127 ORDER BY 127; 
SELECT * FROM v9 AS a21 ORDER BY ( a21.c2 || a21.c1 || a21.c2 ) != 'two'; 
SELECT a22.c3, count ( a22.c2 ) FROM v9 AS a22 ORDER BY 0; 
SELECT * FROM v9 AS a23 WHERE ( a23.c1 = 18446744073709551615 OR a23.c3 = 18446744073709551615 ) AND a23.c2 IN ( SELECT a23.c1 FROM ( SELECT *, 'x' FROM v9 AS a24 LEFT JOIN v9 AS a25 ORDER BY 8 ) AS y WHERE a23.c3 = 127 ORDER BY 18446744073709551615 ) GROUP BY x'b2b2b2', 127, 255, 100, 0, 255 HAVING CASE WHEN a23.c2 != 'x' THEN 0 ELSE 127 END > 18446744073709518848 >= 18446744073709551615 ORDER BY 8; 
SELECT a27.c2 = + a27.c1, a27.c2 FROM v9 AS a26 LEFT JOIN v9 AS a27 ON a26.c1 = a27.c1 WHERE a26.c1 = a26.c3 GROUP BY y ( a26.c2, a26.c1, a27.c3, a27.c3, a27.c3, a27.c3, a26.c3, a27.c1, a27.c2, a26.c1, a27.c1, a27.c3, a27.c1, a26.c2, a27.c3, a26.c3, a26.c3 ) ORDER BY 0; 
SELECT max ( a28.c2 || a28.c1 ) FROM v9 AS a28 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a29, v9 AS a30 ORDER BY 18446744073709551615; 
