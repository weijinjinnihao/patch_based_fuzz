CREATE TABLE IF NOT EXISTS v0 ( c1 INT PRIMARY KEY ); 
CREATE TABLE v2 ( c3 INT PRIMARY KEY, c4 REAL ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE VIEW v6 AS SELECT count ( ( SELECT c4 FROM v2 AS a8 WHERE c3 = NULL AND c3 >= c3 ORDER BY 18446744073709551488 ) ) FROM v2 AS a7 ORDER BY 18446744073709518848; 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE INDEX i10 ON v6 ( c1 ); 
CREATE INDEX i11 ON v6 ( c1 ); 
CREATE VIEW v12 AS SELECT c1, c1 FROM v6 AS a13 RIGHT JOIN v0 AS a14 ON c1 = c1 ORDER BY 18446744073709551488; 
CREATE VIEW v15 AS SELECT y, y FROM v2 AS a16 LEFT JOIN v12 AS a17 ON y = c4 ORDER BY 18446744073709551615; 
CREATE INDEX i18 ON v0 ( c1 ); 
CREATE VIEW v19 AS SELECT c4, y FROM v2 AS a20 RIGHT JOIN v12 AS a21 ON c4 = c4 ORDER BY 127; 
CREATE TABLE v22 ( c23 PRIMARY KEY, c24, c25 AS( c25 + c25 - c25 ) REFERENCES t0, c26 REFERENCES t1 DEFAULT NULL ); 
INSERT INTO v0 ( c1 ) VALUES ( 18446744073709551488 ); 
UPDATE v0 SET c1 = zeroblob ( 18446744073709551488 ); 
INSERT INTO v12 ( y ) VALUES ( 18446744073709518848 ); 
INSERT INTO v19 ( c1, c1 ) VALUES ( 18446744073709518848, 18446744073709551488 ); 
PRAGMA automatic_index = 5; 
WITH v0 ( c29 ) AS ( SELECT 18446744073709551488 ORDER BY 9223372036854775807 ) SELECT a27.c1 = + a27.c1, a27.c1 FROM v0 AS a27 LEFT JOIN v19 AS a28 ON a27.c1 = a27.c1 y ORDER BY 18446744073709551488; 
SELECT a30.c1, count ( a30.c1 ) FROM v6 AS a30 ORDER BY 18446744073709551488; 
SELECT * FROM v6 AS a31, v0 AS a32 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a33 ORDER BY 18446744073709551615; 
SELECT * FROM v2 AS a34 ORDER BY 0; 
SELECT count ( ( NOT ( a35.y IS NULL ) ) AND ( NOT ( a35.y IS NULL ) ) ) FROM v15 AS a35 ORDER BY 18446744073709551488; 
SELECT * FROM v15 AS a36, v19 AS a37 NATURAL JOIN v22 AS a38 ORDER BY 6; 
WITH RECURSIVE v22 AS ( SELECT a39.c4 FROM v15 AS a40 WHERE a39.c3 LIKE '**%s**' ORDER BY 18446744073709518848 ) SELECT * FROM v2 AS a39 ORDER BY 18446744073709518848; 
SELECT a41.y FROM v15 AS a41 ORDER BY 18446744073709551488; 
