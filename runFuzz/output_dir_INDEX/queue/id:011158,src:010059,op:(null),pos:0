CREATE TABLE v0 ( c1, c2, c3 COLLATE echo ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 127, 've', 'v0' ); 
INSERT INTO v0 VALUES ( 0, count ( * ), 'x' ); 
CREATE INDEX i5 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( NULL, 'C', 'v1' ); 
CREATE INDEX i6 ON v0 ( c2 ); 
CREATE TABLE v7 ( c8, c9 INTEGER DEFAULT 0, c10 REFERENCES p1 ( c9 ) ); 
INSERT INTO v0 VALUES ( 'v1', 'one-b', '$long' ); 
INSERT INTO v7 VALUES ( x'616263', 'three-c', 'v1' ); 
CREATE INDEX i11 ON v0 ( c2 ); 
CREATE TABLE v12 ( c13, c14, c15 COLLATE NOCASE ); 
INSERT INTO v0 VALUES ( 127, 18446744071562067968, 0 ), ( 127, 18446744073709551615, 127 ), ( 127 = 'v1', 0, 127 ); 
CREATE INDEX i16 ON v7 ( c10 ); 
INSERT INTO v0 VALUES ( 'x', 'v0', 'x' ); 
INSERT INTO v7 VALUES ( x'68617265', '1.0', 'one' ); 
INSERT INTO v12 VALUES ( 0, 'jkl', 'v0' ); 
CREATE TABLE v17 ( c18 INTEGER, c19 UNIQUE ON CONFLICT IGNORE, c20 UNIQUE ON CONFLICT FAIL, c21, c22, c23, c24 UNIQUE ON CONFLICT REPLACE, c25, c26, c27 REFERENCES t1 UNIQUE ON CONFLICT IGNORE, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, PRIMARY KEY ( c43, c40, c24, c24, c36, c43, c33 ) ) WITHOUT ROWID; 
INSERT INTO v12 VALUES ( - 127, 'i1', 'v0' ); 
CREATE TABLE v44 ( c45, c46, c47 COLLATE NOCASE ); 
INSERT INTO v7 SELECT * FROM v17 AS a48 ORDER BY 127; 
UPDATE v17 SET c35 = zeroblob ( - ( ( ( c31 + 127 ) % 127 ) == 127 ) ); 
INSERT INTO v12 SELECT * FROM v44 AS a49, v12 AS a50 NATURAL JOIN v17 AS a51 ORDER BY 127; 
INSERT INTO v7 SELECT * FROM v0 AS a52 ORDER BY 0; 
INSERT INTO v17 SELECT * FROM v7 AS a53 ORDER BY 0; 
INSERT INTO v0 SELECT * FROM v0 AS a54 ORDER BY 127; 
SELECT a56.c3, a56.c2 FROM v17 AS a55 LEFT JOIN v0 AS a56 ON a56.c1 = a55.c36 y ORDER BY 0; 
SELECT a57.c47, count ( a57.c46 ) FROM v44 AS a57 ORDER BY 18446744073709518848; 
SELECT ( ( a58.c9 + 0 ) % 18446744073709551615 ) == 18446744073709551615 FROM v7 AS a58 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a59 ORDER BY 0; 
SELECT * FROM v17 AS a60 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a61 ORDER BY x'616263'; 
SELECT * FROM v44 AS a62 NATURAL JOIN v44 AS a63 ORDER BY 0; 
SELECT * FROM v0 AS a64 ORDER BY 0; 
SELECT * FROM v44 AS a65 ORDER BY 0; 
SELECT * FROM v44 AS a66 GROUP BY a66.c46, abs ( a66.c47 ) ORDER BY 0; 
