CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TABLE v9 ( c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22 INTEGER DEFAULT 'v1', c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41 PRIMARY KEY, CHECK( ( ( c22 + 9223372036854775807 ) % 9223372036854775807 ) != 10 ) ) WITHOUT ROWID; 
CREATE TABLE v42 ( c43 INT NOT NULL, c44 INTEGER NOT NULL, c45 TEXT NOT NULL, c46 REAL NOT NULL, c47 BLOB NOT NULL ) STRICT; 
CREATE TABLE v48 ( c49 PRIMARY KEY, c50, c51 REAL AS( - x'68617265' ) REFERENCES t0, c52 ) WITHOUT ROWID; 
CREATE TABLE v53 ( c54 INTEGER, c55 UNIQUE ON CONFLICT IGNORE, c56 UNIQUE ON CONFLICT FAIL, c57, c58, c59, c60 PRIMARY KEY, CHECK( ( ( c59 + 10 ) % 18446744071562067968 ) != 10 ) ) WITHOUT ROWID; 
INSERT INTO v42 ( c45, c45, c44, c47, c43 ) VALUES ( 10, 8, 'v1', 10, x'b1' ), ( 10, 18446744073709551615, 'x', 18446744073709551488, x'b2b2b2' ); 
PRAGMA integrity_check; 
PRAGMA quick_check ( 't1' ); 
CREATE INDEX i61 ON v9 ( c18 ); 
UPDATE v48 SET c50 = ( SELECT c4 FROM v0 AS a62 WHERE c50 = 'v0' ORDER BY 18446744071562067968 ); 
PRAGMA quick_check ( - 10 ); 
WITH v53 AS ( SELECT 8 y ORDER BY 127 ) SELECT * FROM v48 AS a63 CROSS JOIN v9 AS a64 ON ( a64.c35 = v53.c59 ) WHERE a64.c27 IN ( SELECT a63.c52 FROM v9 AS a65, v0 AS a66 NATURAL JOIN v9 AS a67 WHERE a63.c49 IN ( SELECT a67.c20 FROM ( SELECT a64.c35 FROM v0 AS a68 ORDER BY 10 ) AS y WHERE a66.c3 = 9223372036854775807 ORDER BY 8 ) ORDER BY 18446744071562067968 ) ORDER BY 127; 
SELECT a69.c25, a70.c35 FROM v9 AS a69 RIGHT JOIN v9 AS a70 ON a70.c19 = a69.c35 WHERE a69.c21 IS 100 ORDER BY 18446744071562067968; 
SELECT * FROM v53 AS a71 NATURAL JOIN v48 AS a72 ORDER BY 8; 
SELECT * FROM v48 AS a73 WHERE a73.c52 = a73.c50 NOT NULL ORDER BY 18446744073709551615; 
SELECT a74.c40, count ( ( NOT ( a74.c24 IS NULL ) ) AND ( NOT ( a74.c26 IS NULL ) ) ) FROM v9 AS a74 ORDER BY 18446744071562067968; 
SELECT * FROM v9 AS a75, v48 AS a76 NATURAL JOIN v53 AS a77 ORDER BY 127; 
SELECT * FROM v0 AS a78 ORDER BY 10; 
SELECT * FROM v48 AS a79, v9 AS a80 NATURAL JOIN v42 AS a81 ORDER BY 10; 
SELECT * FROM v0 AS a82 ORDER BY ( ( hex ( 18446744071562067968 ) ) % 10 ); 
SELECT a84.c59, a83.c24 FROM v9 AS a83 RIGHT JOIN v53 AS a84 ON a83.c40 = a84.c60 WHERE a83.c37 = + a84.c56 ORDER BY 18446744071562067968; 
