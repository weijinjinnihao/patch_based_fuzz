CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL ON CONFLICT REPLACE, c3 TEXT, PRIMARY KEY ( c3, c3, c3, c1, c1, c1, c2, c3, c1, c2 ), CONSTRAINT y UNIQUE ( c2, c3, c1, c2, c3, c2, c1, c3 ) ); 
CREATE INDEX i4 ON v0 ( c3 ); 
INSERT INTO v0 VALUES ( 255, 'x', 'v1' ); 
INSERT INTO v0 VALUES ( ( 255, ( c2 + 255 ), c2 != 'v1' ) % 255, 'v1' ); 
UPDATE v0 SET c1 = zeroblob ( 255 ); 
CREATE TABLE v5 ( c6, c7 INTEGER DEFAULT 255, c8 REFERENCES p1 ( c6 ) ); 
INSERT INTO v0 VALUES ( 'v0', 'v1', 'abc1' ); 
CREATE INDEX i9 ON v5 ( c6 ); 
INSERT OR IGNORE INTO v0 ( c2, c1, c3, c1, c3, c2, c2, c2, c3, c2, c2, c1, c2, c2, c3, c1, c1, c3, c2, c2 ) VALUES ( 255, 255, 18446744073709518848, 100 ); 
CREATE TABLE v10 ( c11, c12, c13 COLLATE NOCASE ); 
INSERT INTO v10 VALUES ( 127, 255, 18446744073709518848 ), ( 255, 255, 9223372036854775807 ), ( 255 = 'x', 255, 10 ); 
CREATE INDEX i14 ON v5 ( c7 ); 
INSERT INTO v10 VALUES ( 'v0', 'x', 'x' ) ON CONFLICT ( c12 ) DO UPDATE SET c12 = c13, c13 = c12; 
CREATE INDEX i15 ON v10 ( c13 ); 
INSERT INTO v0 VALUES ( c3 > 10, 'v0', 'x' ); 
INSERT INTO v5 VALUES ( - 18446744073709518848, 'v0', '2' ); 
CREATE TABLE v16 ( c17, c18, c19 COLLATE NOCASE ); 
INSERT INTO v0 SELECT * FROM v0 AS a20 ORDER BY 255; 
UPDATE v0 SET c1 = zeroblob ( 255 ); 
CREATE INDEX i21 ON v10 ( c12 ); 
INSERT INTO v5 SELECT * FROM v10 AS a22 ORDER BY 18446744073709518848; 
INSERT INTO v16 SELECT c18, c11 FROM v5 AS a23 RIGHT JOIN v10 AS a24 ORDER BY 255; 
INSERT INTO v10 SELECT * FROM v5 AS a25 ORDER BY 18446744073709551488; 
SELECT * FROM v5 AS a26 WHERE a26.c6 > ( a26.c6 + - 255 ) ORDER BY 18446744073709551488; 
SELECT * FROM v5 AS a27 ORDER BY 255; 
SELECT count ( ( NOT ( a28.c6 IS NULL ) ) AND ( NOT ( a28.c8 IS NULL ) ) ) FROM v5 AS a28 ORDER BY 255; 
WITH RECURSIVE v29 ( c31 ) AS ( SELECT max ( c8 ( 0, ( c31 + 18446744073709518848 ), c31 != 'ddd' ) || c31 ) ORDER BY 100 ) SELECT * FROM v29 AS a30 ORDER BY 255; 
SELECT * FROM v5 AS a32 ORDER BY 2147483647; 
SELECT * FROM v0 AS a33 WHERE CASE WHEN a33.c3 != 'ABC' THEN 4294967295 ELSE 255 END > 255 ORDER BY 255; 
SELECT a34.c19, count ( * ) FROM v16 AS a34 WHERE hex ( 100 ) ORDER BY 100; 
SELECT * FROM v10 AS a35 GROUP BY a35.c12 HAVING automatic_index ( * ) >= 255 ORDER BY 0; 
SELECT * FROM v0 AS a36 WHERE ( ( a36.c3 + 255 ) % 0 ) == 100 ORDER BY 18446744073709551488; 
SELECT * FROM v5 AS a37, v16 AS a38 NATURAL JOIN v0 AS a39 ORDER BY 255; 
