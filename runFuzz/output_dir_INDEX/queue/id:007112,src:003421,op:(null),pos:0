CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 ( c2, c6, c2, c2 ) VALUES ( 0, 0, 0, 0 ), ( 0, 4294967295, 4294967295, 0 ), ( 0, 0, 0, 0 ) ON CONFLICT ( count ( c7 ) ) WHERE c2 IS NOT NULL DO UPDATE SET c7 = c2, c5 = c5; 
CREATE INDEX i8 ON v4 ( c5 ); 
INSERT INTO v4 VALUES ( 0, 0, 18446744071562067968 ), ( 127, 0, 0 ), ( 4294967295, 16, 127 ); 
CREATE INDEX i9 ON v4 ( c7 ); 
BEGIN; 
CREATE INDEX i10 ON v0 ( c1 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
DELETE FROM v0 WHERE c1 = c1; 
END; 
ALTER TABLE v4 RENAME TO v12; 
UPDATE v0 SET c2 = 'x' WHERE c2 = 0; 
SELECT * FROM v0 AS a13, v12 AS a14 ORDER BY 127; 
SELECT * FROM v12 AS a15, v0 AS a16 NATURAL JOIN v12 AS a17 ORDER BY 0; 
SELECT a18.c5 FROM v12 AS a18 ORDER BY 4294967295; 
SELECT * FROM v12 AS a19 WHERE a19.c7 > 0 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a20 ORDER BY ( a20.c2 + 0 ) % count ( a20.c2 ); 
SELECT * ORDER BY 18446744073709551615; 
SELECT a21.c1, UTF16le ( a21.c1 ) AS y FROM v0 AS a21 GROUP BY a21.c1 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a22 WHERE a22.c2 IS NOT NULL >= 18446744073709551615 ORDER BY 0; 
SELECT * FROM v12 AS a23 WHERE a23.c7 NOT NULL ORDER BY 0; 
SELECT a24.c5, count ( * ), avg ( a24.c7 ), max ( a24.c2 + a24.c6 * 0 ) FROM v12 AS a24 ORDER BY 0; 
