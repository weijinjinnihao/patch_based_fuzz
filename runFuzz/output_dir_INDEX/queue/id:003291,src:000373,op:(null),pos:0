CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE TABLE v2 ( c3 INT PRIMARY KEY, c4 REAL ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE VIEW v6 AS SELECT c1, c4 FROM v0 AS a7 LEFT JOIN v2 AS a8 ON c1 = c4 ORDER BY 0; 
CREATE VIEW v9 AS SELECT c4, c3 FROM v0 AS a10 LEFT JOIN v2 AS a11 ON c3 = c1 ORDER BY max ( c1 + c1 * 9223372036854775807 ) + 9223372036854775807, min ( c3, avg ( c1 ) ) + 0; 
CREATE INDEX i12 ON v9 ( y ); 
CREATE VIEW v13 AS SELECT c3, c4 FROM v2 AS a14 RIGHT JOIN v0 AS a15 ON c1 = c3 ORDER BY 18446744073709551615; 
CREATE VIEW v16 AS SELECT apr, c1 FROM v13 AS a17 LEFT JOIN v13 AS a18 ON c1 = c1 ORDER BY 10; 
CREATE INDEX i19 ON v13 ( apr ); 
CREATE INDEX i20 ON v16 ( id ); 
CREATE VIEW v21 AS SELECT c1, c1 FROM v6 AS a22 RIGHT JOIN v9 AS a23 ON c1 = y ORDER BY 9223372036854775807; 
CREATE INDEX i24 ON v6 ( c4 ); 
CREATE VIEW v25 AS SELECT c3, c1 FROM v2 AS a26 RIGHT JOIN v13 AS a27 ON c1 = c3 ORDER BY 10; 
INSERT INTO v2 ( c4 ) VALUES ( 9223372036854775807 ); 
UPDATE v9 SET y = zeroblob ( 18446744073709551615 ); 
INSERT INTO v9 ( y ) VALUES ( 127 ); 
INSERT INTO v16 ( id, id ) VALUES ( 127, 127 ); 
PRAGMA automatic_index = 5; 
VALUES ( 127, 10 ), ( 18446744073709551615, 10 ), ( 127, 10 ), ( 18446744071562067968, 0 ), ( 127, 18446744073709551615 ), ( 10, 0 ) ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a28 ORDER BY 127 - ( a28.c1 + a28.c1 ); 
SELECT a29.c1, count ( ( NOT ( a29.c1 IS NULL ) ) AND ( NOT ( a29.c1 IS NULL ) ) ) FROM v0 AS a29 ORDER BY 10; 
SELECT * FROM v16 AS a30 ORDER BY 2147483647; 
SELECT * FROM v16 AS a31 ORDER BY 9223372036854775807; 
SELECT * FROM v13 AS a32 ORDER BY a32.c1 COLLATE nocase; 
SELECT a33.apr, count ( * ), avg ( a33.apr ), max ( a33.id + a33.apr * 18446744073709551615 ) FROM v21 AS a33 GROUP BY y ( a33.id ) ORDER BY 0; 
SELECT count ( ( SELECT a35.y FROM v9 AS a35 WHERE a35.y = NULL AND a34.y >= a35.y ORDER BY 10 ) ) FROM v9 AS a34 ORDER BY 18446744073709551615; 
SELECT * FROM v2 AS a36 ORDER BY 18446744073709551488; 
WITH RECURSIVE v37 AS ( SELECT 10 y ORDER BY 10 ) SELECT ( SELECT min ( apr ) OVER ( ORDER BY 10 ) ORDER BY 0 ) FROM v37 AS a38 GROUP BY y ORDER BY 10; 
