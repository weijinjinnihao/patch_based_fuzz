CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
INSERT INTO v3 VALUES ( '1000000 10', 0, 0 ); 
INSERT INTO v3 VALUES ( 0, 0, 0 ), ( 0, 18446744071562067968, 0 ), ( 4294967295, 0, 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c2 = c2; END; 
INSERT INTO v3 VALUES ( ( ( c1 + 0 ) % 0 ) < 18446744073709551615, 'x', 'v1' ); 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v12 SET c1 = 'v0' WHERE c1 = 0; 
SELECT * FROM v3 AS a13, v12 AS a14 ORDER BY 0; 
SELECT * FROM v3 AS a15 WHERE CASE WHEN a15.c1 != 'v0' THEN 0 ELSE 0 END > 0 ORDER BY 0; 
SELECT * FROM v12 AS a16 ORDER BY 4294967295 COLLATE binary, 0 COLLATE hex; 
SELECT * FROM v12 AS a17 ORDER BY max ( a17.c2 + a17.c1 * 0 ) + 0, min ( a17.c1, avg ( a17.c1 ) ) + 64000; 
SELECT a18.c1 IS ( a18.c2 || a18.c2 || a18.c1 ), a18.c1 FROM v12 AS a18 ORDER BY 0; 
SELECT * FROM v3 AS a19 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a20 WHERE a20.c1 != a20.c2 ORDER BY 0; 
SELECT * FROM v3 AS a21 WHERE a21.c5 = a21.c2 NOT NULL ORDER BY 18446744073709551615; 
SELECT a22.c2, count ( a22.c2 ) FROM v12 AS a22 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a23, v12 AS a24 WHERE max ( a23.c1, a23.c2 ) > 18446744073709551615 ORDER BY 18446744073709551615; 
