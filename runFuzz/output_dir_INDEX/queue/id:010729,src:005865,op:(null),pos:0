CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE TABLE v4 ( c5 DEFAULT ( max ( FALSE ) ) ), STRICT; 
CREATE TABLE v6 ( c7, c8, c9, c10, c11, c12 INTEGER, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 INTEGER PRIMARY KEY, c49 ); 
CREATE TABLE v50 ( c51, c52, c53, c54, c55 INT, c56 AS( ( 'v0', c60 > FALSE, 'fig' ) < 16 + c57 - c53 ) REFERENCES t0, c57, c58, c59, c60, c61, c62, c63, c64 PRIMARY KEY ON CONFLICT REPLACE, c65, c66, c67 TEXT UNIQUE NOT NULL ); 
CREATE TABLE v68 ( c69 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c70 UNIQUE ON CONFLICT IGNORE, c71 UNIQUE ON CONFLICT FAIL ); 
CREATE INDEX i72 ON v68 ( c70 ); 
CREATE VIRTUAL TABLE v73 USING rtree ( c74, c75, c76, c77, c78, c79, c80, c81, c82 ); 
CREATE TABLE v83 ( c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i101 ON v73 ( c82 ); 
INSERT INTO v68 VALUES ( 16, 'x' ), ( 18446744073709551615, 'x' ), ( ( c69 || c70 || c71 ) != 'v0', 'x' ); 
CREATE INDEX i102 ON v6 ( c8 ); 
INSERT INTO v6 VALUES ( 16, 'z' ), ( 'v1', 'v0' ), ( 16, 'v1' ); 
CREATE TABLE v103 ( c104 DEFAULT x'ABCD' DEFAULT FALSE, c105 NOT NULL DEFAULT 18446744073709551615, c106 NOT NULL ON CONFLICT REPLACE DEFAULT 101, c107 NOT NULL ON CONFLICT IGNORE DEFAULT 0, c108 NOT NULL ON CONFLICT ABORT DEFAULT 16 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v50 BEGIN DELETE FROM v68; END; 
ALTER TABLE v68 RENAME TO v109; 
CREATE INDEX i110 ON v83 ( c85 ); 
UPDATE v6 SET c38 = 'v1' WHERE c28 = 100; 
SELECT * ORDER BY 16; 
SELECT quote ( a111.c71 ), quote ( a111.c69 ), 'x' FROM v109 AS a111 WHERE a111.c69 = + a111.c69 ORDER BY FALSE; 
SELECT * FROM v103 AS a112 GROUP BY a112.c107, abs ( a112.c106 ) HAVING CASE WHEN a112.c107 != 'c1' THEN 16 ELSE FALSE END > 16 >= 16 ORDER BY 18; 
SELECT count ( ( NOT ( a113.c5 IS NULL ) ) AND ( NOT ( a113.c5 IS NULL ) ) ) FROM v4 AS a113 ORDER BY FALSE; 
SELECT * FROM v103 AS a114 ORDER BY FALSE; 
SELECT count ( a115.c106 ) FROM v103 AS a115 ORDER BY 127; 
SELECT * FROM v6 AS a116 GROUP BY a116.c32 HAVING a116.c47 > a116.c22 % 100 >= 16 ORDER BY FALSE; 
SELECT * FROM v109 AS a117 ORDER BY FALSE; 
SELECT * FROM v103 AS a118 ORDER BY 0; 
SELECT * FROM v109 AS a119 WHERE a119.c71 = a119.c69 ORDER BY 127; 
