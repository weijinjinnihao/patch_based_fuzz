CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9 INTEGER, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28 INTEGER PRIMARY KEY ON CONFLICT IGNORE, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 INTEGER PRIMARY KEY, c46 ); 
CREATE INDEX i47 ON v3 ( c30 ); 
CREATE INDEX i48 ON v3 ( c33 ); 
CREATE INDEX i49 ON v0 ( c2 ); 
CREATE TABLE v50 ( c51, c52, c53, c54 DEFAULT 18446744073709551488 DEFAULT 100, c55, c56, c57, c58 PRIMARY KEY ON CONFLICT REPLACE, c59, c60, c61 TEXT UNIQUE NOT NULL ); 
CREATE TABLE v62 ( c63 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c64 UNIQUE ON CONFLICT IGNORE, c65 UNIQUE ON CONFLICT FAIL ); 
CREATE VIRTUAL TABLE v66 USING rtree ( c67, c68, c69, c70, c71, c72, c73, c74, c75 ); 
CREATE TABLE v76 ( c77 UNIQUE, c78 INTEGER UNIQUE ON CONFLICT FAIL, c79, c80, c81 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i82 ON v3 ( c35 ); 
INSERT INTO v3 VALUES ( 100, 'v0' ), ( 0, 'v1' ), ( ( c5 || c38 || c20 ) != 'x', 'ten' ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v83 USING rtree ( c84, c85, c86 ); 
CREATE INDEX i87 ON v3 ( c11 ); 
INSERT INTO v62 VALUES ( 4294967295, 'x' ), ( 'x', 'v1' ), ( 100, 'x1i' ); 
CREATE TABLE v88 ( c89 DEFAULT x'ABCD' DEFAULT 255, c90 NOT NULL DEFAULT 255, c91 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744073709551615, c92 NOT NULL ON CONFLICT IGNORE DEFAULT 100, c93 NOT NULL ON CONFLICT ABORT DEFAULT 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v88 BEGIN DELETE FROM v76; END; 
ALTER TABLE v83 RENAME TO v94; 
UPDATE v3 SET c29 = 'two-b' WHERE c38 = 18446744073709518848; 
SELECT * ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a95 ORDER BY + a95.c2; 
SELECT c80, c64, lower ( ( SELECT a97.c75 FROM v66 AS a97 WHERE a96.c80 = a97.c72 ORDER BY 100 ) ), 'v0' FROM ( SELECT count ( * ) AS y, a96.c81 AS y FROM v76 AS a96 GROUP BY 18446744073709551615 ORDER BY 100 ) AS y ORDER BY c2, c59; 
SELECT * FROM v94 AS a98, v3 AS a99 ORDER BY 9223372036854775807; 
SELECT * ORDER BY 0; 
SELECT a101.c80, count ( ( NOT ( a101.c84 IS NULL ) ) AND ( NOT ( a101.c86 IS NULL ) ) ), count ( ( NOT ( a100.c86 IS NULL ) ) AND ( NOT ( a101.c86 IS NULL ) ) ) FROM v94 AS a100 LEFT JOIN v94 AS a101 ON a100.c84 = a100.c86 ORDER BY NULL; 
SELECT * FROM v50 AS a102 WHERE ( a102.c60 = 18446744073709551615 OR a102.c51 = 4294967295 ) AND a102.c55 IN ( SELECT a102.c59 FROM ( SELECT a102.c59 FROM v76 AS a103 ORDER BY 100 ) AS y WHERE a102.c53 = 18446744073709551615 ORDER BY 18446744073709551488 ) ORDER BY 100; 
SELECT ( a105.c92 + 18446744073709551488 ) % 18446744073709551488, a105.c92 FROM v94 AS a104 LEFT JOIN v88 AS a105 ON a104.c80 = a105.c90 WHERE a105.c91 = + a104.c85 GROUP BY a105.c89 ORDER BY 100; 
SELECT 100 COLLATE hex FROM v62 AS a106 WHERE a106.c64 IS 18446744073709551488 ORDER BY 100; 
SELECT * ORDER BY 18446744073709518848; 
