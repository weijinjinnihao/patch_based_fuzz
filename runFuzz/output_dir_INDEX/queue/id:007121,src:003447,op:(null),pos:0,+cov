CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ) WITHOUT ROWID; 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 8, 'v0' ), ( 18446744073709551488, 'ab*' ), ( 0, 'v1' ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 9223372036854775807, 10, 18446744073709551488 ), ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, x'b1', 100 ); 
CREATE TRIGGER r1 UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c2 = c1; END; 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v3 RENAME TO v12; 
UPDATE v0 SET c2 = 'v0' WHERE c1 = 18446744071562067968; 
SELECT * FROM v12 AS a13 ORDER BY ( 18446744073709551615, count ( * ) ); 
SELECT * FROM v0 AS a14 ORDER BY a14.c2; 
SELECT * FROM v12 AS a15, v12 AS a16 NATURAL JOIN v12 AS a17 ORDER BY 18446744073709551488; 
SELECT a19.c5, count ( a19.c6 ) FROM v0 AS a18, v12 AS a19 WHERE a19.c5 = a19.c5 ORDER BY 100; 
SELECT * FROM v12 AS a20 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a21, v12 AS a22 ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a23 ORDER BY 10; 
SELECT * FROM v12 AS a24 ORDER BY 18446744073709518848; 
SELECT a25.c4 FROM v12 AS a25 ORDER BY 10; 
WITH v0 ( c26, c27, c28, c29, c30, c31 ) AS ( SELECT 10 y ORDER BY 18446744071562067968 ) SELECT 100 - ( c27 + v0.c26 ) WHERE CASE WHEN c28 != 'x' THEN 18446744073709551488 ELSE 8 END > 18446744073709551488 ORDER BY 8; 
