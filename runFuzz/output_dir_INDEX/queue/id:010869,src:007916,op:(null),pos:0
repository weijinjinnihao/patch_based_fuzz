CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8, c9, c10, c11, c12 ); 
CREATE TABLE v13 ( c14 INTEGER, c15 INTEGER PRIMARY KEY, c16 BLOB, FOREIGN KEY ( c14 ) REFERENCES t2 ); 
CREATE INDEX i17 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 10, 'anx' ), ( 10, 'v1' ), ( 100, '?k<D Q' ); 
INSERT INTO v0 VALUES ( 4294967295, 0, 4294967295 ), ( 4294967295, 10, 4294967295 ), ( 4294967295, 0, 100 ); 
INSERT INTO v13 VALUES ( 0, x'b1' ), ( 8, 4294967295 ), ( 255, 0 ); 
CREATE TABLE IF NOT EXISTS v18 ( c19 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c20 UNIQUE ON CONFLICT IGNORE, c21 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE INDEX i22 ON v18 ( c19 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v13 BEGIN DELETE FROM v18; END; 
CREATE INDEX i23 ON v3 ( c2 ); 
CREATE TABLE v24 ( c25, c26, c27 DEFAULT 127, c28 DOUBLE ); 
CREATE VIRTUAL TABLE v29 USING rtree ( c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40 ); 
CREATE INDEX i41 ON v0 ( c2 ); 
ALTER TABLE v29 RENAME TO v42; 
UPDATE v13 SET c14 = 'x' WHERE c16 = 18446744073709551488; 
SELECT * FROM v18 AS a43 ORDER BY 'yyy'; 
SELECT * FROM v18 AS a44 NATURAL JOIN v42 AS a45 ORDER BY 4294967295; 
SELECT * FROM v0 AS a46, v18 AS a47 NATURAL JOIN v3 AS a48 ORDER BY 4294967295; 
SELECT * FROM v42 AS a49 WHERE a49.c37 > 100 ORDER BY 100; 
WITH v42 ( c51 ) AS ( SELECT v42.c30 ORDER BY 16 ) SELECT * FROM v0 AS a50 ORDER BY 16; 
SELECT count ( a52.c31 ) FROM v42 AS a52 ORDER BY 16; 
SELECT a53.c26, ( + a53.c27 ) y, ( + a53.c28 ) y, ( + a54.c40 ) y, NOT EXISTS ( SELECT NULL FROM v24 AS a55 ORDER BY 10 ), CASE a53.c27 WHEN 100 THEN 0 WHEN 0 THEN 100 WHEN 0 THEN 'x' END, 'v1' FROM v24 AS a53 LEFT JOIN v42 AS a54 ON a54.c31 = a53.c26 WHERE a54.c31 < a53.c28 GROUP BY a53.c25, abs ( a54.c32 ) HAVING count ( * ) >= 4294967295 ORDER BY 255; 
WITH v42 ( c57 ) AS ( WITH v42 AS ( SELECT ( SELECT min ( c57 ) OVER ( ORDER BY 100 IN v42 ) ORDER BY 100 ) FROM v42 AS a58 GROUP BY c57 ORDER BY 4294967295 ) SELECT 9223372036854775807 ORDER BY 4294967295 ) SELECT * FROM v13 AS a56 ORDER BY 0; 
SELECT a59.c20 FROM v18 AS a59 ORDER BY 4294967295; 
WITH v60 ( c62, c63, c64, c65, c66, c67 ) AS ( SELECT 0 y ORDER BY ( ( c63 + 4294967295 ) % 100 ) < 100 ) SELECT * FROM v60 AS a61 ORDER BY 10; 
