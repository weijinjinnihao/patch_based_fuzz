CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( ( 0, count ( * ) ), 16, 18446744071562067968 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TABLE v9 ( c10, c11 INTEGER UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 DEFAULT 0 DEFAULT 100, c46, c47, c48, c49 INTEGER PRIMARY KEY, c50 ); 
CREATE INDEX i51 ON v0 ( c1 ); 
CREATE INDEX i52 ON v4 ( c5 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v9 WHERE c10 = c50; END; 
INSERT INTO v0 VALUES ( ( ( c1 + 16 ) % 0 ) < 18446744073709551615, '1.0', 'v1' ); 
CREATE INDEX i53 ON v4 ( c6 ); 
ALTER TABLE v4 RENAME TO v54; 
UPDATE v54 SET c5 = 'three-c' WHERE c7 = 16; 
SELECT * FROM v54 AS a55 WHERE CASE WHEN a55.c6 != 't2d' THEN 18446744073709551615 ELSE 16 END > 100 ORDER BY 0; 
SELECT * FROM v0 AS a56 WHERE a56.c2 = a56.c1 || a56.c1 ORDER BY 18446744073709518848; 
SELECT count ( a57.c5 ) FROM v54 AS a57 ORDER BY 18446744071562067968; 
SELECT a58.c49, count ( ( NOT ( a58.c47 IS NULL ) ) AND ( NOT ( a58.c28 IS NULL ) ) ) FROM v9 AS a58 ORDER BY 18446744071562067968; 
SELECT * FROM v54 AS a59 GROUP BY a59.c6, abs ( a59.c7 ) ORDER BY 0; 
SELECT max ( a60.c6 || a60.c6 ) FROM v54 AS a60 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a61 GROUP BY a61.c1, abs ( a61.c1 ) HAVING count ( * ) >= 0 ORDER BY 16; 
SELECT * FROM v54 AS a62 LEFT JOIN ( SELECT count ( * ) AS y, a63.c7 FROM ( v54 AS a63 INNER JOIN v54 AS a64 ON a62.c7 = a64.c6 ) AS y WHERE a63.c6 > 0 GROUP BY a64.c6 ORDER BY 0 ) AS y ON a62.c6 = a62.c5 y ORDER BY 0; 
SELECT * FROM v0 AS a65 WHERE a65.c2 = 0 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a66, v0 AS a67 NATURAL JOIN v0 AS a68 ORDER BY 100; 
