CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c6 ); 
CREATE INDEX i8 ON v3 ( c6 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 'x', 0, 456 ); 
INSERT INTO v0 ( c1, c1, c2 ) VALUES ( 0, 0, 'x' ) ON CONFLICT ( c1 ) DO UPDATE SET c1 = c1, c1 = c1; 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c4 = c6; END; 
INSERT INTO v3 VALUES ( ( ( c2 + 456 ) % 0 ) < 18446744073709551615, '4', 'v0' ); 
CREATE INDEX i10 ON v3 ( c4 ); 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v3 RENAME TO v12; 
UPDATE v0 SET c1 = 'x' WHERE c2 = 0; 
SELECT * FROM v12 AS a13, v0 AS a14 ORDER BY 0; 
SELECT * FROM v12 AS a15 WHERE CASE WHEN a15.c6 != 'v0' THEN 4294967295 ELSE 18446744073709551488 END > 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a16 ORDER BY 0 COLLATE binary, 18446744073709551488 COLLATE hex; 
SELECT * FROM v12 AS a17 ORDER BY max ( a17.c4 + a17.c2 * 18446744073709551488 ) + 456, min ( a17.c6, avg ( a17.c5 ) ) + 0; 
SELECT a18.c1 IS ( a18.c2 || a18.c2 || a18.c2 ), a18.c2 FROM v0 AS a18 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a19 ORDER BY 0; 
SELECT * FROM v0 AS a20 WHERE a20.c2 != a20.c2 ORDER BY 4294967295; 
SELECT * FROM v12 AS a21 WHERE a21.c5 = a21.c4 NOT NULL ORDER BY 0; 
SELECT a22.c6, count ( a22.c6 ) FROM v12 AS a22 ORDER BY 0; 
SELECT * FROM v12 AS a23, v12 AS a24 WHERE max ( a23.c5, a24.c5 ) > 18446744073709551615 ORDER BY 0; 
