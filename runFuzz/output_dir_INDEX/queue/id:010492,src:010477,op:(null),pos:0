CREATE TABLE v0 ( c1 UNIQUE, c2, c3 UNIQUE ON CONFLICT IGNORE, c4 UNIQUE ON CONFLICT FAIL, c5 UNIQUE ON CONFLICT REPLACE DEFAULT 65, c6, c7 REFERENCES t1 UNIQUE ON CONFLICT IGNORE, c8, c9, c10, c11, c12, c13 TEXT DEFAULT x'ABCD', c14, c15, c16, c17 UNIQUE ON CONFLICT IGNORE, c18 UNIQUE ON CONFLICT FAIL, c19 UNIQUE ON CONFLICT REPLACE DEFAULT 65, c20, c21 UNIQUE ON CONFLICT REPLACE DEFAULT 65, c22, c23, c24, c25, c26, c27, c28 INTEGER UNIQUE ON CONFLICT IGNORE, c29 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 65, c30, PRIMARY KEY ( c1, c23 ), UNIQUE ( c20 ) ); 
CREATE TABLE IF NOT EXISTS v31 ( c32, c33 TEXT, c34, PRIMARY KEY ( c33, c32 ), UNIQUE ( c33 ) ); 
CREATE INDEX i35 ON v0 ( c18 ); 
DELETE FROM v0; 
CREATE INDEX i36 ON v0 ( c30 ); 
INSERT INTO v31 ( c33, c32, c34, c33, c33 ) VALUES ( 65, 65, 65, 0, 127 ) ON CONFLICT ( c34 NOT NULL ) DO UPDATE SET c34 = c34, c32 = c32; 
CREATE INDEX i37 ON v0 ( c25 ); 
INSERT OR IGNORE INTO v0 ( c16, c9, c10, c26 ) VALUES ( 65, 16, 65, 127 ) ON CONFLICT ( c14 ) DO UPDATE SET c5 = c12, c28 = y ( c1 ); 
INSERT OR REPLACE INTO v31 ( c33, c34, c32, c33, c34 ) VALUES ( 65, 65, NULL, 65, 18446744073709551488 ); 
CREATE INDEX i38 ON v0 ( c7 ); 
INSERT OR ABORT INTO v0 ( c26, c18, c10, c12, c18 ) VALUES ( 18446744073709551615, 100, NULL, 127, 65 ); 
UPDATE OR IGNORE v0 SET c26 = c25 < y ( c28 ), c17 = c23, c5 = c17; 
CREATE INDEX i39 ON v31 ( c33 ); 
UPDATE v0 SET c5 = NULL, c4 = c28, c5 = c26; 
INSERT OR ABORT INTO v31 ( c32, c34, c33, c34 ) VALUES ( 127, 127, 18446744073709551488, 127 ); 
REINDEX; 
VALUES ( 18446744073709551615, 'ten' ), ( NULL, ( ( c34 + 65 ) % count ( c32 ) ) ) ORDER BY 65; 
SELECT * FROM v31 AS a40 ORDER BY 2147483647; 
SELECT * FROM v31 AS a41 ORDER BY - hex ( 0 ); 
SELECT a42.c4, max ( a42.c1 || a42.c12 ) FROM v0 AS a42 ORDER BY 18446744073709551488; 
SELECT * FROM v31 AS a43 WHERE a43.c34 != 65 ORDER BY 65; 
SELECT * FROM v0 AS a44 NATURAL JOIN v31 AS a45 ORDER BY 65; 
SELECT a46.c34 FROM v31 AS a46 ORDER BY 65; 
SELECT a47.c33, a47.c33, a47.c34 FROM v31 AS a47 GROUP BY a47.c34 ORDER BY 65; 
SELECT * FROM v31 AS a48 WHERE a48.c32 = ( a48.c33 + 2147483647 ) % count ( a48.c34 ) ORDER BY 65; 
SELECT a49.c32, count ( a49.c33 ) FROM v31 AS a49 ORDER BY 65; 
