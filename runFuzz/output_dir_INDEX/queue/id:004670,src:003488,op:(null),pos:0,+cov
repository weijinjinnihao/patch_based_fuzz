CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 0, 'v1' ), ( 0, 'x' ), ( 0, 'v1' ); 
INSERT OR REPLACE INTO v3 VALUES ( 18446744073709551488, 18446744071562067968, 16 ), ( 18446744073709551488, 0, 18446744073709551488 ), ( 0, 127, 18446744073709551488 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v3 ( c4 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0; END; 
CREATE INDEX i9 ON v3 ( c6 ); 
ALTER TABLE v0 RENAME TO v10; 
CREATE INDEX i11 ON v10 ( c2 ); 
CREATE INDEX i12 ON v3 ( c5 ); 
UPDATE v10 SET c1 = 'v0' WHERE c1 = 18446744073709551488; 
SELECT * FROM v10 AS a13 WHERE a13.c1 = a13.c1 ORDER BY 16; 
SELECT * FROM v10 AS a14 WHERE a14.c1 != 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT count ( a15.c5 ) FROM v3 AS a15 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a16, v3 AS a17 ORDER BY 10; 
SELECT * FROM v10 AS a18 ORDER BY 0; 
SELECT * FROM v10 AS a19, v10 AS a20 ORDER BY 127; 
SELECT ( CASE WHEN a21.c5 = 18446744071562067968 THEN 10 ELSE ( a21.c4 + 18446744073709551488 ) / 100 END ) AS y, count ( * ) FROM v3 AS a21 ORDER BY 10; 
SELECT * FROM v10 AS a22 ORDER BY 16; 
SELECT lower ( a24.c6 ) FROM v10 AS a23, v3 AS a24 ORDER BY 18446744073709551488; 
