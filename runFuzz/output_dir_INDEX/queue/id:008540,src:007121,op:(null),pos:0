CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ) WITHOUT ROWID; 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
CREATE TABLE v9 ( c10, c11, c12 PRIMARY KEY, CHECK( ( ( c11 + 18446744073709551615 ) % 8 ) != 18446744073709551615 ) ); 
INSERT INTO v5 VALUES ( 18446744073709551615, 18446744073709551615, 127 ), ( 8, 8, 18446744073709551615 ), ( 8, x'b1', 18446744071562067968 ); 
CREATE INDEX i13 ON v9 ( c10 ); 
CREATE INDEX i14 ON v9 ( c10 ); 
CREATE TRIGGER r1 UPDATE ON v9 BEGIN DELETE FROM v9 WHERE c6 = c12; END; 
ALTER TABLE v0 RENAME TO v15; 
CREATE INDEX i16 ON v5 ( c8 ); 
UPDATE v9 SET c12 = 'v0' WHERE c12 = 18446744073709551615; 
SELECT a17.c2, sum ( a17.c1 ) AS y FROM v5 AS a17 GROUP BY a17.c2 ORDER BY 0; 
SELECT a18.c8 FROM v5 AS a18 ORDER BY 18446744073709551615; 
SELECT count ( c1 ) ORDER BY 18446744073709551615; 
SELECT * FROM v15 AS a19 GROUP BY a19.c2 HAVING automatic_index ( * ) >= 18446744071562067968 ORDER BY 8; 
SELECT a20.c1 IS NULL, a20.c1 FROM v5 AS a20 ORDER BY max ( a20.c1 + a20.c1 * 18446744073709551615 ) + 18446744073709551488, min ( a20.c8, avg ( a20.c8 ) ) + 0; 
SELECT * FROM v5 AS a21 NATURAL JOIN v15 AS a22 ORDER BY 18446744073709551615; 
SELECT * FROM v15 AS a23 WHERE a23.c1 IS NOT NULL >= abs ( a23.c2 ) ORDER BY 0; 
SELECT * FROM v15 AS a24 WHERE a24.c2 IS 18446744073709551615 ORDER BY 18446744073709551488; 
SELECT * FROM v9 AS a25 ORDER BY 8; 
SELECT * FROM v5 AS a26 ORDER BY 18446744073709551615; 
