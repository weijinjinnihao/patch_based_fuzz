CREATE TABLE v0 ( c1 UNIQUE, c2, c3 UNIQUE ON CONFLICT IGNORE, c4 UNIQUE ON CONFLICT FAIL, c5 UNIQUE ON CONFLICT REPLACE DEFAULT 16, c6, c7, c8, c9, c10 REAL UNIQUE, c11 NOT NULL CHECK( c4 BETWEEN c4 AND c5 ), c12, c13, c14, c15 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 16, c16, PRIMARY KEY ( c12, c5 ), UNIQUE ( c11 ) ) WITHOUT ROWID; 
INSERT OR REPLACE INTO v0 ( c13, c12, c1, c1, c4 ) VALUES ( 16, 16, 16, 0.100000, 16 ) ON CONFLICT DO UPDATE SET c5 = c14, c6 = c10, c9 = c4; 
DELETE FROM v0; 
CREATE TABLE v17 ( c18 INTEGER PRIMARY KEY, c19 TEXT ), STRICT; 
INSERT INTO v0 ( c5, c16, c7, c2, c10 ) VALUES ( 16, 127, 16, 16, 18446744073709551615 ) ON CONFLICT DO UPDATE SET c6 = c6, c5 = c16, c8 = c9; 
INSERT OR IGNORE INTO v17 ( c18, c18, c18, c18 ) VALUES ( 18446744073709551488, 18446744073709551488, 16, 0 ) ON CONFLICT DO UPDATE SET c18 = c18, c19 = c19, c18 = c19; 
INSERT OR REPLACE INTO v17 ( c18, c18, c19, c18, c19 ) VALUES ( 16, 16, NULL, 0, 16 ); 
DELETE FROM v0 WHERE c13 = c4; 
INSERT OR ABORT INTO v17 ( c18, c18, c19, c19, c19 ) VALUES ( 0, 16, NULL, 0.100000, 16 ); 
UPDATE OR IGNORE v0 SET c11 = NULL, c10 = c16, c15 = c7; 
CREATE INDEX i20 ON v0 ( c7 ); 
CREATE INDEX i21 ON v0 ( c4 ); 
UPDATE v0 SET c14 = NULL, c3 = c14, c10 = c9; 
CREATE VIEW v22 AS SELECT * FROM v17 AS a23 WHERE ( c19 = 0.100000 OR c18 = 16 ) AND c19 IS ( SELECT c19 FROM ( SELECT c11 FROM v0 AS a26 ORDER BY 0 ) AS y, v17 AS a24 NATURAL JOIN v17 AS a25 WHERE c19 = 255 ORDER BY 255 ) ORDER BY 0; 
CREATE INDEX i27 ON v17 ( c19 ); 
INSERT OR ABORT INTO v22 ( c8, c15, c3, c3 ) VALUES ( 16, 18446744073709551615, 0.100000, 16 ); 
CREATE INDEX i28 ON v22 ( c15 ); 
CREATE INDEX i29 ON v22 ( c3 ); 
SELECT * FROM v22 AS a30, v0 AS a31 NATURAL JOIN v17 AS a32 ORDER BY 16; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v17 AS a33 ORDER BY 1; 
SELECT max ( a34.c21 || a34.c15 ) FROM v22 AS a34 ORDER BY 0; 
WITH v0 AS ( WITH v17 AS ( SELECT 0.100000 y ORDER BY 0 ) SELECT avg ( v0.c14 ) FROM ( SELECT * ORDER BY 0 ) AS y ORDER BY 18446744073709551615 ) SELECT v0.c4 COLLATE binary ORDER BY 16; 
SELECT * FROM v0 AS a35, v22 AS a36 NATURAL JOIN v17 AS a37 ORDER BY 18446744073709551615; 
SELECT * FROM v22 AS a38 GROUP BY a38.c3 HAVING NULL ORDER BY 8; 
SELECT a39.c4 FROM v0 AS a39 ORDER BY 8; 
SELECT a40.c9, count ( a40.c5 ) FROM v0 AS a40 ORDER BY 16; 
SELECT * FROM v22 AS a41 GROUP BY a41.c15, abs ( a41.c15 ) HAVING CASE WHEN a41.c21 != 'v1' THEN 16 ELSE 16 END > 0 >= 0 ORDER BY 16; 
