CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE TABLE v7 ( c8, c9, c10 INTEGER, c11 DEFAULT 18446744071562067968 DEFAULT 18446744073709551488, c12, c13, c14, c15, c16, c17, c18, c19, c20 NOT NULL DEFAULT 18446744073709551615, c21 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744071562067968, c22 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744073709551488, c23 NOT NULL ON CONFLICT ABORT DEFAULT 18446744071562067968 ); 
INSERT INTO v7 VALUES ( 18446744073709551615, 'v0' ), ( 0, 18446744071562067968, hex ( 18446744073709551488 ) ), ( ( SELECT * FROM v3 AS a24 WHERE c1 = c1 || c1 ORDER BY 10 ) % 16 ); 
ALTER TABLE v0 DROP COLUMN c2; 
BEGIN; 
INSERT INTO v3 VALUES ( 18446744071562067968, 18446744073709551615, 18446744073709551488 ), ( 18446744071562067968, 18446744073709551488, 18446744073709551615 ), ( 127, 18446744073709551615, 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c1 = c14; END; 
CREATE INDEX i25 ON v0 ( c1 ); 
CREATE INDEX i26 ON v7 ( c22 ); 
CREATE INDEX i27 ON v7 ( c8 ); 
CREATE INDEX i28 ON v3 ( c5 ); 
CREATE INDEX i29 ON v3 ( c4 ); 
ALTER TABLE v0 ADD COLUMN c30 TEXT CHECK( c37 ( ( ( ( c1 + 18446744071562067968 ) % 8 ) == 18446744071562067968 ) % 18446744073709551488 ) != 18446744073709551615 ) DEFAULT 18446744071562067968; 
UPDATE v3 SET c1 = 'v0' WHERE c5 = 18446744073709551488; 
SELECT * FROM v0 AS a31 GROUP BY a31.c1, abs ( a31.c2 ) HAVING count ( * ) >= 0 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a32 ORDER BY x'616263'; 
SELECT * FROM ( v0 AS a33 ), ( v3 AS a34 ), ( v3 AS a35 ) NATURAL JOIN ( v7 AS a36 NATURAL JOIN v7 AS a37 ) WHERE a34.c1 = a33.c1 + 18446744073709551615 AND a35.c5 = a36.c16 + 18446744073709551488 AND a37.c9 = a35.c4 + 10 ORDER BY 18446744071562067968; 
SELECT * ORDER BY 18446744073709551488; 
WITH v38 AS ( SELECT 18446744073709551488 y ORDER BY 18446744073709551488 ) SELECT ( SELECT min ( c2 ) OVER ( ORDER BY 18446744071562067968 ) ORDER BY 18446744073709551488 ) FROM v38 AS a39 GROUP BY c1 ORDER BY 18446744071562067968; 
SELECT * FROM v3 AS a40, v0 AS a41 ORDER BY 18446744071562067968; 
SELECT count ( * ) WHERE count ( * ) >= 18446744071562067968 = 'v0' GROUP BY c1 ORDER BY 18446744073709551488; 
SELECT * FROM v3 AS a42 ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a43, v3 AS a44 ORDER BY 18446744071562067968; 
SELECT max ( a45.c16 || a45.c12 ) FROM v7 AS a45 ORDER BY 16; 
