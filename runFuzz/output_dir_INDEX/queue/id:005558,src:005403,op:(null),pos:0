CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE TABLE v7 ( c8, c9 INTEGER UNIQUE ON CONFLICT FAIL, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42 TEXT PRIMARY KEY, c43 DEFAULT 127 DEFAULT 127, c44, c45, c46, c47 INTEGER PRIMARY KEY, c48 ); 
CREATE INDEX i49 ON v7 ( c24 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v7 BEGIN DELETE FROM v3 WHERE c47 = c44; END; 
CREATE INDEX i50 ON v7 ( c21 ); 
INSERT INTO v0 VALUES ( ( ( c2 + 9223372036854775807 ) % 18446744073709551488 ) < 18446744073709551488, 'v1', 'x' ); 
CREATE INDEX i51 ON v7 ( c13 ); 
ALTER TABLE v3 RENAME TO v52; 
CREATE INDEX i53 ON v52 ( c4 ); 
UPDATE v52 SET c4 = 'v1' WHERE c4 = 127; 
CREATE INDEX i54 ON v52 ( c5 ); 
SELECT * FROM v7 AS a55 ORDER BY 9223372036854775807; 
SELECT a56.c20 FROM v7 AS a56 ORDER BY 9223372036854775807; 
SELECT * FROM v7 AS a57 ORDER BY 127 - ( a57.c45 + a57.c25 ); 
SELECT a58.c6, count ( a59.c2 ) FROM v52 AS a58, v0 AS a59 WHERE a58.c6 = + a58.c4 ORDER BY 127; 
SELECT * FROM v52 AS a60 WHERE a60.c5 = a60.c6 || a60.c4 ORDER BY 127; 
SELECT a62.c5, a61.c4 FROM v52 AS a61 LEFT JOIN v52 AS a62 ON a61.c4 = a61.c6 y ORDER BY 0; 
WITH v63 ( c65 ) AS ( SELECT c65 + ( SELECT max ( c65 ) FROM v63 AS a69 ORDER BY 127 ), c65 + ( SELECT c65 FROM v63 AS a68 ORDER BY 18446744073709551488 ), c65 + ( SELECT max ( c65 ) FROM v63 AS a67 ORDER BY 127 ) FROM v63 AS a66 ORDER BY 127 ) SELECT * FROM v63 AS a64 ORDER BY 127; 
SELECT * FROM v52 AS a70, v52 AS a71 NATURAL JOIN v7 AS a72 ORDER BY 10; 
VALUES ( 18446744073709551488, 0, 0 ) ORDER BY ( c47 || c2 || c2 ) != '$long'; 
SELECT * FROM v7 AS a73 WHERE ( a73.c30 = 127 OR a73.c43 > 18446744073709551615 ) AND a73.c38 IN ( SELECT a73.c37 FROM ( SELECT a74.c6 FROM v52 AS a74 ORDER BY 111 ) AS y WHERE a73.c39 = 18446744073709551488 ORDER BY 127 ) GROUP BY a73.c43, abs ( a73.c15 ) HAVING count ( * ) >= 127 ORDER BY 127; 
