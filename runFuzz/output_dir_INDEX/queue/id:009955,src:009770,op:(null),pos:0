CREATE TABLE v0 ( c1, c2 INTEGER UNIQUE ON CONFLICT FAIL, c3, c4 UNIQUE, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17 UNIQUE ON CONFLICT REPLACE DEFAULT 4294967295, c18, c19, c20, c21, c22, c23, c24, c25 INTEGER CHECK( x'b1' ), c26, c27 INTEGER DEFAULT 4294967295, c28, c29, PRIMARY KEY ( c11, c23, c19, c22, c29, c20, c29, c12, c29, c21, c25 ) ) WITHOUT ROWID; 
INSERT INTO v0 ( c15, c27, c4, c23, c6 ) VALUES ( 4294967295, 4294967295, 4294967295, 18446744073709551615, 4294967295 ) ON CONFLICT DO UPDATE SET c27 = c27, c28 = c3, c29 = ( ( ( ( c14 + 18446744073709551615 ) % 18446744073709551615 ) == 4294967295 ) % 18446744071562067968 ); 
DELETE FROM v0; 
INSERT INTO v0 ( c28, c28, c3, c28, c4 ) VALUES ( 4294967295, 18446744073709551615, 4294967295, 18446744073709551488, 4294967295 ); 
INSERT OR IGNORE INTO v0 ( c20, c1, c25, c10 ) VALUES ( 18446744071562067968, 4294967295, 0, 127 ); 
INSERT OR REPLACE INTO v0 ( c22, c10, c7, c4, c14 ) VALUES ( 18446744073709551615, 18446744071562067968, NULL, 4294967295, 18446744071562067968 ); 
INSERT INTO v0 VALUES ( NULL, 9223372036854775807, 4294967295, 'v1' ), ( NULL, 18446744073709551615, 4294967295, 'v1' ), ( NULL, 4294967295, 0, 'x' ), ( NULL, 127, 4294967295, 'v0' ), ( NULL, 127, 4294967295, 'ddd' ); 
CREATE INDEX i30 ON v0 ( c12 ); 
CREATE INDEX i31 ON v0 ( c3 ); 
INSERT OR ABORT INTO v0 ( c5, c25, c23, c28, c19 ) VALUES ( 18446744073709551488, 127, NULL, 4294967295, 4294967295 ); 
CREATE INDEX i32 ON v0 ( c21 ); 
UPDATE OR IGNORE v0 SET c25 = NULL, c25 = c8, c12 = c4; 
UPDATE v0 SET c11 = NULL, c25 = c26, c2 = c11; 
INSERT OR ABORT INTO v0 ( c26, c14, c14, c12 ) VALUES ( 127, 9223372036854775807, 18446744073709551488, 18446744073709551488 ); 
CREATE INDEX i33 ON v0 ( c29 ); 
CREATE INDEX i34 ON v0 ( c25 ); 
SELECT * FROM v0 AS a35 GROUP BY a35.c23, abs ( a35.c14 ) HAVING CASE WHEN a35.c20 != '1.0' THEN 16 ELSE 18446744071562067968 END > 16 >= 18446744073709551615 ORDER BY 255; 
SELECT * FROM v0 AS a36 ORDER BY a36.c16 COLLATE NOCASE, a36.c27; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 18446744073709551615 ) SELECT * FROM v0 AS a37 ORDER BY 0; 
SELECT * FROM v0 AS a38 ORDER BY 100; 
SELECT max ( a39.c23 || a39.c4 ) FROM v0 AS a39 ORDER BY 9223372036854775807; 
SELECT * FROM v0 AS a40 WHERE 255 ORDER BY 4294967295; 
WITH v0 AS ( SELECT ( SELECT min ( a42.c15 ) OVER ( ORDER BY 9223372036854775807 ) ORDER BY a41.c5 ) FROM v0 AS a42 GROUP BY a41.c8 ORDER BY 0 ) SELECT * FROM v0 AS a41 ORDER BY 8; 
SELECT * FROM v0 AS a43 ORDER BY ( CASE WHEN a43.c9 != 'x' THEN 18446744073709518848 ELSE 18446744073709551488 END ); 
SELECT * FROM v0 AS a44 ORDER BY - hex ( 18446744073709551488 ); 
SELECT * FROM v0 AS a45 ORDER BY - 18446744071562067968; 
