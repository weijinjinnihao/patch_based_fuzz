CREATE TABLE v0 ( c1, c2, c3, PRIMARY KEY ( c1, c3 ) ) WITHOUT ROWID; 
ATTACH 'four' AS sqlite_master; 
CREATE TABLE v4 ( c5, c6 CHECK( 100 ), c7, c8, CHECK( c6 > 100 ) ); 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE TABLE v10 ( c11 UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33 INTEGER CHECK( x'b1' ), c34, c35, c36, c37, c38, c39, c40, c41, c42, c43 UNIQUE, c44, PRIMARY KEY ( c11, c42 ) ); 
ALTER TABLE v10 DROP c36; 
CREATE INDEX i45 ON v10 ( c44 ); 
ALTER TABLE v0 DROP c2; 
CREATE INDEX i46 ON v4 ( c6 ); 
CREATE TABLE v47 ( c48, c49, c50 PRIMARY KEY ) WITHOUT ROWID; 
CREATE INDEX i51 ON v0 ( c1 ); 
SELECT * FROM v47 AS a52 ORDER BY NULL; 
SELECT * ORDER BY 100; 
SELECT * FROM v47 AS a53 ORDER BY 100; 
SELECT * FROM v47 AS a54 ORDER BY 18446744073709551615 COLLATE binary, 100 COLLATE hex; 
SELECT * FROM v4 AS a55 ORDER BY 100; 
SELECT * FROM v0 AS a56 ORDER BY 255; 
SELECT abs ( a57.c6 ), a58.c1 FROM v4 AS a57 RIGHT JOIN v0 AS a58 ON a57.c7 = a57.c7 GROUP BY a58.c3 HAVING count ( * ) >= 100 ORDER BY a57.c5 COLLATE nocase; 
SELECT a59.c3 FROM v0 AS a59 ORDER BY 100; 
WITH RECURSIVE v47 AS ( SELECT 100 y ORDER BY 255 ) SELECT * FROM v0 AS a60 ORDER BY 100; 
WITH v4 ( c62 ) AS ( SELECT a63.c50 + ( SELECT max ( a64.c5 ) FROM v0 AS a66 ORDER BY 100 ), a61.c5 + ( SELECT a63.c50 FROM v0 AS a65 ORDER BY 18446744073709551615 ), a61.c5 + ( SELECT max ( c62 ) FROM v4 AS a64 ORDER BY 100 ) FROM v47 AS a63 ORDER BY 0 ) SELECT * FROM v4 AS a61 ORDER BY 18446744073709551615; 
