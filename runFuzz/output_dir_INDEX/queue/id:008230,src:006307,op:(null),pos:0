CREATE TABLE v0 ( c1 ); 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE TABLE v3 ( c4 ); 
CREATE INDEX i5 ON v3 ( c4 ); 
CREATE INDEX i6 ON v3 ( c4 ); 
CREATE INDEX i7 ON v3 ( c4 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER INSERT ON v3 BEGIN UPDATE v3 SET ( c1 ) = ( EXISTS ( SELECT FALSE WHERE ( WITH v3 ( c10 ) AS ( WITH v3 ( c11, c12, c13, c14, c15, c16 ) AS ( SELECT 10 y ORDER BY 18446744073709551615 ) SELECT FALSE ORDER BY 18446744073709551615 ) SELECT c4 FROM v3 AS a9 ORDER BY FALSE ) ORDER BY 18446744073709551615 ) ); END; 
CREATE TABLE v17 ( c18 INTEGER UNIQUE ON CONFLICT FAIL, c19 ); 
ALTER TABLE v17 RENAME TO v20; 
CREATE TABLE v21 ( c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37 DEFAULT x'ABCD', c38, c39, c40, c41 ANY ); 
SELECT * FROM v3 AS a42 GROUP BY a42.c1 HAVING NULL ORDER BY 18446744073709551615; 
SELECT * FROM v20 AS a43 ORDER BY ( hex ( 18446744073709551615 ) ) % FALSE; 
SELECT a44.c1, max ( a44.c1 || a44.c1 ) FROM v0 AS a44 ORDER BY 18446744073709551615; 
WITH v21 ( c46 ) AS ( SELECT a47.c19 + ( SELECT max ( a45.c24 ) FROM v21 AS a50 ORDER BY 18446744073709551615 ), a47.c18 + ( SELECT a45.c30 FROM v0 AS a49 ORDER BY FALSE ), a45.c31 + ( SELECT max ( c46 ) FROM v21 AS a48 ORDER BY FALSE ) FROM v20 AS a47 ORDER BY 18446744073709551615 ) SELECT a45.c26, UTF16le ( a45.c26 ) AS y FROM v21 AS a45 GROUP BY c46 ORDER BY 18446744073709551615; 
SELECT * FROM v21 AS a51 WHERE a51.c32 = CASE WHEN a51.c41 != 'aB%' THEN 16 ELSE 18446744073709551615 END > 18446744073709551615 ORDER BY FALSE; 
SELECT a52.c18 FROM ( SELECT a52.c18, max ( a53.c18 ) AS y FROM v20 AS a53 WHERE a53.c18 >= FALSE GROUP BY a53.c18 ORDER BY 0 ) AS y JOIN v20 AS a52 WHERE a52.c18 = a52.c18 AND a52.c18 = a52.c19 ORDER BY a52.c19; 
SELECT * FROM v20 AS a54, v3 AS a55 ORDER BY 10; 
SELECT * FROM v3 AS a56 ORDER BY 18446744073709551615; 
WITH v20 ( c58 ) AS ( SELECT * ORDER BY 18446744073709551615 ) SELECT a57.c19, sum ( a57.c19 ) AS y FROM v20 AS a57 GROUP BY c58 ORDER BY 18446744073709551615; 
SELECT * FROM v20 AS a59 NATURAL JOIN v20 AS a60 ORDER BY FALSE; 
