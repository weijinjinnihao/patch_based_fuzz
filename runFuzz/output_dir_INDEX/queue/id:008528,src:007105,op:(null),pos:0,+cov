CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
CREATE INDEX i8 ON v4 ( c2 ); 
INSERT OR IGNORE INTO v4 VALUES ( 18446744073709551488, 'v0', 2147483647 ), ( 2147483647, 'id.3', NULL ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 2147483647, 2147483647 ), ( 18446744073709551488, 100, 18446744073709551615 ), ( 18446744073709551615, 18446744073709551488, 2147483647 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v4 ( c6 ); 
BEGIN; 
DELETE FROM v4 WHERE c5 = c5; 
END; 
CREATE INDEX i11 ON v4 ( c6 ); 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v4 SET c7 = 'x' WHERE c6 = 16; 
WITH v12 ( c13 ) AS ( SELECT 18446744073709551615 ORDER BY 18446744073709551615 ) VALUES ( 18446744073709551615, 'x', NULL, NULL ) ORDER BY 2147483647; 
SELECT CASE WHEN a14.c1 % 18446744073709551488 != 8 THEN a14.c2 END, a14.c2, a14.c2 FROM v12 AS a14 WHERE a14.c1 <= ( 'x', a14.c1 > 2147483647, 'v1' ) ORDER BY 2147483647; 
SELECT * FROM v12 AS a15 WHERE a15.c2 IS NOT NULL ORDER BY 8; 
SELECT a16.c1 FROM v12 AS a16 ORDER BY 18446744073709551615; 
SELECT count ( ( NOT ( a17.c2 IS NULL ) ) AND ( NOT ( a17.c1 IS NULL ) ) ) FROM v12 AS a17 ORDER BY 16; 
SELECT * FROM v12 AS a18 ORDER BY abs ( a18.c1 ); 
SELECT * FROM v4 AS a19 ORDER BY a19.c5, a19.c6; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * ORDER BY 100; 
SELECT * FROM v12 AS a20 WHERE a20.c1 > 100 ORDER BY 18446744073709551615; 
