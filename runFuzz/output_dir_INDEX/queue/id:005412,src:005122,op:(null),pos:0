CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( 'v1', 0, 0 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TABLE v9 ( c10, c11 INTEGER UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16 PRIMARY KEY, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 DEFAULT 18446744071562067968 DEFAULT 0, c46, c47, c48, c49 INTEGER PRIMARY KEY, c50 ); 
CREATE INDEX i51 ON v0 ( c1 ); 
CREATE INDEX i52 ON v9 ( c29 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v9 WHERE c1 = c5; END; 
INSERT INTO v4 VALUES ( ( ( c1 + 16 ) % 18446744071562067968 ) < 18446744071562067968, 'x', 'v1' ); 
CREATE INDEX i53 ON v9 ( c18 ); 
ALTER TABLE v0 RENAME TO v54; 
UPDATE v54 SET c2 = 'v0' WHERE c1 = 0; 
SELECT * FROM v9 AS a55 WHERE CASE WHEN a55.c20 != 'Y' THEN 0 ELSE 18446744071562067968 END > 8 ORDER BY 0; 
SELECT * FROM v54 AS a56 WHERE a56.c1 = a56.c2 || a56.c1 ORDER BY 0; 
SELECT count ( a57.c2 ) FROM v54 AS a57 ORDER BY 0; 
SELECT a58.c2, count ( ( NOT ( a58.c2 IS NULL ) ) AND ( NOT ( a58.c2 IS NULL ) ) ) FROM v54 AS a58 ORDER BY 18446744073709551488; 
SELECT * FROM v4 AS a59 GROUP BY a59.c6, abs ( a59.c5 ) ORDER BY 127; 
SELECT max ( a60.c2 || a60.c2 ) FROM v54 AS a60 ORDER BY 18446744073709551488; 
SELECT * FROM v9 AS a61 GROUP BY a61.c10, abs ( a61.c44 ) HAVING count ( * ) >= 0 ORDER BY 0; 
SELECT * FROM v54 AS a62 LEFT JOIN ( SELECT count ( * ) AS y, a64.c23 FROM ( v54 AS a63 INNER JOIN v9 AS a64 ON a62.c2 = a64.c31 ) AS y WHERE a63.c1 > 18446744071562067968 GROUP BY a62.c2 ORDER BY 18446744073709518848 ) AS y ON a62.c2 = a62.c2 y ORDER BY 2147483647; 
SELECT * FROM v4 AS a65 WHERE a65.c5 = 0 ORDER BY 18446744073709551615; 
SELECT * FROM v54 AS a66, v54 AS a67 NATURAL JOIN v54 AS a68 ORDER BY 18446744073709551615; 
