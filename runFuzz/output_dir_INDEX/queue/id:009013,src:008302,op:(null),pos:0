CREATE TABLE v0 ( c1, c2 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c2, c2 ) = ( ( SELECT CASE WHEN c1 % 100 != 100 THEN c2 END, c1, c2 FROM v0 AS a3 WHERE c2 <= 100 ORDER BY max ( c2 + c1 * 100 ) + 18446744073709551615, min ( c2, avg ( c2 ) ) + 18446744073709551615 ), 16 ); END; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE TABLE v5 ( c6 INTEGER PRIMARY KEY, c7 INT, c8 VARCHAR(1000) ) WITHOUT ROWID; 
CREATE INDEX i9 ON v5 ( c8 ); 
CREATE TRIGGER r1 AFTER INSERT ON v5 BEGIN UPDATE v0 SET c2 = 18446744073709551615 FROM v0 AS a10, v5 AS a11 NATURAL JOIN v5 AS a12 WHERE c7 = c6; END; 
CREATE INDEX i13 ON v0 ( c1 ); 
CREATE INDEX i14 ON v5 ( c8 ); 
CREATE INDEX i15 ON v5 ( c8 ); 
ALTER TABLE v0 RENAME c2 TO c16; 
SELECT a17.c6, count ( ( NOT ( a17.c7 IS NULL ) ) AND ( NOT ( a17.c7 IS NULL ) ) ) FROM v5 AS a17 ORDER BY 100; 
SELECT * ORDER BY 100; 
SELECT * FROM v0 AS a18 GROUP BY a18.c16 HAVING a18.c16 > a18.c16 % 0 >= 100 ORDER BY 18446744073709551615; 
SELECT ( 18446744073709551615, count ( * ) ) != 18446744073709551615 ORDER BY 18446744073709518848; 
SELECT * FROM v5 AS a19 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a20, v0 AS a21 ORDER BY 4294967295; 
SELECT * FROM v5 AS a22, v0 AS a23 NATURAL JOIN v0 AS a24 ORDER BY 100; 
WITH v25 ( c27 ) AS ( WITH v28 AS ( SELECT ( SELECT min ( c27 ) OVER ( ORDER BY 18446744073709551488 ) ORDER BY 0 ) FROM v28 AS a30 GROUP BY c27 ORDER BY 100 ) SELECT 18446744073709551615 ORDER BY 100 ) SELECT c27 + ( SELECT max ( c27 ) FROM v25 AS a32, v25 AS a33 NATURAL JOIN v28 AS a34 ORDER BY 4294967295 ), c27 + ( SELECT max ( c27 ) FROM v28 AS a31 ORDER BY 18446744073709551615 ), c27 + ( SELECT max ( c27 ) FROM v25 AS a29 ORDER BY 4294967295 ) FROM v25 AS a26 ORDER BY 255; 
SELECT * FROM v0 AS a35, v5 AS a36 NATURAL JOIN v0 AS a37 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a38 WHERE a38.c6 > 100 ORDER BY 10; 
