CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 'x', ( ( hex ( 18446744071562067968 ) ) % 18446744071562067968 ) != 18446744071562067968, hex ( 18446744071562067968 ) ), ( 18446744073709518848, 'v1' ), ( 18446744071562067968, 'ccc' ); 
CREATE VIEW v5 AS SELECT c2 + ( SELECT max ( c1 ) FROM v0 AS a9 ORDER BY 18446744071562067968 ), c1 + ( SELECT max ( c2 ) FROM v0 AS a8 ORDER BY 18446744071562067968 ), c2 + ( SELECT max ( c2 ) FROM v0 AS a7 ORDER BY 18446744071562067968 ) FROM v0 AS a6 ORDER BY + c1; 
INSERT INTO v0 VALUES ( 18446744071562067968, 18446744071562067968, 18446744073709551488 ), ( 18446744071562067968, 18446744071562067968, 18446744071562067968 ), ( 18446744071562067968, 18446744071562067968, 18446744071562067968 ); 
CREATE INDEX i10 ON v0 ( c1 ); 
CREATE INDEX i11 ON v5 ( c1 ); 
CREATE INDEX i12 ON v5 ( c1 ); 
CREATE INDEX i13 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c3 = c2; END; 
ALTER TABLE v0 RENAME TO v14; 
UPDATE v14 SET c2 = NULL, c2 = c2, c3 = c1 FROM v5 AS a15 NATURAL JOIN v5 AS a16; 
SELECT ( ( c1 + 18446744071562067968 ) % 18446744071562067968 ) == 18446744073709551615 ORDER BY 18446744071562067968; 
SELECT * FROM v14 AS a17 ORDER BY 18446744071562067968; 
SELECT count ( a18.c1 ) FROM v5 AS a18 ORDER BY 18446744071562067968; 
SELECT * FROM v14 AS a19 ORDER BY 18446744073709518848; 
WITH v20 AS ( SELECT ( SELECT min ( c2 ) OVER ( ORDER BY 18446744071562067968 ) ORDER BY c1 ) FROM v20 AS a21 GROUP BY c3 ORDER BY 18446744071562067968 ) VALUES ( 18446744073709551615, 'v0' ), ( 18446744073709551615, 'm' ), ( 18446744073709551615, 'v0' ) ORDER BY 18446744071562067968; 
WITH v22 ( c23 ) AS ( SELECT 'x' ORDER BY 18446744073709551615 ) SELECT 18446744071562067968 y ORDER BY 18446744071562067968; 
SELECT * FROM v5 AS a24 NATURAL JOIN v14 AS a25 ORDER BY 187; 
SELECT * ORDER BY 18446744071562067968; 
SELECT * ORDER BY 255; 
SELECT * ORDER BY 18446744071562067968; 
