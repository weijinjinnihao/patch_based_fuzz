CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INT, c3 VARCHAR(1000) ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7, c8, c9 ); 
CREATE INDEX i10 ON v4 ( c1 ); 
CREATE INDEX i11 ON v0 ( c3 ); 
CREATE TABLE v12 ( c13, c14, c15, c16, c17, c18, c19, c20, c21, c22 INT UNIQUE ON CONFLICT IGNORE, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52 PRIMARY KEY, CHECK( ( ( c29 + 0 ) % 0 ) != 0 ) ); 
CREATE TABLE v53 ( c54 DEFAULT x'ABCD', c55 TEXT, c56 BLOB, CHECK( coalesce ( c54, c56 ) ) ); 
ANALYZE; 
UPDATE v4 SET c5 = 'v0' WHERE c7 = '?k<D Q'; 
CREATE INDEX i57 ON v4 ( c1 ); 
ANALYZE; 
CREATE TABLE v58 ( c59 INT, c60 TEXT, c61 BLOB, c62 REAL ); 
CREATE INDEX i63 ON v12 ( c47 ); 
CREATE TABLE v64 ( c65 INT, c66 TEXT, c67 BLOB, c68 REAL ); 
CREATE INDEX i69 ON v12 ( c39 ); 
SELECT * FROM v53 AS a70 ORDER BY 0; 
SELECT * FROM v64 AS a71 ORDER BY count ( * ); 
SELECT a72.c65, a72.c66 y FROM v64 AS a72 RIGHT JOIN v58 AS a73 ON a72.c66 = a73.c59 ORDER BY 0; 
WITH v64 ( c76 ) AS ( SELECT 0 ORDER BY 0 ) SELECT 'v1', a75.c62 FROM v64 AS a74 RIGHT JOIN v58 AS a75 ON a74.c60 = a74.c76 ORDER BY 127; 
SELECT * FROM v0 AS a77 ORDER BY 0; 
SELECT * FROM v58 AS a78 ORDER BY 0; 
WITH RECURSIVE v53 ( c80 ) AS ( SELECT 18446744073709551488 ORDER BY 0 ) SELECT * FROM v12 AS a79 ORDER BY 127; 
SELECT a81.c9, a82.c27 FROM v4 AS a81 RIGHT JOIN v12 AS a82 ON a81.c9 + a81.c9 ORDER BY 127; 
SELECT * FROM v4 AS a83 NATURAL JOIN v64 AS a84 ORDER BY 18446744073709551488; 
SELECT * FROM v53 AS a85 NATURAL JOIN v0 AS a86 ORDER BY 9223372036854775807; 
