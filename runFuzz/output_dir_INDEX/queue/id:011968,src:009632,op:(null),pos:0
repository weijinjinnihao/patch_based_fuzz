CREATE TABLE v0 ( c1 NOT NULL DEFAULT 18446744073709551488, c2 NOT NULL DEFAULT 127, c3 NOT NULL ON CONFLICT REPLACE DEFAULT 18446744073709551488, c4 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744073709551488, c5 INTEGER PRIMARY KEY ON CONFLICT FAIL DEFAULT 65536 ); 
INSERT INTO v0 ( c5, c1, c4, c1, c2 ) VALUES ( 65536, 18446744073709551488, 65536, 0, 65536 ); 
INSERT INTO v0 ( c2 ) VALUES ( 'Z' ), ( 'M' ), ( 'v0' ); 
INSERT INTO v0 ( c1, c2, c2, c3, c2 ) VALUES ( 18446744073709551488, 18446744073709551615, 18446744073709551615, 65536, 18446744073709551488 ); 
INSERT OR IGNORE INTO v0 ( c2, c3, c4, c4 ) VALUES ( 18446744073709518848, 0, 4294967295, 18446744073709551615 ); 
INSERT OR REPLACE INTO v0 ( c4, c5, c3, c4, c3 ) VALUES ( 18446744073709551615, 0, NULL, 4294967295, 18446744073709551615 ); 
CREATE INDEX i6 ON v0 ( c2 ); 
INSERT OR ABORT INTO v0 ( c5, c3, c4, c4, c1, c3, c2, c2, c4, c2, c3, c3, c4, c5, c3 ) VALUES ( 18446744073709551615, 4294967295, NULL, 65536, 18446744073709551488 ); 
UPDATE OR IGNORE v0 SET c1 = NULL, c1 = c1, c4 = c1; 
CREATE INDEX i7 ON v0 ( c4 ); 
PRAGMA quick_check ( 10 ); 
UPDATE v0 SET c1 = NULL, c1 = c5, c1 = c4 FROM v0 AS a8 NATURAL JOIN v0 AS a9; 
INSERT INTO v0 WITH RECURSIVE v0 ( c11 ) AS ( SELECT max ( c3 || c5 ) ORDER BY 4294967295 ) SELECT * FROM v0 AS a10 ORDER BY 18446744073709551615; 
CREATE INDEX i12 ON v0 ( c2 ); 
INSERT OR ABORT INTO v0 ( c2, c1, c3, c4 ) VALUES ( 65536, 18446744073709551488, 0, 2147483647 ); 
CREATE INDEX i13 ON v0 ( c1 ); 
CREATE INDEX i14 ON v0 ( c4 ); 
SELECT * FROM v0 AS a15 ORDER BY ( ( ( a15.c2 + 4294967295 ) % 9223372036854775807 ) == 2147483647 ); 
SELECT avg ( c2 ) FROM ( SELECT * ORDER BY 18446744071562067968 ) AS y ORDER BY 4294967295; 
SELECT * FROM v0 AS a16, v0 AS a17 ORDER BY 18446744073709551615; 
SELECT a18.c1, count ( a18.c3 ) FROM v0 AS a18 ORDER BY 18446744073709551488; 
SELECT 18446744073709551615 FROM v0 AS a19 WHERE a19.c4 < a19.c5 NOT BETWEEN 0 AND 4294967295 ORDER BY 18446744073709551615; 
SELECT a20.c2, count ( ( NOT ( a20.c2 IS NULL ) ) AND ( NOT ( a20.c4 IS NULL ) ) ) FROM v0 AS a20 ORDER BY 0; 
SELECT ( ( c3 + 2147483647 ) % 65536 ) == 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT count ( ( NOT ( a21.c3 IS NULL ) ) AND ( NOT ( a21.c5 IS NULL ) ) ) FROM v0 AS a21 ORDER BY 0; 
SELECT * FROM v0 AS a22 NATURAL JOIN v0 AS a23 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a24, v0 AS a25 ORDER BY 18446744073709551615; 
