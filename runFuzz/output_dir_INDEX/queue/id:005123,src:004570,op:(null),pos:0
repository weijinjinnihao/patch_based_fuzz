CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c5 ); 
CREATE INDEX i8 ON v3 ( c6 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 'v1', 4294967295, 18446744073709551488 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, 100, NULL ), ( 18446744073709551615, 4294967295, 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c5 = c4; END; 
INSERT INTO v3 VALUES ( ( ( c5 + 4294967295 ) % 18446744073709551615 ) < 18446744073709551488, 'v0', 'v1' ); 
CREATE INDEX i10 ON v3 ( c5 ); 
CREATE INDEX i11 ON v3 ( c4 ); 
ALTER TABLE v3 RENAME TO v12; 
UPDATE v12 SET c1 = 'def' WHERE c6 = 0; 
SELECT * FROM v12 AS a13, v12 AS a14 ORDER BY 4294967295; 
SELECT * FROM v12 AS a15 WHERE CASE WHEN a15.c5 != 'M' THEN 18446744073709551488 ELSE 18446744073709551488 END > 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a16 ORDER BY 18446744073709551488 COLLATE binary, 4294967295 COLLATE hex; 
SELECT * FROM v12 AS a17 ORDER BY max ( a17.c4 + a17.c6 * 18446744073709551615 ) + 4294967295, min ( a17.c5, avg ( a17.c6 ) ) + 4294967295; 
SELECT a18.c1 IS ( a18.c1 || a18.c1 || a18.c1 ), a18.c2 FROM v0 AS a18 ORDER BY 4294967295; 
SELECT * FROM v0 AS a19 ORDER BY 0; 
SELECT * FROM v12 AS a20 WHERE a20.c4 != a20.c1 ORDER BY 9223372036854775807; 
SELECT * FROM v12 AS a21 WHERE a21.c4 = a21.c4 NOT NULL ORDER BY 4294967295; 
SELECT a22.c1, count ( a22.c1 ) FROM v12 AS a22 ORDER BY 9223372036854775807; 
SELECT * FROM v12 AS a23, v12 AS a24 WHERE max ( a23.c5, a23.c5 ) > 18446744073709551615 ORDER BY 18446744073709551488; 
