CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 REAL ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 12.010000, 'jim' ), ( 12.010000, 'v1' ), ( 12.010000, 'v0' ); 
CREATE INDEX i8 ON v4 ( c5 ); 
INSERT INTO v4 VALUES ( 18446744073709551615, 127, 18446744073709551615 ), ( 2147483647, 18446744073709551615, 18446744073709551615 ), ( 127, 127, 127 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
BEGIN; 
CREATE INDEX i10 ON v4 ( c5 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
DELETE FROM v4 WHERE c6 = c6; 
END; 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v12 SET c1 = '3' WHERE c2 = 12.010000; 
SELECT * FROM v4 AS a13, v12 AS a14 ORDER BY 127; 
SELECT * FROM v12 AS a15, v4 AS a16 NATURAL JOIN v12 AS a17 ORDER BY 10; 
SELECT a18.c6 FROM v4 AS a18 ORDER BY 127; 
SELECT * FROM v12 AS a19 WHERE a19.c2 > 18446744073709551615 ORDER BY 255; 
SELECT * FROM v4 AS a20 ORDER BY ( a20.c7 + 16 ) % count ( a20.c6 ); 
SELECT * ORDER BY 10; 
SELECT a21.c2, UTF16le ( a21.c2 ) AS y FROM v12 AS a21 GROUP BY a21.c2 ORDER BY 10; 
SELECT * FROM v12 AS a22 WHERE a22.c2 IS NOT NULL >= 18446744073709551615 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a23 WHERE a23.c1 NOT NULL ORDER BY 16; 
SELECT a24.c2, count ( * ), avg ( a24.c1 ), max ( a24.c1 + a24.c2 * 18446744073709551615 ) FROM v12 AS a24 ORDER BY 127; 
