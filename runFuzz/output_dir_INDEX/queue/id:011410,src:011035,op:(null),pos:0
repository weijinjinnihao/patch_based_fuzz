CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9 INTEGER, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28 INTEGER PRIMARY KEY ON CONFLICT IGNORE, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 INTEGER PRIMARY KEY, c46 ); 
CREATE TABLE v47 ( c48, c49, c50, c51, c52 INT, c53, c54, c55, c56, c57, c58, c59, c60, c61 PRIMARY KEY ON CONFLICT REPLACE, c62, c63, c64 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i65 ON v3 ( c28 ); 
CREATE TABLE v66 ( c67 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c68 UNIQUE ON CONFLICT IGNORE, c69 UNIQUE ON CONFLICT FAIL ); 
CREATE INDEX i70 ON v66 ( c69 ); 
CREATE INDEX i71 ON v66 ( c67 ); 
CREATE VIRTUAL TABLE v72 USING rtree ( c73, c74, c75 ); 
CREATE TABLE v76 ( c77 UNIQUE, c78 INTEGER UNIQUE ON CONFLICT FAIL, c79, c80, c81 TEXT UNIQUE NOT NULL ); 
INSERT INTO v76 VALUES ( 127, 'x' ), ( 255, 'ABX' ), ( ( c81 || c80 || c78 ) != 'id.2', '1-one' ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v82 USING rtree ( c83, c84, c85 ); 
CREATE INDEX i86 ON v66 ( c69 ); 
INSERT INTO v3 VALUES ( 127, 'x' ), ( 'v0', 'x' ), ( 255, 'x' ); 
WITH v87 AS ( SELECT hex ( ) y ORDER BY 127 ) INSERT INTO v87 VALUES ( NULL, 'one-a', 'v0' ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0; END; 
ALTER TABLE v47 RENAME TO v88; 
UPDATE v72 SET c74 = 'x' WHERE c75 = 127; 
SELECT a90.c54, a89.c57 FROM v88 AS a89 JOIN v88 AS a90 ON a90.c50 = a89.c58 WHERE a89.c55 NOT IN ( 2147483647, 18446744073709518848, a90.c53 > a90.c48 % 127 ) ORDER BY 18446744073709518848; 
SELECT * FROM v72 AS a91 ORDER BY 18446744073709518848; 
SELECT a92.c1 FROM v0 AS a92 ORDER BY 127; 
SELECT * FROM v66 AS a93 ORDER BY 255; 
SELECT * FROM v76 AS a94 ORDER BY 2147483647; 
WITH v66 AS ( SELECT * FROM v82 AS a96 JOIN v3 AS a97 USING ( v66.c67, v66.c69, a95.c50, v66.c67, a96.c69, a97.c27, a96.c83, a96.c83 ) WHERE a95.c62 = v66.c67 >= 127 ORDER BY 18446744073709551615 ) SELECT * FROM v88 AS a95 ORDER BY 255; 
SELECT * FROM v0 AS a98 ORDER BY 1; 
WITH v99 ( c101 ) AS ( WITH v99 ( c102 ) AS ( WITH v99 ( c103 ) AS ( WITH v104 ( c105, c106, c107, c108, c109, c110 ) AS ( SELECT 127 y ORDER BY ( ( c108 + 255 ) % 100 ) < 10 ) SELECT 18446744073709551488 ORDER BY 127 ) SELECT 255 ORDER BY 255 ) SELECT 8 ORDER BY 0 ) SELECT * FROM v99 AS a100 ORDER BY 0; 
SELECT * FROM v0 AS a111 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 18446744073709518848; 
