CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c6 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v3 ( c4 ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 'v1' ), ( 18446744073709551488, 'x' ), ( 18446744073709551488, 'v0' ); 
CREATE TABLE v10 ( c11 INTEGER PRIMARY KEY, c12 INTEGER NOT NULL CHECK( c14 || c11 || c13 ), c13 INTEGER NOT NULL CHECK( c11 > c13 * 18446744073709551488 ), c14 INTEGER NOT NULL CHECK( c11 BETWEEN c11 AND c12 ) ); 
CREATE INDEX i15 ON v0 ( c2 ); 
CREATE INDEX i16 ON v10 ( c13 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v10 BEGIN DELETE FROM v10 WHERE c11 = c12; END; 
ALTER TABLE v3 RENAME TO v17; 
UPDATE v0 SET c1 = 'v0' WHERE c1 = 18446744073709551615; 
SELECT * FROM v10 AS a18 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a19, v0 AS a20 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 0; 
SELECT * FROM v0 AS a21, v17 AS a22 NATURAL JOIN v10 AS a23 ORDER BY 18446744073709551615; 
SELECT a25.c12, a24.c6 FROM v17 AS a24 RIGHT JOIN v10 AS a25 ON count ( * ) >= 10 = a24.c4 ORDER BY 18446744073709551615; 
SELECT * FROM v17 AS a26, v10 AS a27 WHERE max ( a27.c14, a27.c11 ) > 8 ORDER BY 10; 
SELECT ( SELECT count ( * ) FROM v0 AS a29, v0 AS a30 WHERE a28.c2 = a28.c1 AND a29.c1 = a30.c1 ORDER BY 18446744071562067968 ), a28.c2, a28.c2, 'v0' FROM v0 AS a28 ORDER BY 18446744073709551488; 
WITH v31 AS ( SELECT hex ( ) y ORDER BY 18446744073709551615 ) SELECT ( ( c2 + 0 ) % 18446744073709551488 ) == 18446744073709551615 FROM v31 AS a32 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 2147483647; 
SELECT * FROM v10 AS a33 WHERE ( ( a33.c12 + 18446744071562067968 ) % 100 ) == 18446744073709551488 ORDER BY 18446744073709518848; 
