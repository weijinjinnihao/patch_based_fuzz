CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( 'v1', 18446744073709551615, 18446744073709551615 ); 
INSERT INTO v0 VALUES ( 0, 18446744073709551615, 18446744073709551615 ), ( 1234, 18446744073709551615, 18446744073709551615 ), ( 18446744073709551615, 18446744073709551615, 255 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c1; END; 
CREATE TABLE v8 ( c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30 BLOB, FOREIGN KEY ( c26 ) REFERENCES t2 ); 
CREATE INDEX i31 ON v4 ( c2 ); 
CREATE INDEX i32 ON v8 ( c23 ); 
ALTER TABLE v4 RENAME TO v33; 
CREATE INDEX i34 ON v0 ( c2 ); 
UPDATE v0 SET c1 = 'v1' WHERE c2 = 18446744073709551615; 
SELECT * FROM v33 AS a35 ORDER BY 0; 
VALUES ( 8, 18446744073709551615, 100 ), ( 18446744073709551615, 100, 18446744073709551615 ), ( 0, x'b1', 18446744073709551615 ) ORDER BY 18446744073709551615; 
SELECT a36.c1, count ( ( NOT ( a36.c1 IS NULL ) ) AND ( NOT ( a36.c1 IS NULL ) ) ) FROM v0 AS a36 ORDER BY 0; 
SELECT * FROM v33 AS a37 ORDER BY ( CASE WHEN a37.c1 != 'v0' THEN 100 ELSE 0 END ); 
SELECT a38.c1, max ( a38.c2 || a38.c1 ) FROM v0 AS a38 ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a39, v0 AS a40 ORDER BY 100; 
WITH RECURSIVE v33 AS ( SELECT 255 y ORDER BY 9223372036854775807 ) SELECT * FROM v8 AS a41 ORDER BY 8; 
SELECT * FROM v33 AS a42 ORDER BY 0; 
SELECT * FROM v8 AS a43 ORDER BY 18446744073709551615; 
SELECT * FROM v33 AS a44 ORDER BY 0; 
