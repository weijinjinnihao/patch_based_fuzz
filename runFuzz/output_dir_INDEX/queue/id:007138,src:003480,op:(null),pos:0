CREATE TABLE v0 ( c1 BLOB PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 2147483647, 'x' ), ( 2147483647, 'two-b' ), ( 2147483647, 'v1' ); 
INSERT INTO v3 VALUES ( 100, 0, 2147483647 ), ( 2147483647, 0, 2147483647 ), ( 18446744073709551488, 2147483647, 2147483647 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3; END; 
CREATE INDEX i8 ON v0 ( c2 ); 
ALTER TABLE v3 RENAME TO v9; 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE INDEX i11 ON v9 ( c2 ); 
UPDATE v9 SET c5 = 'v0' WHERE 100; 
CREATE INDEX i12 ON v0 ( c2 ); 
SELECT a13.c1, max ( a13.c2 || a13.c1 ) FROM v9 AS a13 ORDER BY 2147483647; 
SELECT count ( ( NOT ( a14.c2 IS NULL ) ) AND ( NOT ( a14.c1 IS NULL ) ) ) FROM v9 AS a14 ORDER BY 2147483647; 
SELECT * FROM v0 AS a15 ORDER BY 2147483647, 2147483647; 
SELECT * FROM v0 AS a16 ORDER BY 'x'; 
SELECT * FROM v0 AS a17 ORDER BY 2147483647; 
SELECT * FROM v9 AS a18 NATURAL JOIN v0 AS a19 ORDER BY 2147483647; 
SELECT * FROM v0 AS a20, v9 AS a21 NATURAL JOIN v9 AS a22 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a23 ORDER BY 18446744073709551488; 
SELECT * FROM v9 AS a24 GROUP BY a24.c4 HAVING automatic_index ( * ) >= 2147483647 ORDER BY 2147483647; 
SELECT * FROM v0 AS a25, v9 AS a26 NATURAL JOIN v9 AS a27 ORDER BY 100; 
