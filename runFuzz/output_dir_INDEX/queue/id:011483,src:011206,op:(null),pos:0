CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL ON CONFLICT REPLACE, c3 TEXT, PRIMARY KEY ( c1, c2, c2, c1, c2, c2, c2, c1, c3, c2 ), CONSTRAINT y UNIQUE ( c2, c3, c1, c3, c3, c3, c2, c3 ) ); 
CREATE INDEX i4 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 1024, 'v', 'x' ); 
INSERT INTO v0 VALUES ( 1024, 'a', 'v1' ); 
UPDATE v0 SET c2 = zeroblob ( 1024 ); 
CREATE TABLE v5 ( c6, c7 INTEGER DEFAULT 1024, c8 REFERENCES p1 ( c7 ) ); 
INSERT INTO v5 VALUES ( 'v0', 'x', 'x' ); 
CREATE INDEX i9 ON v5 ( c6 ); 
INSERT OR IGNORE INTO v5 ( c7, c8, c7, c8, c6, c6, c6, c6, c7, c7, c7, c7, c7, c7, c7, c8, c6, c6, c6, c6 ) VALUES ( 1024, 127, 1024, 1024 ); 
CREATE TABLE v10 ( c11, c12, c13 COLLATE NOCASE ); 
INSERT INTO v5 VALUES ( 1024, 1024, 1024 ), ( 1024, 1024, 1024 ), ( 0 = 'v0', 1024, 1024 ); 
CREATE INDEX i14 ON v5 ( c7 ); 
INSERT INTO v5 VALUES ( 'v1', 'x', 'v1' ) ON CONFLICT ( c8 ) DO UPDATE SET c8 = c7, c8 = c7; 
CREATE INDEX i15 ON v5 ( c6 ); 
INSERT INTO v5 VALUES ( c8 > 127, 'x', 'v1' ); 
INSERT INTO v10 VALUES ( - 1024, 'a', 'count.test cases for NOT INDEXED' ); 
INSERT INTO v5 SELECT * FROM v0 AS a16 ORDER BY 1024; 
UPDATE v10 SET c13 = zeroblob ( 1024 ); 
CREATE INDEX i17 ON v5 ( c8 ); 
INSERT INTO v5 SELECT * FROM v5 AS a18 ORDER BY 3.000000; 
INSERT INTO v5 SELECT c7, c8 FROM v5 AS a19 RIGHT JOIN v5 AS a20 ORDER BY 16; 
INSERT INTO v0 SELECT * FROM v0 AS a21 ORDER BY 1024; 
SELECT * FROM v0 AS a22 WHERE a22.c2 > ( a22.c1 + - 4294967295 ) ORDER BY 4294967295; 
SELECT * FROM v0 AS a23 ORDER BY 4294967295; 
SELECT count ( ( NOT ( a24.c6 IS NULL ) ) AND ( NOT ( a24.c8 IS NULL ) ) ) FROM v5 AS a24 ORDER BY 9223372036854775807; 
WITH RECURSIVE v25 ( c27 ) AS ( SELECT max ( c8 ( 4294967295, ( c27 + 1024 ), c27 != 'v1' ) || c27 ) ORDER BY 4294967295 ) SELECT * FROM v25 AS a26 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a28 ORDER BY 18446744073709551615; 
SELECT * FROM v5 AS a29 WHERE CASE WHEN a29.c6 != 'v0' THEN 9223372036854775807 ELSE 1024 END > 3.000000 ORDER BY 0; 
SELECT a30.c2, count ( * ) FROM v0 AS a30 WHERE hex ( 4294967295 ) ORDER BY 1024; 
SELECT * FROM v10 AS a31 GROUP BY a31.c12 HAVING automatic_index ( * ) >= 18446744073709551488 ORDER BY 1024; 
SELECT * FROM v5 AS a32 WHERE ( ( a32.c6 + 4294967295 ) % 18446744073709551488 ) == 0 ORDER BY 1024; 
SELECT * FROM v0 AS a33, v10 AS a34 NATURAL JOIN v10 AS a35 ORDER BY 16; 
