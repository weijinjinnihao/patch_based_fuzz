CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8, c9, c10, c11, c12 ); 
CREATE TABLE v13 ( c14, c15, c16, c17, c18 PRIMARY KEY ON CONFLICT REPLACE, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30 TEXT UNIQUE NOT NULL ); 
INSERT INTO v0 VALUES ( 127, 'x' ), ( 16, 'I' ), ( 16, 'v1' ); 
CREATE INDEX i31 ON v13 ( c23 ); 
CREATE INDEX i32 ON v3 ( c4 ); 
CREATE INDEX i33 ON v3 ( c2 ); 
CREATE INDEX i34 ON v13 ( c21 ); 
CREATE TABLE v35 ( c36, c37, c38, c39, c40, c41 INTEGER, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, PRIMARY KEY ( c38, c55, c56, c52, c54, c40, c63 ) ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v35; END; 
ALTER TABLE v3 RENAME TO v65; 
UPDATE v65 SET c2 = 'x' WHERE c2 = 16; 
CREATE INDEX i66 ON v65 ( c2 ); 
SELECT * FROM v35 AS a67 ORDER BY ( ( a67.c44 + 255 ) % 2147483647 ); 
SELECT * FROM v35 AS a68 ORDER BY 16; 
SELECT * FROM v0 AS a69 GROUP BY 255 ORDER BY 16; 
SELECT * FROM v35 AS a70, v35 AS a71 ORDER BY 16; 
SELECT * FROM v65 AS a72 ORDER BY 16, 16; 
SELECT max ( a73.c1 || a73.c1 ) FROM v0 AS a73 ORDER BY 0; 
SELECT * FROM v13 AS a74, v35 AS a75 NATURAL JOIN v35 AS a76 ORDER BY 18446744073709551488; 
SELECT * FROM v35 AS a77 WHERE CASE WHEN a77.c59 != 'wvu' THEN 18446744073709551615 ELSE 16 END > 255 ORDER BY 127; 
WITH RECURSIVE v65 ( c79 ) AS ( SELECT 16 ORDER BY 16 ) SELECT * FROM v13 AS a78 ORDER BY 18446744073709551615; 
SELECT * FROM v65 AS a80 GROUP BY a80.c12, a80.c9, count ( a80.c10 ) ORDER BY 255; 
