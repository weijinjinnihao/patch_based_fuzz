CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 100, 'two' ), ( 18446744073709551488, 'v1' ), ( 100, 'v1' ); 
CREATE INDEX i5 ON v0 ( c3 ); 
INSERT INTO v0 ( c2, c3 ) VALUES ( 'xxx', 'x1i' ), ( 'jkl', '5.4e-08' ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c2 = c2; END; 
CREATE INDEX i6 ON v0 ( c2 ); 
ALTER TABLE v0 ADD COLUMN c7 INTEGER COLLATE NOCASE DEFAULT 100; 
ALTER TABLE v0 RENAME TO v8; 
UPDATE v8 SET c7 = '1000000 10' WHERE c7 = 127; 
CREATE INDEX i9 ON v8 ( c1 ); 
SELECT a10.c2, a10.c2, a10.c3 FROM v8 AS a10 WHERE a10.c3 >= 'v1' ORDER BY 18446744073709551488; 
WITH v8 AS ( SELECT ( SELECT min ( a12.c1 ) OVER ( ORDER BY 100 ) ORDER BY 10 ) FROM v8 AS a12 GROUP BY a12.c2 ORDER BY 18446744073709551488 ) SELECT * FROM v8 AS a11 ORDER BY 100; 
SELECT * FROM v8 AS a13 ORDER BY 1; 
SELECT * FROM v8 AS a14 NATURAL JOIN v8 AS a15 ORDER BY 100; 
SELECT * FROM v8 AS a16, v8 AS a17 NATURAL JOIN v8 AS a18 ORDER BY 18446744073709551615; 
WITH v19 AS ( SELECT 18446744073709551488 y ORDER BY 16 ) SELECT * FROM v19 AS a20 ORDER BY 18446744071562067968; 
SELECT * FROM v8 AS a21, v8 AS a22 NATURAL JOIN v8 AS a23 ORDER BY 100; 
SELECT * FROM v8 AS a24 WHERE a24.c3 > a24.c1 % 10 ORDER BY 18446744073709551488; 
WITH v25 AS ( SELECT hex ( ) y ORDER BY 18446744071562067968 ) SELECT * FROM v25 AS a26 ORDER BY 100; 
SELECT * FROM v8 AS a27, v8 AS a28 ORDER BY 100; 
