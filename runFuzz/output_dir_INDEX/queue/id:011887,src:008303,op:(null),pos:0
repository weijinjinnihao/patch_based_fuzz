CREATE TABLE v0 ( c1, c2 AS( c2 + c1 - c1 ) NOT NULL ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c1, c1 ) = ( ( SELECT CASE WHEN c2 % 18446744073709551615 != 18446744073709551615 THEN c1 END, c1, c2 FROM v0 AS a3 WHERE c2 <= 18446744073709551615 ORDER BY max ( c1 + c2 * 18446744073709551615 ) + 18446744073709551615, min ( c1, avg ( c1 ) ) + 18446744073709551615 ), 18446744073709551615 ); END; 
CREATE TRIGGER r1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c1 = '3' WHERE c2 = - 18446744073709551615; END; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c2 ); 
ALTER TABLE v0 DROP COLUMN c1; 
CREATE INDEX i6 ON v0 ( c2 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
WITH RECURSIVE v9 ( c11 ) AS ( SELECT 18446744073709551615 ORDER BY 0 ) SELECT * FROM v9 AS a10 ORDER BY 18446744073709551615; 
SELECT max ( a12.c2 || a12.c1 ) FROM v0 AS a12 ORDER BY 0; 
SELECT * FROM v0 AS a13 ORDER BY 18446744073709551488; 
WITH v14 ( c16 ) AS ( WITH v17 AS ( SELECT ( SELECT min ( c16 ) OVER ( ORDER BY 0 ) ORDER BY c16 ) FROM v17 AS a18 GROUP BY c16 ORDER BY 18446744073709551615 ) SELECT 18446744073709551615 ORDER BY 2147483647 ) SELECT * FROM v14 AS a15 ORDER BY 0; 
SELECT * FROM v0 AS a19 WHERE a19.c1 = + a19.c2 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a20 GROUP BY a20.c2, a20.c2 < y ( a20.c2 ) ORDER BY 2147483647; 
SELECT * FROM v0 AS a21, v0 AS a22 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a23 NATURAL JOIN v0 AS a24 ORDER BY 0; 
SELECT * FROM v0 AS a25 GROUP BY a25.c1 HAVING NULL ORDER BY 0; 
SELECT * FROM v0 AS a26 GROUP BY a26.c2 ORDER BY 0; 
