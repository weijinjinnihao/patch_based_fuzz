CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c4 ); 
INSERT INTO v3 VALUES ( 4294967295, 'abc' ), ( ( ( hex ( 4294967295 ) ) % 4294967295 ) != 4294967295, 'v0' ), ( 4294967295, 'x' ); 
CREATE INDEX i8 ON v3 ( c5 ); 
INSERT INTO v0 VALUES ( 4294967295, 4294967295, 4294967295 ), ( 4294967295, 4294967295, 0 ), ( 4294967295, 4294967295, 4294967295 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c1 = c6; END; 
ALTER TABLE v3 RENAME TO v10; 
CREATE INDEX i11 ON v10 ( c4 ); 
UPDATE v10 SET c2 = 'x' WHERE c5 = 4294967295; 
CREATE INDEX i12 ON v10 ( c5 ); 
SELECT a13.c2 FROM v10 AS a13 ORDER BY 4294967295; 
SELECT * FROM v10 AS a14 ORDER BY 1; 
SELECT * FROM v10 AS a15 GROUP BY a15.c4 ORDER BY 100; 
SELECT CASE WHEN a16.c6 % 4294967295 != count ( * ) >= 4294967295 THEN a16.c4 END, a16.c6, a16.c2 FROM v10 AS a16 WHERE a16.c4 <= 0 ORDER BY 4294967295; 
WITH v10 AS ( SELECT * FROM v10 AS a18 ORDER BY a18.c2, a18.c5 ) SELECT * FROM v10 AS a17 ORDER BY 4294967295; 
SELECT * FROM v10 AS a19 GROUP BY a19.c4, a19.c4 < a19.c6 ORDER BY 4294967295; 
SELECT * FROM v10 AS a20 ORDER BY 0; 
SELECT * FROM v10 AS a21, v10 AS a22 ORDER BY 4294967295; 
SELECT * ORDER BY 4294967295; 
SELECT count ( ( NOT ( a23.c1 IS NULL ) ) AND ( NOT ( a23.c1 IS NULL ) ) ) FROM v0 AS a23 WHERE a23.c2 > a23.c2 ORDER BY 4294967295; 
