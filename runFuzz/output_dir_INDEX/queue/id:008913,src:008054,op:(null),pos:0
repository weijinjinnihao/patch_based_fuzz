CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10 REFERENCES t1 DEFAULT NULL, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INTEGER PRIMARY KEY, c24 ); 
CREATE TABLE v25 ( c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39 PRIMARY KEY ON CONFLICT REPLACE, c40, c41, c42 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v43 USING rtree ( c44, c45, c46, c47, c48, c49, c50, c51, c52 ); 
CREATE INDEX i53 ON v43 ( c52 ); 
CREATE INDEX i54 ON v43 ( c13 ); 
CREATE INDEX i55 ON v43 ( c46 ); 
CREATE TABLE v56 ( c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i74 ON v56 ( c61 ); 
UPDATE v25 SET c39 = ( c39 + 0 ) % count ( c29 ) WHERE c28 = 0; 
ATTACH ( hex ( 8 ) ) AS sqlite_master; 
CREATE TABLE v75 ( c76 DEFAULT x'ABCD' DEFAULT 8, c77 NOT NULL DEFAULT 8, c78 NOT NULL ON CONFLICT REPLACE DEFAULT 0, c79 NOT NULL ON CONFLICT IGNORE DEFAULT 8, c80 NOT NULL ON CONFLICT ABORT DEFAULT 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v43; END; 
ALTER TABLE v43 RENAME TO v81; 
CREATE INDEX i82 ON v75 ( c78 ); 
UPDATE v3 SET c15 = 'v1' WHERE c23 = 0; 
CREATE TABLE v83 ( c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106 TEXT, c107, c108 INT, c109, c110, c111, c112, c113, c114, c115 INT UNIQUE ON CONFLICT IGNORE, c116, c117, c118, c119 INTEGER PRIMARY KEY, c120 ); 
CREATE TABLE v121 ( c122 INTEGER CHECK( typeof ( c123 > c122 ) == c124 ), c123 NUMERIC CHECK( typeof ( coalesce ( c122 NOT NULL, 18446744073709551488 ) ) == 'v0' ), c124 TEXT CHECK( typeof ( coalesce ( c124, 'x' ) ) == 'v0' ) ); 
SELECT * FROM v3 AS a125 ORDER BY 18446744073709551488; 
SELECT * FROM v81 AS a126 ORDER BY ( CASE WHEN a126.c47 != 'x' THEN 8 ELSE 18446744073709551488 END ); 
SELECT a127.c1, a127.c2 FROM v0 AS a127 RIGHT JOIN v0 AS a128 ON a128.c2 = a127.c1 > 123.000000 ORDER BY 18446744071562067968; 
SELECT * FROM v81 AS a129 NATURAL JOIN v25 AS a130 ORDER BY 123.000000; 
SELECT * FROM v0 AS a131, v81 AS a132 NATURAL JOIN v56 AS a133 ORDER BY 2147483647; 
SELECT quote ( a134.c122 ), quote ( a134.c123 ), 'v0' FROM v121 AS a134 GROUP BY a134.c123, abs ( a134.c123 ) HAVING count ( * ) >= 123.000000 ORDER BY 18446744073709551488; 
SELECT * FROM v56 AS a135 WHERE a135.c59 > a135.c64 % 18446744073709551488 ORDER BY 10; 
SELECT * FROM v25 AS a136 ORDER BY ( ( a136.c35 + 2147483647 ) % 2147483647 ) < 2147483647; 
SELECT * FROM v25 AS a137 NATURAL JOIN v121 AS a138 ORDER BY 18446744071562067968; 
SELECT * FROM v25 AS a139 ORDER BY ( hex ( 0 ) ) % 8; 
