CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c6 ); 
CREATE INDEX i8 ON v3 ( c4 ); 
INSERT INTO v3 VALUES ( 8, 'v0' ), ( 8, 'v0' ), ( 16, 'v0' ); 
INSERT INTO v3 VALUES ( 8, 8, 8 ), ( 8, 8, 8 ), ( 255, 0, 8 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
CREATE INDEX i9 ON v0 ( c1 ); 
ALTER TABLE v3 RENAME TO v10; 
CREATE INDEX i11 ON v10 ( c6 ); 
CREATE INDEX i12 ON v0 ( c2 ) WHERE c1 > c2 % 8; 
UPDATE v10 SET c4 = 'v0' WHERE c4 = 18446744073709551615; 
SELECT * FROM v0 AS a13 ORDER BY a13.c2 COLLATE NOCASE; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT * FROM v10 AS a14 ORDER BY 8; 
SELECT * FROM v10 AS a15, v0 AS a16 ORDER BY 8; 
SELECT count ( ( NOT ( a17.c4 IS NULL ) ) AND ( NOT ( a17.c6 IS NULL ) ) ) FROM v10 AS a17 ORDER BY 127; 
SELECT * FROM v10 AS a18 WHERE ( CASE WHEN a18.c5 != 'x' THEN 18446744073709551488 ELSE 10 END ) ORDER BY 0; 
SELECT * FROM v10 AS a19 WHERE a19.c5 > 127 ORDER BY 18446744073709551488; 
WITH RECURSIVE v20 AS ( SELECT c6 FROM v20 AS a22 WHERE c4 LIKE 'v1' ORDER BY 18446744073709551488 ) SELECT * FROM v20 AS a21 WHERE c2 > 8 ORDER BY 8; 
SELECT * FROM v10 AS a23 ORDER BY 255; 
SELECT * FROM v10 AS a24 WHERE a24.c5 = 16 ORDER BY 18446744073709551488; 
SELECT a27.c6 FROM v10 AS a25 LEFT JOIN v0 AS a26 ON ( a27.c6 = a26.c1 AND a25.c6 = 'v1' ) LEFT JOIN v10 AS a27 ON ( a26.c1 = a27.c5 ) WHERE a26.c1 = 'x' ORDER BY 18446744073709551488; 
