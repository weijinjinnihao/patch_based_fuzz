CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( 'abc1', 0, 0 ); 
INSERT INTO v0 VALUES ( 0, 0, 0 ), ( 255, 0, 255 ), ( 0, 0, 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v4 WHERE c6 = c1; END; 
CREATE INDEX i8 ON v0 ( c1 ); 
CREATE TABLE v9 ( c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, FOREIGN KEY ( c10, c11, c17, c41, c27, c21, c41, c22, c12, c27, c25, c23 ) REFERENCES t4 ); 
CREATE INDEX i43 ON v9 ( c38 ); 
CREATE INDEX i44 ON v9 ( c12 ); 
ALTER TABLE v4 RENAME TO v45; 
CREATE INDEX i46 ON v45 ( c7 ); 
UPDATE v45 SET c6 = 'x' WHERE c6 = 255; 
SELECT * FROM v9 AS a47 ORDER BY 0; 
VALUES ( 100, 0, 0 ), ( 0, 18446744073709551488, 0 ), ( 9223372036854775807, x'b1', 9223372036854775807 ) ORDER BY 0; 
SELECT a48.c7, count ( ( NOT ( a48.c5 IS NULL ) ) AND ( NOT ( a48.c6 IS NULL ) ) ) FROM v45 AS a48 ORDER BY 100; 
SELECT * FROM v9 AS a49 ORDER BY ( CASE WHEN a49.c37 != 'amx' THEN 0 ELSE 0 END ); 
SELECT a50.c7, max ( a50.c6 || a50.c5 ) FROM v45 AS a50 ORDER BY 9223372036854775807; 
SELECT * FROM v45 AS a51, v45 AS a52 ORDER BY 4294967295; 
WITH RECURSIVE v45 AS ( SELECT 9223372036854775807 y ORDER BY 100 ) SELECT * FROM v45 AS a53 ORDER BY 0; 
SELECT * FROM v45 AS a54 ORDER BY 0; 
SELECT * FROM v45 AS a55 ORDER BY 0; 
SELECT * FROM v45 AS a56 ORDER BY 18446744073709551615; 
