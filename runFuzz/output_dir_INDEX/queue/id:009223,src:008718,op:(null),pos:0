CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11 ); 
INSERT INTO v0 ( c10 ) VALUES ( 'v0' ), ( 0 ), ( 0 ), ( NULL ); 
DELETE FROM v0; 
CREATE INDEX i12 ON v0 ( c5 ); 
CREATE INDEX i13 ON v0 ( c7 ); 
INSERT INTO v0 ( c1, c6, c7, c3, c11 ) VALUES ( 18446744073709551615, 0, 0, 18446744073709551615, 0 ); 
CREATE INDEX i14 ON v0 ( c3 ); 
CREATE TABLE v15 ( c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, FOREIGN KEY ( c27, c16, c17, c22, c26, c28, c26, c24, c22, c27, c22, c21 ) REFERENCES t1 ( c21, c25, c20, c20 ) ); 
CREATE INDEX i29 ON v15 ( c21 ); 
INSERT OR IGNORE INTO v15 ( c16, c20, c23, c28 ) VALUES ( 0, 0, 0, 0 ); 
INSERT OR REPLACE INTO v15 ( c17, c22, c28, c18, c22 ) VALUES ( 18446744073709551488, 100, NULL, 18446744073709551615, 18446744073709551488 ); 
INSERT OR ABORT INTO v0 ( c11, c7, c10, c2, c8 ) VALUES ( 0, 0, NULL, 18446744073709551615, 0 ); 
CREATE TABLE v30 ( c31, c32, c33 TEXT CHECK( c31 > 0 ), c34 ); 
CREATE INDEX i35 ON v30 ( c34 ); 
UPDATE v30 SET c31 = NULL, c33 = c33, c34 = c32; 
INSERT OR ABORT INTO v0 ( c4, c4, c3, c11 ) VALUES ( 16, 0, 255, 16 ); 
SELECT * FROM v0 AS a36 ORDER BY 'v0'; 
SELECT * FROM v0 AS a37 ORDER BY 0, 18446744073709551488; 
WITH v30 ( c39 ) AS ( WITH v40 AS ( WITH v41 AS ( SELECT 100 y ORDER BY 18446744073709551615 ) SELECT avg ( v30.c34 ) FROM ( SELECT * ORDER BY x'616263' ) AS y ORDER BY 18446744073709551615 ) SELECT 10 ORDER BY 8 ) SELECT * FROM v0 AS a38 ORDER BY 8; 
SELECT * FROM v30 AS a42 GROUP BY a42.c31 HAVING a42.c33 > a42.c32 % 18446744073709551615 >= 0 ORDER BY 18446744073709551488; 
SELECT * FROM ( SELECT 0 ORDER BY 8 ) AS y, v15 AS a43 ON likely ( 0 OR 18446744073709551615 ) OR ( a43.c24 + 127 ) > 0 ORDER BY 0; 
SELECT * FROM v0 AS a44 NATURAL JOIN v0 AS a45 ORDER BY 0; 
WITH v30 AS ( SELECT ( SELECT min ( a47.c7 ) OVER ( ORDER BY 9223372036854775807 ) ORDER BY 2147483647 ) FROM v0 AS a46 GROUP BY a46.c8 ORDER BY 8 ) SELECT v30.c32 FROM ( SELECT a46.c11 FROM v0 AS a47 ORDER BY 18446744071562067968 ) AS y ORDER BY 127; 
SELECT count ( ( NOT ( a48.c18 IS NULL ) ) AND ( NOT ( a48.c18 IS NULL ) ) ) FROM v15 AS a48 ORDER BY 10; 
SELECT * FROM v15 AS a49 GROUP BY a49.c20 HAVING a49.c20 > a49.c17 % 18446744073709551615 >= 18446744073709551488 ORDER BY 18446744073709551615; 
WITH v15 AS ( WITH v15 AS ( SELECT 100 y ORDER BY 16 ) SELECT avg ( v15.c23 ) FROM ( SELECT * ORDER BY x'616263' ) AS y ORDER BY 0 ) SELECT * FROM v30 AS a50 ORDER BY 2147483647; 
