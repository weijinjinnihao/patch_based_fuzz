CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ) WITHOUT ROWID; 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v0 VALUES ( 100, 'hill' ), ( 16, 'x' ), ( 16, 'v1' ); 
CREATE INDEX i9 ON v5 ( c6 ); 
INSERT INTO v0 VALUES ( 100, 16, 100 ), ( 100, 16, 16 ), ( 16, 18446744073709518848, 100 ); 
CREATE INDEX i10 ON v5 ( c7 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c8 = c6; END; 
CREATE INDEX i11 ON v5 ( c2 ); 
ALTER TABLE v5 RENAME TO v12; 
UPDATE v0 SET c1 = 'v1' WHERE c1 = 100; 
SELECT * FROM v12 AS a13 ORDER BY max ( a13.c2 + a13.c2 * 8 ) + 100, min ( a13.c6, avg ( a13.c1 ) ) + 100; 
SELECT * FROM v12 AS a14, v0 AS a15 ORDER BY 255; 
SELECT * FROM v12 AS a16 GROUP BY 18446744073709551488 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a17 ORDER BY 100; 
SELECT a19.c7, a19.c6 FROM v12 AS a18 LEFT JOIN v12 AS a19 ON a18.c8 = a19.c6 y ORDER BY 100; 
SELECT * FROM v12 AS a20 GROUP BY y ( a20.c7 ) ORDER BY 100; 
SELECT * ORDER BY 100; 
SELECT a21.c1, max ( a21.c7 || a21.c7 ) FROM v12 AS a21 ORDER BY 18446744073709551488; 
WITH v22 ( c24 ) AS ( SELECT 16 ORDER BY 18446744073709551488 ) SELECT * FROM v22 AS a23 ORDER BY 18446744073709551488; 
SELECT a25.c1 AS y, a25.c2 || a25.c1 AS y FROM v0 AS a25 WHERE + a25.c1 = 'x' ORDER BY 16; 
