CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
CREATE TABLE v6 ( c7 INT NOT NULL, c8 INTEGER NOT NULL, c9 TEXT NOT NULL, c10 REAL NOT NULL, c11 BLOB NOT NULL ) STRICT; 
CREATE TABLE v12 ( c13 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c14 UNIQUE ON CONFLICT IGNORE, c15 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE INDEX i16 ON v6 ( c8 ); 
CREATE INDEX i17 ON v0 ( c4 ); 
CREATE TABLE v18 ( c19, c20, c21, c22, c23 ); 
INSERT INTO v12 ( c13, c14, c14, c13, c13 ) VALUES ( 9223372036854775807, 9223372036854775807, 'v1', 9223372036854775807, x'b1' ), ( 9223372036854775807, 9223372036854775807, 'x', 9223372036854775807, x'b2b2b2' ); 
PRAGMA integrity_check; 
CREATE INDEX i24 ON v6 ( c8 ); 
PRAGMA quick_check ( 't1' ); 
UPDATE v6 SET c8 = ( SELECT c8 FROM v18 AS a25 WHERE c19 = 'x' GROUP BY c20 HAVING count ( * ) >= 16 ORDER BY 9223372036854775807 ); 
CREATE INDEX i26 ON v18 ( c20 ); 
CREATE INDEX i27 ON v12 ( c13 ); 
CREATE TABLE v28 ( c29, c30 INTEGER UNIQUE ON CONFLICT FAIL, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40 INT, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55 PRIMARY KEY, CHECK( ( ( c54 + 8 ) % 18446744071562067968 ) != 8 ) ) WITHOUT ROWID; 
SELECT ( SELECT min ( a56.c4 ) OVER ( ORDER BY 9223372036854775807 ) ORDER BY 18446744073709551615 ) FROM v0 AS a56 GROUP BY a56.c2 ORDER BY a56.c1 COLLATE binary; 
SELECT a57.c15 FROM v12 AS a57 ORDER BY 9223372036854775807; 
SELECT a58.c14, count ( a58.c14 ) FROM v12 AS a58 ORDER BY 18446744073709551488; 
SELECT * FROM v18 AS a59, v0 AS a60 ORDER BY 9223372036854775807; 
SELECT a61.c4, max ( a62.c20 || a61.c2 ), count ( a61.c4 ) FROM v0 AS a61 LEFT JOIN v18 AS a62 ON a62.c21 = a61.c3 ORDER BY 0; 
WITH v63 AS ( SELECT c2 FROM v63 AS a65 WHERE c8 LIKE 'v0' ORDER BY 2147483647 ) SELECT * FROM v63 AS a64 WHERE 18446744073709551615 ORDER BY 18446744073709551488; 
SELECT a66.c55, count ( ( NOT ( a66.c42 IS NULL ) ) AND ( NOT ( a66.c50 IS NULL ) ) ) FROM v28 AS a66 ORDER BY 9223372036854775807; 
SELECT * FROM v28 AS a67 ORDER BY ( ( a67.c35 + 9223372036854775807 ) % 9223372036854775807 ) < 0; 
SELECT * FROM v12 AS a68, v28 AS a69 NATURAL JOIN v0 AS a70 ORDER BY 255; 
SELECT max ( a71.c7 || a71.c10 ) FROM v6 AS a71 ORDER BY 0; 
