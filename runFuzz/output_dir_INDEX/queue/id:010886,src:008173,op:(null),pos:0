CREATE VIEW v0 ( c1 ) AS WITH v0 AS ( SELECT TRUE y ORDER BY TRUE ) SELECT ( SELECT min ( c1 ) OVER ( ORDER BY 18446744071562067968 ) FROM v0 AS a3, v0 AS a4 NATURAL JOIN v0 AS a5 ORDER BY TRUE ) FROM v0 AS a2 GROUP BY c1 ORDER BY TRUE; 
ALTER TABLE v0 ADD COLUMN c6 REAL COLLATE NOCASE; 
INSERT INTO v0 VALUES ( TRUE, 'x' ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 'ten' ); 
INSERT INTO v0 VALUES ( 18446744073709551488 ); 
CREATE INDEX i7 ON v0 ( c6 ); 
CREATE INDEX i8 ON v0 ( c6 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( TRUE ); 
CREATE INDEX i10 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( TRUE ); 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v0 ADD COLUMN c12 INTEGER DEFAULT TRUE; 
SELECT * FROM v0 AS a13 NATURAL JOIN v0 AS a14 ORDER BY TRUE; 
SELECT * FROM v0 AS a15 NATURAL JOIN v0 AS a16 ORDER BY TRUE; 
SELECT * FROM v0 AS a17, v0 AS a18 ORDER BY TRUE; 
SELECT * FROM v0 AS a19 ORDER BY TRUE; 
SELECT * FROM v0 AS a20 ORDER BY ( ( hex ( TRUE ) ) % TRUE ); 
SELECT * FROM v0 AS a21 NATURAL JOIN v0 AS a22 ORDER BY TRUE; 
SELECT * ORDER BY TRUE; 
WITH v0 ( c24 ) AS ( SELECT 'v1' ORDER BY TRUE ) SELECT * FROM v0 AS a23 ORDER BY 18446744071562067968; 
WITH RECURSIVE v25 AS ( SELECT c6 FROM v25 AS a27 WHERE c1 LIKE 'v1' ORDER BY TRUE ) SELECT c1 + ( SELECT max ( c6 ) FROM v25 AS a30 ORDER BY TRUE ), c1 + ( SELECT CASE WHEN c12 % 18446744073709551488 != 18446744071562067968 THEN c1 END, c6, c1 FROM v25 AS a29 WHERE c1 <= 18446744073709551488 ORDER BY 18446744073709551488 ), c6 + ( SELECT max ( c1 ) FROM v25 AS a28 ORDER BY 0 ) FROM v25 AS a26 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a31 WHERE ( ( SELECT * FROM v0 AS a32 WHERE a31.c1 = a31.c1 || a32.c12 ORDER BY 18446744073709551615 ) % TRUE ) > 18446744073709551615 ORDER BY TRUE; 
