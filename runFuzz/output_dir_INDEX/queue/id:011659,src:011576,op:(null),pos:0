CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE TABLE v7 ( c8, c9, c10 INTEGER, c11 DEFAULT 16 DEFAULT 16, c12, c13, c14, c15, c16, c17, c18, c19, c20 NOT NULL DEFAULT 18446744073709551615, c21 NOT NULL ON CONFLICT REPLACE DEFAULT 16, c22 NOT NULL ON CONFLICT IGNORE DEFAULT 16, c23 ); 
INSERT INTO v3 VALUES ( 16, 'x' ), ( 16, 16, hex ( 16 ) ), ( ( SELECT * FROM v7 AS a24 WHERE c18 = c15 || c4 ORDER BY 16 ) % 16 ); 
ALTER TABLE v3 DROP COLUMN c5; 
CREATE INDEX i25 ON v3 ( c5 ); 
BEGIN; 
CREATE INDEX i26 ON v0 ( c2 ); 
CREATE INDEX i27 ON v3 ( c5 ); 
INSERT INTO v3 VALUES ( 16, 16, 9223372036854775807 ), ( 16, 18446744073709551615, 16 ), ( 22, 18446744073709551615, 16 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c11 = c2; END; 
ALTER TABLE v0 ADD COLUMN c28 TEXT CHECK( c37 ( ( ( ( c1 + 22 ) % 16 ) == 18446744073709551615 ) % 18446744073709551615 ) != 18446744073709551615 ) DEFAULT 16; 
UPDATE v0 SET c1 = 'v1' WHERE c1 = 127; 
CREATE INDEX i29 ON v0 ( c28 ); 
CREATE INDEX i30 ON v0 ( c1 ); 
SELECT * FROM v3 AS a31 ORDER BY max ( a31.c6 + a31.c6 * 16 ) + 16; 
SELECT * FROM v0 AS a32 ORDER BY max ( + 18446744073709551488, 'v1', 'v0' ) + 18446744073709551615, min ( a32.c2, avg ( a32.c2 ) ) + NULL >= 16; 
SELECT * FROM v7 AS a33 ORDER BY 18446744073709551615; 
WITH v0 AS ( SELECT 16 y ORDER BY 0 ) SELECT * FROM v3 AS a34 ORDER BY 18446744073709551615; 
SELECT ( ( 16 IS NOT 16 ) OR NOT ( 16 IS 18446744073709551615 OR ( a35.c16 = 18446744073709551615 ) ) ) IS 111 FROM v7 AS a35 ORDER BY 16; 
SELECT * FROM v7 AS a36, v3 AS a37 ORDER BY 127; 
SELECT * FROM v3 AS a38 NATURAL JOIN v0 AS a39 ORDER BY 16; 
SELECT * FROM v0 AS a40, v3 AS a41 ORDER BY 9223372036854775807; 
SELECT * FROM v7 AS a42 ORDER BY 16; 
SELECT * FROM v3 AS a43 ORDER BY 18446744073709518848; 
