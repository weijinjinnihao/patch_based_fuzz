CREATE TABLE v0 ( c1 UNIQUE, c2, c3 UNIQUE ON CONFLICT IGNORE, c4 UNIQUE ON CONFLICT FAIL, c5 UNIQUE ON CONFLICT REPLACE DEFAULT 255, c6, c7, c8, c9, c10, c11 NOT NULL CHECK( c8 BETWEEN c11 AND c10 ), c12, c13, c14, c15 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 255, c16, PRIMARY KEY ( c7, c12 ), UNIQUE ( c4 ) ) WITHOUT ROWID; 
INSERT OR REPLACE INTO v0 ( c7, c6, c12, c1, c8 ) VALUES ( 255, 255, 255, 255, 255 ) ON CONFLICT DO UPDATE SET c8 = c6, c9 = c14, c11 = c6; 
DELETE FROM v0; 
CREATE TABLE v17 ( c18 INTEGER PRIMARY KEY, c19 TEXT ), STRICT; 
INSERT INTO v0 ( c10, c4, c5, c16, c12 ) VALUES ( 255, 0, 255, 255, 18446744073709551615 ) ON CONFLICT DO UPDATE SET c14 = c8, c13 = c6, c14 = c3; 
INSERT OR IGNORE INTO v17 ( c18, c18, c18, c18 ) VALUES ( 0, 18446744073709551615, 0, 0 ) ON CONFLICT DO UPDATE SET c19 = c18, c18 = c19, c18 = c19; 
INSERT OR REPLACE INTO v0 ( c10, c12, c2, c12, c10 ) VALUES ( 255, 0, NULL, 900, 18446744073709551488 ); 
DELETE FROM v0 WHERE c9 = c4; 
INSERT OR ABORT INTO v0 ( c4, c15, c9, c15, c6 ) VALUES ( 255, 0, NULL, 18446744073709551488, 255 ); 
UPDATE OR IGNORE v17 SET c19 = NULL, c18 = c19, c18 = c19; 
CREATE INDEX i20 ON v0 ( c8 ); 
CREATE INDEX i21 ON v17 ( c18 ); 
UPDATE v0 SET c13 = NULL, c1 = c12, c2 = c16; 
CREATE VIEW v22 AS SELECT * FROM v0 AS a23 WHERE ( c5 = 0 OR c8 = 0 ) AND c7 IS ( SELECT c9 FROM ( SELECT c7 FROM v17 AS a26 ORDER BY 18446744073709551488 ) AS y, v0 AS a24 NATURAL JOIN v17 AS a25 WHERE c19 = 255 ORDER BY 18446744073709518848 ) ORDER BY 18446744073709551488; 
CREATE INDEX i27 ON v17 ( c18 ); 
INSERT OR ABORT INTO v22 ( c15, c21, c8, c8 ) VALUES ( 10, 255, 4294967295, 0 ); 
CREATE INDEX i28 ON v22 ( c15 ); 
CREATE INDEX i29 ON v22 ( c21 ); 
SELECT * FROM v17 AS a30, v17 AS a31 NATURAL JOIN v22 AS a32 ORDER BY 255; 
SELECT * ORDER BY 255; 
SELECT * FROM v22 AS a33 ORDER BY 1; 
SELECT max ( a34.c8 || a34.c3 ) FROM v22 AS a34 ORDER BY 10; 
WITH v17 AS ( WITH v17 AS ( SELECT 18446744073709551488 y ORDER BY 0 ) SELECT avg ( v17.c18 ) FROM ( SELECT * ORDER BY 127 ) AS y ORDER BY 18446744073709551488 ) SELECT v17.c18 COLLATE binary ORDER BY 255; 
SELECT * FROM v22 AS a35, v22 AS a36 NATURAL JOIN v22 AS a37 ORDER BY 18446744073709551488; 
SELECT * FROM v22 AS a38 GROUP BY a38.c21 HAVING NULL ORDER BY 255; 
SELECT a39.c21 FROM v22 AS a39 ORDER BY 18446744073709551488; 
SELECT a40.c18, count ( a40.c18 ) FROM v17 AS a40 ORDER BY 255; 
SELECT * FROM v0 AS a41 GROUP BY a41.c15, abs ( a41.c16 ) HAVING CASE WHEN a41.c15 != 'v0' THEN 18446744073709551488 ELSE 4294967295 END > 10 >= 255 ORDER BY 18446744073709551488; 
