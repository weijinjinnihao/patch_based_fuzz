PRAGMA page_size = 65536; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 BLOB ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v6 USING rtree; 
UPDATE v0 SET c2 = zeroblob ( 18446744073709551615 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
UPDATE v0 SET c1 = zeroblob ( 18446744073709551615 ) WHERE c1 = 100; 
PRAGMA integrity_check; 
CREATE INDEX i8 ON v6 ( c2 ); 
SELECT * ORDER BY 16; 
SELECT * ORDER BY 0; 
SELECT * ORDER BY 0; 
SELECT * FROM v6 AS a9, v0 AS a10 ORDER BY 0; 
SELECT * FROM v0 AS a11 WHERE ( a11.c1 = 16 OR a11.c1 = 18446744073709551615 ) AND a11.c2 IN ( SELECT a11.c1 FROM ( SELECT a11.c1 FROM v0 AS a12 ORDER BY 16 ) AS y WHERE a11.c2 = 18446744073709551615 ORDER BY 16 ) ORDER BY 100; 
SELECT * FROM v0 AS a13 WHERE a13.c1 = + a13.c2 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a14 ORDER BY 16; 
SELECT * FROM v0 AS a15 ORDER BY 0; 
SELECT * FROM v6 AS a16 ORDER BY + c17; 
WITH v0 AS ( SELECT 16 y ORDER BY 255 ) SELECT * FROM v0 AS a18 ORDER BY 16; 
