CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v3 ( c2 ); 
CREATE INDEX i8 ON v3 ( c4 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 'x', 18446744073709551488, 18446744073709551488 ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 8, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c4 = c1; END; 
INSERT INTO v3 VALUES ( ( ( c5 + 8 ) % 9223372036854775807 ) < 8, 'v1', '-2' ); 
CREATE INDEX i10 ON v0 ( c1 ); 
CREATE INDEX i11 ON v3 ( c5 ); 
ALTER TABLE v3 RENAME TO v12; 
SELECT count ( ( SELECT a13.c2 WHERE a13.c1 = NULL AND a13.c1 >= a13.c2 ORDER BY 18446744073709551615 ) ) FROM v0 AS a13 WHERE a13.c1 = 18446744073709551488 ORDER BY 1; 
SELECT * FROM v12 AS a14, v12 AS a15 ORDER BY 9223372036854775807; 
SELECT * FROM v12 AS a16 WHERE CASE WHEN a16.c6 != '' THEN 18446744073709551488 ELSE 8 END > 18446744073709551488 ORDER BY 18446744073709518848; 
SELECT * FROM v0 AS a17 ORDER BY 18446744073709551488 COLLATE binary, 18446744073709551488 COLLATE hex; 
SELECT * FROM v12 AS a18 ORDER BY max ( a18.c1 + a18.c6 * 18446744073709551488 ) + 18446744073709551488, min ( a18.c2, avg ( a18.c1 ) ) + 16; 
SELECT a19.c1 IS ( a19.c2 || a19.c1 || a19.c1 ), a19.c2 FROM v0 AS a19 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a20 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a21 WHERE a21.c1 != a21.c5 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a22 WHERE a22.c1 = a22.c5 NOT NULL ORDER BY 18446744073709551488; 
SELECT a23.c6, count ( a23.c6 ) FROM v12 AS a23 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a24, v12 AS a25 WHERE max ( a25.c1, a24.c2 ) > 255 ORDER BY 2147483647; 
