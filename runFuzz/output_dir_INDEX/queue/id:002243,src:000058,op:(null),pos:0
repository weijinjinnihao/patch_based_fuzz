CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER REFERENCES t1 ON DELETE CASCADE REFERENCES t2, c3 TEXT, FOREIGN KEY ( c3, c2 ) REFERENCES encoding ( c3, c1 ) ON UPDATE CASCADE ); 
CREATE TABLE v4 ( c5 INTEGER PRIMARY KEY, c6 TEXT ); 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE INDEX i8 ON v4 ( c5 ); 
CREATE TABLE v9 ( c10 INTEGER REFERENCES t2, c11 INTEGER REFERENCES t1, FOREIGN KEY ( c11, c10 ) REFERENCES t2 ( c10, c10 ) ); 
CREATE INDEX i12 ON v4 ( c6 ); 
CREATE INDEX i13 ON v9 ( c11 ); 
INSERT INTO v9 VALUES ( 100, 100, 'x' ); 
INSERT INTO v4 VALUES ( 100, 18446744073709551488, 'v1' ); 
INSERT INTO v0 VALUES ( 16, 'v0' ); 
INSERT INTO v4 VALUES ( 100, 'e' ); 
INSERT INTO v9 VALUES ( 100, 18446744073709551488 ); 
INSERT INTO v0 VALUES ( 0, 0 ); 
CREATE INDEX i14 ON v9 ( c10 ); 
SELECT * FROM v4 AS a15, v9 AS a16 NATURAL JOIN v0 AS a17 ORDER BY 100; 
SELECT * FROM v4 AS a18 GROUP BY 16 ORDER BY 100; 
WITH v4 AS ( SELECT 100 y ORDER BY 100 ) SELECT * FROM v9 AS a19 ORDER BY 0; 
SELECT a20.c11, max ( a20.c11 || a20.c10 ) FROM v9 AS a20 ORDER BY 100; 
SELECT * FROM v4 AS a21 WHERE ( ( a21.c6 + 18446744073709551488 ) % 18446744073709551615 ) == 0 ORDER BY 18446744073709551488; 
SELECT a22.c5, a22.c5 FROM v4 AS a22 WHERE a22.c6 = 'v1' ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a23 ORDER BY 1; 
SELECT * FROM v4 AS a24 ORDER BY 100; 
SELECT * FROM v9 AS a25 ORDER BY 1; 
SELECT * FROM v9 AS a26, v4 AS a27 NATURAL JOIN v0 AS a28 ORDER BY 100; 
