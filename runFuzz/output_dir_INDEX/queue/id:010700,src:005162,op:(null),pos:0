CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8, c9, c10, c11, c12 ); 
CREATE INDEX i13 ON v3 ( c12 ); 
INSERT INTO v0 VALUES ( 255, 'v1' ), ( 255, 'v1' ), ( 255, 'v0' ); 
INSERT INTO v0 VALUES ( 100, 4294967295, 18446744073709551488 ), ( 255, 4294967295, 4294967295 ), ( 255, 255, 18446744073709551488 ); 
CREATE INDEX i14 ON v3 ( c2 ); 
CREATE TABLE v15 ( c16 INTEGER, c17 UNIQUE ON CONFLICT IGNORE, c18 UNIQUE ON CONFLICT FAIL, c19, c20, c21, c22 UNIQUE ON CONFLICT REPLACE, c23, c24, c25 REFERENCES t1 UNIQUE ON CONFLICT IGNORE, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41 UNIQUE ON CONFLICT FAIL DEFAULT 255, PRIMARY KEY ( c32, c38, c19, c25, c21, c41, c22 ) ) WITHOUT ROWID; 
CREATE INDEX i42 ON v3 ( c12 ); 
CREATE TABLE IF NOT EXISTS v43 ( c44 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c45 UNIQUE ON CONFLICT IGNORE, c46 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE INDEX i47 ON v15 ( c40 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3; END; 
ALTER TABLE v3 RENAME TO v48; 
UPDATE v48 SET c7 = 'v1' WHERE c7 = 255; 
SELECT * FROM v48 AS a49, v48 AS a50 NATURAL JOIN v48 AS a51 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a52 ORDER BY ( ( hex ( 18446744073709551488 ) ) % 0 ); 
SELECT * FROM v0 AS a53 ORDER BY 100; 
SELECT * FROM v48 AS a54 ORDER BY 4294967295; 
SELECT * FROM v0 AS a55, v15 AS a56 NATURAL JOIN v48 AS a57 ORDER BY 18446744073709551488; 
WITH RECURSIVE v43 ( c59 ) AS ( SELECT max ( c59 || a58.c19 ) ORDER BY 100 ) SELECT * FROM v15 AS a58 ORDER BY 100; 
SELECT max ( a60.c2 || a60.c1 ) FROM v0 AS a60 ORDER BY 9223372036854775807; 
SELECT * FROM v15 AS a61 GROUP BY a61.c38 HAVING NULL ORDER BY 4294967295; 
SELECT * FROM v48 AS a62, v15 AS a63 ORDER BY 100; 
SELECT a64.c2, max ( a64.c1 || a64.c2 ) FROM v0 AS a64 ORDER BY 4294967295; 
