CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9, c10 REFERENCES t1 DEFAULT NULL, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23 INTEGER PRIMARY KEY, c24 ); 
CREATE TABLE v25 ( c26, c27, c28, c29, c30, c31, c32 DEFAULT x'ABCD', c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51 INTEGER CHECK( x'b1' ), c52, c53, c54 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v55 USING rtree ( c56, c57, c58, c59, c60, c61, c62, c63, c64 ); 
CREATE TABLE v65 ( c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82 TEXT UNIQUE NOT NULL ); 
INSERT INTO v55 VALUES ( 8, '%foo%' ), ( 8, 'v0' ), ( 8, 'v0' ); 
CREATE INDEX i83 ON v0 ( c2 ); 
CREATE INDEX i84 ON v0 ( c1 ); 
CREATE TABLE v85 ( c86 DEFAULT x'ABCD' DEFAULT 8, c87 NOT NULL DEFAULT 8, c88 NOT NULL ON CONFLICT REPLACE DEFAULT 255, c89 NOT NULL ON CONFLICT IGNORE DEFAULT 127, c90 NOT NULL ON CONFLICT ABORT DEFAULT 0 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v25 BEGIN DELETE FROM v0; END; 
CREATE INDEX i91 ON v25 ( c33 ); 
CREATE INDEX i92 ON v55 ( c12 ); 
ALTER TABLE v0 RENAME TO v93; 
CREATE INDEX i94 ON v55 ( c56 ); 
UPDATE v93 SET c2 = 'v0' WHERE c1 = 18446744073709551488; 
WITH v95 ( c97 ) AS ( WITH v98 ( c99, c100, c101, c102, c103, c104 ) AS ( SELECT 0 y ORDER BY 0 ) SELECT 100 ORDER BY 255 ) SELECT * FROM v95 AS a96 ORDER BY 8; 
SELECT * FROM v25 AS a105, v25 AS a106 ORDER BY 8; 
SELECT * FROM v65 AS a107 WHERE CASE WHEN a107.c79 != 'v1' THEN 255 ELSE 8 END > 8 ORDER BY 18446744073709551488; 
SELECT a108.c21 IS NULL, a109.c1 FROM v3 AS a108, v93 AS a109 ORDER BY 255; 
SELECT * FROM v3 AS a110 GROUP BY a110.c9, a110.c11 < a110.c4 ORDER BY 18446744073709551488; 
SELECT * FROM v85 AS a111, v3 AS a112 NATURAL JOIN v85 AS a113 ORDER BY 18446744073709551488; 
SELECT * FROM v25 AS a114 WHERE a114.c54 = CASE WHEN a114.c43 != 'v1' THEN 2147483647 ELSE 18446744073709551488 END > 2147483647 ORDER BY 8; 
SELECT * FROM ( SELECT 2147483647 ORDER BY 8 ) AS y, ( SELECT 255 ORDER BY 18446744073709551488 ) AS y ON likely ( 8 OR 18446744073709551615 ) < 255 ORDER BY 8; 
SELECT * FROM v3 AS a115, v65 AS a116 WHERE max ( a115.c14, a116.c67 ) > 0 ORDER BY 8; 
WITH v85 AS ( SELECT 8 y ORDER BY 8 ) SELECT ( 8, count ( * ) ) FROM v55 AS a117 ORDER BY 8; 
