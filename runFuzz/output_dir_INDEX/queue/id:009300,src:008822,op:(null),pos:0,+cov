CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c4 || c1 || c3 ), c3 INTEGER NULL CHECK( c3 > c1 * 18446744073709551488 ), c4 INTEGER NOT NULL CHECK( c4 BETWEEN c1 AND c4 ) ); 
INSERT INTO v0 ( c2, c4, c1, c2, c4 ) VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551615, 18446744073709551488, 18446744073709551488 ); 
DELETE FROM v0; 
INSERT INTO v0 ( c2, c2, c4, c1, c3 ) VALUES ( 18446744073709551488, 18446744073709551488, 5.4e-08, 18446744073709551488, 18446744073709551488 ); 
INSERT OR IGNORE INTO v0 ( c3, c1, c1, c3 ) VALUES ( 4294967295, 18446744073709551615, 18446744073709551615, 5.4e-08 ); 
INSERT OR REPLACE INTO v0 ( c2, c4, c4, c2, c2 ) VALUES ( 18446744073709551488, 100, NULL, 8, 18446744073709551488 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE INDEX i6 ON v0 ( c3 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
INSERT OR ABORT INTO v0 ( c4, c1, c1, c4, c4, c2, c3, c3, c3, c4, c1, c2, c1, c3, c4 ) VALUES ( hex ( 2147483647 ), 18446744073709551488, 'x', ( ( c1 + 9223372036854775807 ) % 100 ) == 391 ); 
UPDATE OR IGNORE v0 SET c2 = NULL, c3 = c2, c3 = c4; 
PRAGMA quick_check ( 10 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
UPDATE v0 SET c2 = NULL, c2 = c1, c4 = c4; 
INSERT OR ABORT INTO v0 ( c4, c3, c2, c2 ) VALUES ( 5.4e-08, 391, 0, 10 ); 
SELECT * FROM v0 AS a10 GROUP BY a10.c1, abs ( a10.c2 ) HAVING CASE WHEN a10.c1 != 'x' THEN 18446744073709551488 ELSE 2147483647 END > 18446744073709551488 >= 5.4e-08 ORDER BY 2147483647; 
SELECT a12.c4, a11.c4 FROM v0 AS a11 LEFT JOIN v0 AS a12 ON a12.c2 = a11.c4 WHERE a12.c4 != a11.c4 ORDER BY 18446744073709518848; 
WITH RECURSIVE v0 AS ( SELECT 0 y ORDER BY 391 ) SELECT * FROM v0 AS a13 ORDER BY 127; 
SELECT * FROM v0 AS a14 WHERE a14.c1 > 0 ORDER BY 127; 
WITH v0 ( c16 ) AS ( SELECT * ORDER BY 4294967295 ) SELECT * FROM v0 AS a15 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a17 ORDER BY 0; 
SELECT a18.c1, max ( a18.c4 || a18.c1 ) FROM v0 AS a18 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a19 ORDER BY 391; 
SELECT a20.c3, count ( ( NOT ( a20.c1 IS NULL ) ) AND ( NOT ( a20.c4 IS NULL ) ) ) FROM v0 AS a20 ORDER BY 0; 
SELECT * FROM v0 AS a21 ORDER BY 0; 
