CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 'v0' ), ( 0, 'v1' ), ( 0, 'v0' ); 
UPDATE OR IGNORE v3 SET c5 = NULL, c5 = c4, c6 = c6; 
INSERT INTO v0 VALUES ( 0, 0, 0 ), ( 0, 0, 18446744073709518848 ), ( 18446744073709551615, 8, 18446744073709551615 ); 
CREATE INDEX i7 ON v3 ( c4 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c6 = c6; END; 
ALTER TABLE v3 RENAME TO v9; 
UPDATE v9 SET c6 = 'v0' WHERE c6 IS NOT NULL >= abs ( c6 ); 
CREATE INDEX i10 ON v9 ( c4 ); 
CREATE INDEX i11 ON v0 ( c2 ); 
CREATE INDEX i12 ON v9 ( c4 ); 
SELECT * FROM v0 AS a13 WHERE ( ( a13.c2 + 18446744073709518848 ) % 255 ) == 0 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a14 NATURAL JOIN v9 AS a15 ORDER BY 0; 
SELECT * FROM v0 AS a16 NATURAL JOIN v9 AS a17 ORDER BY 0; 
SELECT max ( a18.c6 || a18.c6 ) FROM v9 AS a18 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a19, v9 AS a20 WHERE NOT min ( a19.c5, a20.c5 ) ORDER BY 100; 
SELECT a21.c5, max ( a21.c6 || a21.c6 ) FROM v9 AS a21 ORDER BY 18446744073709551615; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a22, v9 AS a23 NATURAL JOIN v9 AS a24 ORDER BY 100; 
SELECT * FROM v9 AS a25 WHERE a25.c4 != a25.c4 ORDER BY 18446744073709551615; 
SELECT * FROM v9 AS a26 ORDER BY 1; 
