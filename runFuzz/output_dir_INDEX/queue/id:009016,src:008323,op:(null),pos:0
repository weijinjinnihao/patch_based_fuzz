CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INT, c3 VARCHAR(1000) ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7, c8, c9 ); 
CREATE INDEX i10 ON v4 ( c6 ); 
CREATE INDEX i11 ON v0 ( c1 ); 
CREATE TABLE v12 ( c13 DEFAULT x'ABCD', c14 TEXT, c15 BLOB, CHECK( coalesce ( c13, c15 ) ) ); 
ANALYZE; 
CREATE TABLE v16 ( c17, c18 INTEGER UNIQUE ON CONFLICT FAIL, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 PRIMARY KEY, CHECK( ( ( c21 + 4294967295 ) % 9223372036854775807 ) != 4294967295 ) ) WITHOUT ROWID; 
CREATE INDEX i49 ON v4 ( c5 ); 
ANALYZE; 
CREATE TABLE v50 ( c51 INT, c52 TEXT, c53 BLOB, c54 REAL ); 
CREATE INDEX i55 ON v50 ( c51 ); 
CREATE TABLE v56 ( c57 INT, c58 TEXT, c59 BLOB, c60 REAL ); 
CREATE INDEX i61 ON v4 ( c8 ); 
SELECT * FROM v0 AS a62 ORDER BY 4294967295; 
SELECT * FROM v4 AS a63 ORDER BY count ( * ); 
SELECT a64.c14, a65.c15 y FROM v12 AS a64 RIGHT JOIN v12 AS a65 ON a64.c14 = a64.c15 ORDER BY 4294967295; 
WITH v56 ( c68 ) AS ( SELECT 18446744073709551488 ORDER BY 0 ) SELECT '?k<D Q', a67.c52 FROM v56 AS a66 RIGHT JOIN v50 AS a67 ON a67.c54 = a66.c58 ORDER BY 4294967295; 
SELECT * FROM v56 AS a69 ORDER BY 4294967295; 
SELECT * FROM v0 AS a70 ORDER BY 0; 
WITH RECURSIVE v12 ( c72 ) AS ( SELECT 16 ORDER BY 0 ) SELECT * FROM v12 AS a71 ORDER BY 4294967295; 
SELECT a73.c54, a73.c54 FROM v50 AS a73 RIGHT JOIN v0 AS a74 ON a73.c52 + a74.c3 ORDER BY 66; 
SELECT * FROM v50 AS a75 NATURAL JOIN v12 AS a76 ORDER BY 4294967295; 
SELECT * FROM v56 AS a77 NATURAL JOIN v16 AS a78 ORDER BY 0; 
