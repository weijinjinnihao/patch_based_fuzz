CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9 INTEGER, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 TEXT PRIMARY KEY, c46 ); 
CREATE TABLE v47 ( c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61 PRIMARY KEY ON CONFLICT REPLACE, c62, c63, c64 TEXT UNIQUE NOT NULL ); 
CREATE VIRTUAL TABLE v65 USING rtree ( c66, c67, c68, c69, c70, c71, c72, c73, c74 ); 
CREATE TABLE v75 ( c76, c77 INTEGER UNIQUE ON CONFLICT FAIL, c78, PRIMARY KEY ( c78, c76, c77, c77, c77, c77, c77, c77 ), CHECK( ( ( c77 + 0 ) > 18446744071562067968 ) != 16 ) ) WITHOUT ROWID; 
CREATE INDEX i79 ON v65 ( c68 ); 
INSERT INTO v0 VALUES ( 18446744071562067968, 'x' ), ( 18446744071562067968, 'x' ), ( 18446744071562067968, 'v1' ); 
CREATE INDEX i80 ON v47 ( c49 ); 
CREATE TABLE v81 ( c82 DEFAULT x'ABCD' DEFAULT 18446744071562067968, c83 NOT NULL DEFAULT 255, c84 NOT NULL ON CONFLICT REPLACE DEFAULT 2147483647, c85 NOT NULL ON CONFLICT IGNORE DEFAULT 18446744071562067968, c86 NOT NULL ON CONFLICT ABORT DEFAULT 0 ); 
CREATE INDEX i87 ON v3 ( c11 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v65; END; 
CREATE INDEX i88 ON v3 ( c30 ); 
ALTER TABLE v65 RENAME TO v89; 
CREATE INDEX i90 ON v75 ( c78 ); 
UPDATE v47 SET c54 = '40000 400 1 1' WHERE c56 = 2147483647; 
SELECT * ORDER BY 10; 
SELECT avg ( c77 ) FROM ( SELECT * FROM v89 AS a91 RIGHT JOIN v81 AS a92 ON a91.c72 ORDER BY 10 ) AS y ORDER BY 10; 
SELECT a94.c2, count ( ( NOT ( a94.c2 IS NULL ) ) AND ( NOT ( a94.c1 IS NULL ) ) ), count ( ( NOT ( a93.c60 IS NULL ) ) AND ( NOT ( a93.c50 IS NULL ) ) ) FROM v47 AS a93 LEFT JOIN v0 AS a94 ON a94.c1 = a93.c56 ORDER BY max ( a94.c2 + a93.c50 * 18446744071562067968 ) + 18446744071562067968; 
SELECT * FROM v89 AS a95 WHERE a95.c64 % 18446744071562067968 ORDER BY 18446744071562067968; 
SELECT * FROM v89 AS a96 WHERE a96.c73 != 0 ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a97 WHERE a97.c1 = a97.c1 ORDER BY 127; 
SELECT a98.c40 FROM ( SELECT a98.c46, max ( a99.c2 ) AS y FROM v0 AS a99 WHERE a99.c2 >= 0 GROUP BY a99.c1 ORDER BY 10 ) AS y JOIN v3 AS a98 WHERE a98.c42 = a98.c21 AND a98.c13 = a98.c40 ORDER BY a98.c6; 
SELECT * FROM v0 AS a100, v81 AS a101 NATURAL JOIN v47 AS a102 ORDER BY 0; 
SELECT * FROM v89 AS a103 ORDER BY 10; 
SELECT * FROM v0 AS a104 ORDER BY max ( a104.c2 + a104.c2 * 127 ) + 127, min ( a104.c1, avg ( a104.c2 ) ) + 0; 
