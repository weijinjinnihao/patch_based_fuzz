CREATE TABLE v0 ( c1 BLOB PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c2 > c1 ), c3 INTEGER NOT NULL CHECK( c3 > c2 * 100 ), c4 INTEGER NOT NULL CHECK( c2 NOT BETWEEN c1 AND c3 ) ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
CREATE INDEX i9 ON v0 ( c3 ); 
INSERT INTO v5 VALUES ( 0, 'x1' ), ( 100, 'v0' ), ( 100, 'x' ); 
CREATE INDEX i10 ON v0 ( c3 ); 
INSERT OR IGNORE INTO v5 VALUES ( 100, 100, 100 ), ( 100, 100, 18446744073709551488 ), ( 100, 100, 100 ); 
CREATE INDEX i11 ON v5 ( c7 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c8 = c1; END; 
CREATE INDEX i12 ON v0 ( c2 ); 
CREATE INDEX i13 ON v5 ( c6 ); 
ALTER TABLE v0 RENAME TO v14; 
SELECT * FROM v5 AS a15 NATURAL JOIN v14 AS a16 ORDER BY 100; 
SELECT * FROM v14 AS a17 NATURAL JOIN v14 AS a18 ORDER BY 18446744073709551488; 
SELECT * FROM v14 AS a19 ORDER BY 100; 
SELECT * FROM v5 AS a20 ORDER BY ( 0, count ( * ) ); 
WITH v14 AS ( SELECT 4294967295 y ORDER BY 100 ) SELECT ( SELECT min ( a21.c7 ) OVER ( ORDER BY 100 ) ORDER BY 100 ) FROM v5 AS a21 GROUP BY a21.c1 ORDER BY 100; 
SELECT * FROM v5 AS a22, v14 AS a23 ORDER BY 100; 
SELECT * FROM v5 AS a24 ORDER BY 100; 
SELECT a25.c8, count ( ( NOT ( a25.c2 IS NULL ) ) AND ( NOT ( a25.c6 IS NULL ) ) ) FROM v5 AS a25 ORDER BY 100; 
SELECT a26.c7 + ( SELECT max ( a27.c2 ) FROM v14 AS a29 ORDER BY 4294967295 ), a26.c6 + ( SELECT max ( a26.c7 || a28.c1 ) FROM v14 AS a28 ORDER BY 18446744073709551615 ), a26.c8 + ( SELECT max ( a26.c2 ) FROM v5 AS a27 ORDER BY 18446744073709551615 ) FROM v5 AS a26 ORDER BY 100; 
SELECT * FROM v14 AS a30 WHERE ( a30.c1 = 100 OR a30.c3 > 18446744071562067968 ) AND a30.c2 IN ( SELECT a30.c4 FROM ( SELECT a31.c4 FROM v14 AS a31 ORDER BY 18446744073709551615 ) AS y WHERE a30.c2 = 100 ORDER BY 18446744071562067968 ) ORDER BY 100; 
