CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c2 UNIQUE ON CONFLICT IGNORE, c3 UNIQUE ON CONFLICT FAIL ); 
INSERT INTO v0 ( c3, c2 ) VALUES ( 18446744073709551615, 18446744073709551615 ) ON CONFLICT ( c3 ) DO UPDATE SET c2 = c3, c3 = c3; 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 ( c1, c1, c2 ) VALUES ( 0, 0, 18446744073709551615 ), ( 0, 18446744073709518848, 18446744073709551615 ); 
INSERT INTO v0 ( c3, c2, c2 ) VALUES ( 18446744073709551615, 0, 255 ) ON CONFLICT ( c1 ) DO UPDATE SET c2 = c2, c3 = c3, c2 = c2; 
CREATE INDEX i5 ON v0 ( c2 ); 
INSERT INTO v0 ( c2, c2, c2 ) VALUES ( 255, 255, 18446744073709551615 ), ( 0, 0, 18446744073709551615 ) ON CONFLICT ( c3 ) DO UPDATE SET c2 = c2, c2 = y ( c3 ); 
CREATE INDEX i6 ON v0 ( c2 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE INDEX i8 ON v0 ( c3 ); 
SELECT * FROM v0 AS a9 ORDER BY a9.c1 = + a9.c2; 
SELECT * FROM v0 AS a10 GROUP BY a10.c1 HAVING count ( * ) >= 18446744073709551615 ORDER BY 18446744071562067968; 
WITH v11 AS ( SELECT ( SELECT min ( c2 ) OVER ( ORDER BY 18446744073709551615 IN v11 ) ORDER BY 9223372036854775807 ) FROM v11 AS a13 NATURAL JOIN v11 AS a14 GROUP BY c1 ORDER BY 255 ) SELECT * FROM v11 AS a12 ORDER BY 18446744073709551488; 
SELECT a15.c1, a16.c2 FROM v0 AS a15 JOIN v0 AS a16 ON a16.c2 = hex ( ) GROUP BY a16.c3 ORDER BY 0; 
SELECT * FROM v0 AS a17 WHERE NOT NULL >= 18446744073709551615 ORDER BY 255; 
SELECT ( CASE WHEN a18.c2 = 255 THEN 255 ELSE ( a18.c1 + 255 ) / 18446744073709551615 END ) AS y, count ( * ) FROM v0 AS a18 ORDER BY 18446744073709551488; 
SELECT a19.c1 FROM v0 AS a19 ORDER BY 16; 
SELECT count ( a20.c3 ) FROM v0 AS a20 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a21 WHERE ( ( ( 0 IS NOT 255 ) OR NOT ( 18446744073709551615 IS 18446744071562067968 OR ( a21.c3 = 18446744073709551615 ) ) ) IS 18446744073709551615 ) ORDER BY 255; 
SELECT * FROM v0 AS a22, v0 AS a23 ORDER BY 255; 
