CREATE TABLE v0 ( c1, c2, c3 PRIMARY KEY, CHECK( ( ( c3 + 18446744073709551615 ) % 255 ) != 18446744073709551615 ) ) WITHOUT ROWID; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v5 USING rtree ( c6, c7, c8 ); 
CREATE INDEX i9 ON v5 ( c6 ); 
ALTER TABLE v0 DROP c1; 
CREATE INDEX i10 ON v5 ( c7 ); 
CREATE INDEX i11 ON v5 ( c8 ); 
CREATE INDEX i12 ON v0 ( c3 ); 
SELECT * ORDER BY 18446744073709551615; 
SELECT * ORDER BY 255; 
SELECT a14.c6, a14.c7 FROM v5 AS a13 LEFT JOIN v5 AS a14 ON a14.c6 = a14.c7 ORDER BY max ( a14.c6 + a14.c6 * 255 ) + 255, min ( a13.c8, avg ( a13.c6 ) ) + 18446744073709551615; 
SELECT * FROM v0 AS a15 WHERE a15.c1 = 18446744073709551615 ORDER BY 8; 
SELECT * FROM v5 AS a16 WHERE a16.c6 NOT NULL ORDER BY 18446744073709551488; 
SELECT a17.c3, count ( a18.c1 ) FROM v0 AS a17, v0 AS a18 WHERE a18.c2 = a18.c3 GROUP BY y ( a18.c3 ) ORDER BY 8; 
SELECT * FROM v5 AS a19 ORDER BY a19.c6, a19.c8, a19.c6; 
SELECT * ORDER BY 255; 
SELECT * FROM ( v5 AS a20 ), ( v5 AS a21 ), ( v0 AS a22 ), ( v5 AS a23 ) WHERE a20.c6 = a22.c1 + 18446744073709551615 AND a21.c7 = a21.c7 + 18446744073709551615 AND a21.c6 = a21.c6 + 2147483647 ORDER BY 18446744073709551615; 
SELECT a24.c8, count ( ( NOT ( a24.c8 IS NULL ) ) AND ( NOT ( a24.c8 IS NULL ) ) ) FROM v5 AS a24 WHERE ( CASE WHEN a24.c6 != 'count.test cases for NOT INDEXED' THEN 255 ELSE 18446744073709551615 END ) GROUP BY 255 ORDER BY 8 COLLATE hex; 
