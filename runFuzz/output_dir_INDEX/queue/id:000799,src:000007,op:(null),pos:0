CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v0 VALUES ( 10, 'v1' ), ( 10, 'v0' ), ( 10, 'v1' ); 
CREATE INDEX i9 ON v5 ( c1 ); 
INSERT INTO v5 VALUES ( 127 ); 
CREATE INDEX i10 ON v5 ( c6 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c7 = c8; END; 
CREATE INDEX i11 ON v5 ( c7 ); 
ALTER TABLE v5 RENAME TO v12; 
UPDATE v12 SET c7 = 'v1' WHERE c7 = 10; 
SELECT * FROM v0 AS a13 ORDER BY max ( a13.c1 + a13.c2 * 127 ) + 10, min ( a13.c2, avg ( a13.c1 ) ) + 10; 
SELECT * FROM v0 AS a14, v12 AS a15 ORDER BY 18446744073709551488; 
SELECT * FROM v12 AS a16 GROUP BY 18446744073709551488 ORDER BY 127; 
SELECT * FROM v12 AS a17 ORDER BY 10; 
SELECT a18.c2, a18.c2 FROM v12 AS a18 LEFT JOIN v12 AS a19 ON a19.c1 = a18.c2 y ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a20 GROUP BY y ( a20.c6 ) ORDER BY 10; 
SELECT * ORDER BY 10; 
SELECT a21.c8, max ( a21.c8 || a21.c2 ) FROM v12 AS a21 ORDER BY 10; 
WITH v22 ( c24 ) AS ( SELECT 127 ORDER BY 10 ) SELECT * FROM v22 AS a23 ORDER BY 10; 
SELECT a25.c6 AS y, a25.c8 || a25.c2 AS y FROM v12 AS a25 WHERE + a25.c8 = 'v1' ORDER BY 0; 
