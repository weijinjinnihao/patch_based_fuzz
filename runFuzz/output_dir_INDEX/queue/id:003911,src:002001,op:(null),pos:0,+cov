CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c2 > c2 ), c3 INTEGER UNIQUE ON CONFLICT IGNORE, c4 INTEGER NOT NULL CHECK( c2 BETWEEN c1 AND c4 ) ); 
CREATE INDEX i5 ON v0 ( c3 ); 
INSERT INTO v0 ( c2, c3, c4, c3 ) VALUES ( 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 127, 127, 18446744073709551488, 18446744073709551615 ) ON CONFLICT ( c1 ) DO UPDATE SET c4 = c4, c4 = y ( c3 ); 
CREATE INDEX i6 ON v0 ( c4 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
UPDATE v0 SET c3 = 18446744073709551488 WHERE c3 = 0; 
CREATE INDEX i8 ON v0 ( c3 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
UPDATE v0 SET c4 = c3 * 0 WHERE c2 = 127; 
SELECT * ORDER BY 127; 
SELECT * ORDER BY 18446744073709551488; 
SELECT avg ( c2 ) FROM ( WITH v10 ( c13 ) AS ( SELECT 127 ORDER BY 18446744073709551615 ) SELECT * FROM v10 AS a11 RIGHT JOIN v10 AS a12 ON c13 ORDER BY 0 ) AS y ORDER BY 4294967295; 
SELECT * FROM v0 AS a14 WHERE ( CASE WHEN a14.c2 != 'v1' THEN 100 ELSE 0 END ) ORDER BY 0; 
SELECT * FROM v0 AS a15 WHERE a15.c4 = + a15.c4 ORDER BY 0; 
SELECT 'v0', a17.c3 FROM v0 AS a16 RIGHT JOIN v0 AS a17 ON a16.c2 = a16.c1 ORDER BY 127; 
SELECT * FROM v0 AS a18 ORDER BY 0; 
SELECT * FROM v0 AS a19 ORDER BY 0; 
SELECT typeof ( sum ( a20.c4 ) ) FROM v0 AS a20 GROUP BY a20.c3 ORDER BY 18446744073709551615; 
SELECT a21.c1 FROM ( SELECT a22.c1, max ( a22.c1 ) AS y FROM v0 AS a22 WHERE a21.c4 >= 4294967295 GROUP BY a21.c4 ORDER BY 555 ) AS y CROSS JOIN v0 AS a21 WHERE a21.c4 = a21.c2 AND a21.c2 = a21.c1 ORDER BY a21.c4; 
