CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v4 ( c7 ); 
CREATE TABLE v11 ( c12, c13 INTEGER UNIQUE ON CONFLICT FAIL, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47 DEFAULT 18446744073709551615 DEFAULT 18446744073709551615, c48, c49, c50, c51 INTEGER PRIMARY KEY, c52 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v11 BEGIN WITH v4 AS ( SELECT TRUE y ORDER BY TRUE ) SELECT ( SELECT min ( c35 ) OVER ( ORDER BY TRUE ) ORDER BY TRUE ) FROM v11 AS a53 GROUP BY c31 ORDER BY 1; END; 
INSERT INTO v0 VALUES ( ( ( c2 + 18446744073709551615 ) % 18446744073709551615 ) < 18446744073709551615, 'x', 'v0' ); 
CREATE INDEX i54 ON v11 ( c31 ); 
ALTER TABLE v11 RENAME TO v55; 
UPDATE v55 SET c16 = 'v0' WHERE c36 = 18446744073709551615; 
SELECT a56.c1, max ( a56.c2 || a56.c1 ) FROM v0 AS a56 ORDER BY 18446744073709551615; 
SELECT * FROM v4 AS a57 NATURAL JOIN v0 AS a58 ORDER BY TRUE; 
SELECT * FROM v55 AS a59, v55 AS a60 ORDER BY 0; 
SELECT * FROM v0 AS a61 GROUP BY y ( a61.c2, a61.c2, a61.c1, a61.c2, a61.c1, a61.c1, a61.c1, a61.c2, a61.c1, a61.c1, a61.c1, a61.c2, a61.c1, a61.c1, a61.c2, a61.c1, a61.c2 ) ORDER BY TRUE; 
SELECT a62.c7, count ( a63.c31 ), a63.c31 FROM v4 AS a62 LEFT JOIN v55 AS a63 ON a62.c7 = a62.c6 ORDER BY 0; 
SELECT * FROM v55 AS a64 ORDER BY 0; 
SELECT count ( ( NOT ( a65.c49 IS NULL ) ) AND ( NOT ( a65.c28 IS NULL ) ) ) FROM v55 AS a65 ORDER BY 18446744073709551615; 
SELECT * FROM v55 AS a66 ORDER BY a66.c47 COLLATE UTF16le; 
SELECT * FROM v55 AS a67 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a68, v4 AS a69 NATURAL JOIN v4 AS a70 ORDER BY 18446744073709551615; 
