CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4, c5, c6, c7, c8, c9 INTEGER, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28 INTEGER PRIMARY KEY ON CONFLICT IGNORE, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 INTEGER PRIMARY KEY, c46 ); 
CREATE INDEX i47 ON v3 ( c33 ); 
CREATE INDEX i48 ON v3 ( c41 ); 
CREATE INDEX i49 ON v0 ( c2 ); 
CREATE TABLE v50 ( c51, c52, c53, c54, c55 INT, c56, c57, c58, c59, c60, c61, c62, c63, c64 PRIMARY KEY ON CONFLICT REPLACE, c65, c66, c67 TEXT UNIQUE NOT NULL ); 
CREATE TABLE v68 ( c69 COLLATE NOCASE, c70 UNIQUE ON CONFLICT IGNORE, c71 UNIQUE ON CONFLICT FAIL ); 
CREATE VIRTUAL TABLE v72 USING rtree ( c73, c74, c75, c76, c77, c78, c79, c80, c81 ); 
CREATE TABLE v82 ( c83 UNIQUE, c84 INTEGER UNIQUE ON CONFLICT FAIL, c85, c86, c87 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i88 ON v68 ( c70 ); 
INSERT INTO v0 VALUES ( 16, 'pear' ), ( 10, 'x' ), ( ( c2 || c2 || c2 ) != 'v1', 'v0' ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v89 USING rtree ( c90, c91, c92 ); 
CREATE INDEX i93 ON v82 ( c84 ); 
INSERT INTO v0 VALUES ( 10, 'v0' ), ( 'v1', 'v1' ), ( 16, 'Al' ); 
CREATE TABLE v94 ( c95 DEFAULT x'ABCD' DEFAULT 10, c96 NOT NULL DEFAULT 10, c97 NOT NULL ON CONFLICT REPLACE DEFAULT 10, c98 NOT NULL ON CONFLICT IGNORE DEFAULT 10, c99 NOT NULL ON CONFLICT ABORT DEFAULT 10 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v82 BEGIN DELETE FROM v0; END; 
ALTER TABLE v89 RENAME TO v100; 
UPDATE v72 SET c73 = 'v1' WHERE c78 = 18446744073709551488; 
SELECT * ORDER BY 10; 
SELECT * FROM v100 AS a101 ORDER BY + a101.c90; 
SELECT c95, c91, lower ( ( SELECT a102.c83 FROM v100 AS a103 WHERE a102.c84 = a103.c90 ORDER BY 18446744071562067968 ) ), 'ccc' FROM ( SELECT count ( * ) AS y, a102.c86 AS y FROM v82 AS a102 GROUP BY 10 ORDER BY 16 ) AS y ORDER BY c6, c79; 
SELECT * FROM v100 AS a104, v68 AS a105 ORDER BY 10; 
SELECT * ORDER BY 10; 
SELECT a107.c57, count ( ( NOT ( a106.c74 IS NULL ) ) AND ( NOT ( a106.c76 IS NULL ) ) ), count ( ( NOT ( a106.c29 IS NULL ) ) AND ( NOT ( a107.c61 IS NULL ) ) ) FROM v72 AS a106 LEFT JOIN v50 AS a107 ON a106.c76 = a106.c73 ORDER BY NULL; 
SELECT * FROM v100 AS a108 WHERE ( a108.c91 = 0 OR a108.c92 = 16 ) AND a108.c92 IN ( SELECT a108.c92 FROM ( SELECT a108.c92 FROM v72 AS a109 ORDER BY 255 ) AS y WHERE a108.c92 = 0 ORDER BY 16 ) ORDER BY 10; 
SELECT ( a110.c59 + 10 ) % 10, a111.c24 FROM v50 AS a110 LEFT JOIN v3 AS a111 ON a110.c57 = a110.c61 WHERE a110.c57 = + a111.c12 GROUP BY a110.c63 ORDER BY 10; 
SELECT 0 COLLATE hex FROM v72 AS a112 WHERE a112.c80 IS 18446744073709551488 ORDER BY 10; 
SELECT * ORDER BY 10; 
