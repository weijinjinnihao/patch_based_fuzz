CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE IF NOT EXISTS v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 255, '' ), ( 16, 18446744073709551488, hex ( 255 ) ), ( 255, 'abc1' ); 
CREATE INDEX i7 ON v3 ( c6 ); 
ALTER TABLE v3 DROP COLUMN c1; 
BEGIN; 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v3 ( c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 255, 18446744073709551488 ), ( 16, 0, 255 ), ( - ( hex ( 16 ) ) ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c2 = c5; END; 
ALTER TABLE v0 ADD COLUMN c10 TEXT CHECK( c37 ( ( ( ( c2 + 2147483647 ) % 2147483647 ) == 255 ) % 255 ) != 18446744073709551488 ) DEFAULT 18446744073709551488; 
CREATE INDEX i11 ON v3 ( c6 ); 
UPDATE v0 SET c2 = 'x' WHERE c2 = 2147483647; 
CREATE INDEX i12 ON v0 ( c2 ); 
SELECT * FROM v3 AS a13 ORDER BY 18446744073709551615; 
SELECT a14.c1, count ( ( NOT ( a14.c6 IS NULL ) ) AND ( NOT ( a14.c1 IS NULL ) ) ) FROM v3 AS a14 ORDER BY 18446744073709551488; 
SELECT a15.c2 = + a16.c10, a15.c10 FROM v0 AS a15 LEFT JOIN v0 AS a16 ON a16.c1 = a15.c10 ORDER BY 255; 
WITH v3 ( c18, c19, c20, c21, c22, c23 ) AS ( SELECT 255 y ORDER BY ( ( v3.c5 + 18446744073709551488 ) % 18446744073709551615 ) < 2147483647 ) SELECT * FROM v0 AS a17 ORDER BY 18446744073709551488; 
SELECT count ( ( NOT ( a24.c1 IS NULL ) ) AND ( NOT ( a24.c1 IS NULL ) ) ) FROM v3 AS a24 ORDER BY 18446744073709551488; 
WITH v0 AS ( SELECT a26.c1 FROM v3 AS a26 WHERE v0.c10 NOT LIKE 'pear' ORDER BY 255 ) SELECT * FROM v3 AS a25 ORDER BY 2147483647; 
SELECT * FROM v0 AS a27 ORDER BY 18446744073709551488; 
SELECT a28.c1, max ( a28.c1 || a28.c1 ) FROM v3 AS a28 ORDER BY 0; 
SELECT * ORDER BY 12; 
SELECT * FROM v3 AS a29 NATURAL JOIN v3 AS a30 ORDER BY 18446744073709551488; 
