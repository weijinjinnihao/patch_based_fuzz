CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL, c3 TEXT, PRIMARY KEY ( c3, c1, c1, c3, c3, c2, c2, c1, c2, c3 ), CONSTRAINT y UNIQUE ( c1, c3, c1, c2, c3 ) ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 'v0', 'x' ); 
CREATE INDEX i4 ON v0 ( c3 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 0, ( ( c1 + 0 ) % 0 ) < 0, 0, 18446744073709551615, 'v1' ); 
CREATE INDEX i5 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( NULL, 'v1', 'x' ); 
CREATE TABLE v6 ( c7 PRIMARY KEY, c8, c9 REAL AS( - x'68617265' ) REFERENCES t0, c10 ) WITHOUT ROWID; 
INSERT INTO v6 VALUES ( 'x', 'v0', 'v1' ); 
INSERT INTO v6 VALUES ( x'616263', 'x', '30 30 30 2 2 2 2 2 2 2' ); 
CREATE INDEX i11 ON v6 ( c7 ); 
CREATE TABLE v12 ( c13, c14, c15 COLLATE NOCASE ); 
CREATE INDEX i16 ON v6 ( c9 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 18446744073709551615, 0 ), ( 18446744073709551615, 0, 18446744073709551615 ) ON CONFLICT ( c3 ) DO UPDATE SET c3 = c3, c2 = c1; 
INSERT INTO v6 VALUES ( 'x', 'x', 'v1' ); 
INSERT INTO v6 VALUES ( c7 > 0, 'ddd', 'v1' ); 
CREATE INDEX i17 ON v6 ( c8 ); 
INSERT INTO v0 VALUES ( - 18446744073709551615, 'x', 'v0' ); 
CREATE TABLE v18 ( c19, c20, c21 COLLATE NOCASE ); 
INSERT INTO v12 SELECT * FROM v12 AS a22 ORDER BY 8; 
UPDATE v18 SET c20 = zeroblob ( 0 ); 
INSERT INTO v12 SELECT * FROM v18 AS a23 ORDER BY 18446744073709551615; 
INSERT INTO v0 SELECT c8, c1 FROM v0 AS a24 RIGHT JOIN v6 AS a25 ORDER BY 0; 
INSERT INTO v6 SELECT * FROM v0 AS a26 ORDER BY 18446744073709551615; 
SELECT * FROM v6 AS a27 ORDER BY 8; 
SELECT * FROM v0 AS a28, v6 AS a29 NATURAL JOIN v0 AS a30 ORDER BY 187; 
SELECT * FROM v18 AS a31, v0 AS a32 NATURAL JOIN v12 AS a33 ORDER BY 18446744073709551615; 
SELECT count ( ) FROM v12 AS a34 WHERE hex ( 0 ) ORDER BY 0; 
SELECT * FROM v0 AS a35 NATURAL JOIN v6 AS a36 ORDER BY 0; 
SELECT * FROM v6 AS a37 WHERE a37.c9 % 4294967295 ORDER BY 18446744073709551488; 
SELECT * FROM v18 AS a38, v6 AS a39 NATURAL JOIN v12 AS a40 ORDER BY 0; 
SELECT * FROM v12 AS a41 NATURAL JOIN v18 AS a42 ORDER BY 0; 
SELECT * FROM v0 AS a43 ORDER BY 0; 
SELECT * FROM v0 AS a44 ORDER BY max ( a44.c3 + a44.c2 * 8 ) + 127, min ( a44.c1, avg ( a44.c2 ) ) + 2147483647; 
