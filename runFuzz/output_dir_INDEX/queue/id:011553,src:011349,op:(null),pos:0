CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7, c8, c9, c10, c11, c12, c13 ); 
CREATE TABLE v14 ( c15 INTEGER, c16 INTEGER PRIMARY KEY, c17 BLOB, FOREIGN KEY ( c15 ) REFERENCES t2 ); 
INSERT INTO v0 VALUES ( 0, '5.4e-08' ), ( 127, 'v0' ), ( 0, 'v0' ); 
INSERT INTO v0 VALUES ( 0, 0, 0 ), ( 0, 0, 0 ), ( 0, 0, 0 ); 
SELECT a19.c6 AS y, a18.c15 || a18.c17 AS y FROM v14 AS a18 NATURAL JOIN v4 AS a19 WHERE a19.c2 IN ( 'meyers', 'v1' ) ORDER BY 0; 
CREATE TABLE v20 ( c21, c22, c23, c24, c25, c26 REAL, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42 PRIMARY KEY ON CONFLICT REPLACE, c43, c44, c45 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i46 ON v4 ( c12 ); 
CREATE INDEX i47 ON v0 ( c1 ); 
CREATE TABLE IF NOT EXISTS v48 ( c49 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c50 UNIQUE ON CONFLICT IGNORE, c51 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TRIGGER r1 AFTER UPDATE ON v14 BEGIN DELETE FROM v14; END; 
CREATE TABLE v52 ( c53, c54, c55 DEFAULT 0, c56 DOUBLE ); 
CREATE INDEX i57 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v58 USING rtree ( c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69 ); 
ALTER TABLE v4 RENAME TO v70; 
UPDATE v70 SET c5 = 'v1' WHERE c2 = 18446744073709551615; 
SELECT * FROM v0 AS a71, v70 AS a72 ORDER BY 0; 
SELECT * FROM v58 AS a73 CROSS JOIN v48 AS a74 ON ( a74.c50 = a74.c49 ) WHERE a73.c60 IN ( SELECT a77.c11 FROM v58 AS a75, v48 AS a76 NATURAL JOIN v70 AS a77 WHERE a74.c49 IN ( SELECT a74.c50 FROM ( SELECT a75.c53 FROM v52 AS a78 ORDER BY 0 ) AS y WHERE a75.c64 = 0 ORDER BY 0 ) ORDER BY 0 ) ORDER BY 18446744073709551615; 
SELECT * FROM v20 AS a79, v52 AS a80 ORDER BY 0; 
SELECT * FROM v48 AS a81 NATURAL JOIN v20 AS a82 WHERE a82.c37 LIKE 'v0' ORDER BY 9223372036854775807; 
SELECT * FROM v0 AS a83, v52 AS a84 ORDER BY 0; 
WITH v70 AS ( SELECT 18446744073709551615 y ORDER BY 0 ) SELECT ( SELECT min ( ) OVER ( ORDER BY 127 ) ORDER BY 0 ) FROM v58 AS a85 GROUP BY v70.c2 ORDER BY 2147483647; 
SELECT * FROM v0 AS a86 ORDER BY 0; 
SELECT * FROM v14 AS a87, v52 AS a88 NATURAL JOIN v52 AS a89 ORDER BY 0; 
SELECT * FROM v20 AS a90 WHERE a90.c27 = a90.c28 ORDER BY 127; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 0 ) SELECT * FROM v70 AS a91 WHERE a91.c12 = a91.c1 ORDER BY 0; 
