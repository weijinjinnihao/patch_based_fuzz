CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 'x' ), ( 18446744073709551488, 'x' ), ( 18446744073709551488, 'v0' ); 
CREATE INDEX i8 ON v3 ( c6 ); 
INSERT INTO v0 VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 100, 255, 18446744073709551488 ), ( 127, 18446744073709551615, 18446744073709551488 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c2 = c2; END; 
ALTER TABLE v0 RENAME TO v10; 
CREATE INDEX i11 ON v3 ( c4 ); 
UPDATE v10 SET c2 = 'v0' WHERE c2 = 18446744073709551488; 
CREATE INDEX i12 ON v3 ( c4 ); 
CREATE TABLE v13 ( c14 INTEGER PRIMARY KEY, c15 INTEGER NOT NULL CHECK( c14 > c14 ), c16 INTEGER NOT NULL CHECK( c17 > c16 != 10 ), c17 INTEGER NOT NULL CHECK( c17 BETWEEN c17 AND c14 ) ); 
SELECT a18.c5 FROM v3 AS a18 ORDER BY 10; 
SELECT * FROM v3 AS a19 ORDER BY 1; 
SELECT * FROM v13 AS a20 GROUP BY a20.c16 ORDER BY 1.250000; 
SELECT CASE WHEN a21.c1 % 18446744073709551488 != count ( * ) >= 18446744073709551488 THEN a21.c2 END, a21.c2, a21.c1 FROM v10 AS a21 WHERE a21.c1 <= 18446744073709551488 ORDER BY 18446744073709551488; 
WITH v10 AS ( SELECT * FROM v10 AS a23 ORDER BY a23.c2, a23.c1 ) SELECT * FROM v10 AS a22 ORDER BY 10; 
SELECT * FROM v13 AS a24 GROUP BY a24.c17, a24.c16 < a24.c16 ORDER BY 18446744073709551488; 
SELECT * FROM v10 AS a25 ORDER BY 4294967295; 
SELECT * FROM v3 AS a26, v3 AS a27 ORDER BY 10; 
SELECT * ORDER BY 100; 
SELECT count ( ( NOT ( a28.c5 IS NULL ) ) AND ( NOT ( a28.c2 IS NULL ) ) ) FROM v3 AS a28 WHERE a28.c2 > a28.c6 ORDER BY 18446744073709551488; 
