PRAGMA encoding = 10; 
CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
INSERT INTO v0 VALUES ( 5, 'v0' ), ( 5, 'v0' ), ( 3, 'x3' ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c3 ); 
INSERT INTO v0 VALUES ( 12, 5, 3 ), ( 3, 12, 5 ), ( 9.900000, 2147483647, 2147483647 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0; END; 
ALTER TABLE v0 RENAME TO v8; 
UPDATE v8 SET c1 = 'x' WHERE c2 = 2147483647; 
CREATE INDEX i9 ON v8 ( c1 ); 
SELECT * ORDER BY 3; 
SELECT * ORDER BY 2147483647; 
SELECT * ORDER BY 18446744071562067968; 
SELECT * FROM v8 AS a10 ORDER BY 5 - ( a10.c3 + a10.c3 ); 
SELECT * ORDER BY 2147483647; 
SELECT a11.c1, sequence ( ) AS y FROM v8 AS a11 WHERE a11.c3 > 0 AND a11.c1 < 2147483647 AND a11.c3 != 2147483647 ORDER BY 18446744073709551615; 
SELECT count ( a12.c2 ) FROM v8 AS a12 ORDER BY 2147483647; 
SELECT * FROM v8 AS a13 WHERE a13.c3 = a13.c2 || a13.c1 ORDER BY 2147483647; 
SELECT a14.c2, max ( a14.c1 || a14.c3 ) FROM v8 AS a14 ORDER BY 9223372036854775807; 
SELECT * FROM v8 AS a15 GROUP BY a15.c1, a15.c2, count ( a15.c3 ) ORDER BY 9.900000; 
