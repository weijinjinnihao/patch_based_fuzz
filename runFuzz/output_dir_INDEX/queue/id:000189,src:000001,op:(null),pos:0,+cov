CREATE TABLE v0 ( c1 INT PRIMARY KEY ); 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIEW v4 AS SELECT c1, c1 FROM v0 AS a5 LEFT JOIN v0 AS a6 ON c1 = c1 ORDER BY 0; 
CREATE VIEW v7 AS SELECT c1, c1 FROM v4 AS a8 RIGHT JOIN v0 AS a9 ON apr = apr ORDER BY 0; 
CREATE VIEW v10 AS SELECT apr, c1 FROM v4 AS a11 LEFT JOIN v0 AS a12 ON c1 = id ORDER BY 0; 
CREATE VIEW v13 AS SELECT id, apr FROM v7 AS a14 RIGHT JOIN v10 AS a15 ON id = id ORDER BY 0; 
CREATE VIEW v16 AS SELECT id, c1 FROM v0 AS a17 RIGHT JOIN v10 AS a18 ON c1 = c1 ORDER BY 0; 
INSERT INTO v10 ( id ) VALUES ( 18446744073709551488 ); 
INSERT INTO v13 ( id, id ) VALUES ( 0, 0 ); 
CREATE INDEX i19 ON v0 ( c1 ); 
INSERT INTO v7 ( id ) VALUES ( 0 ); 
CREATE INDEX i20 ON v10 ( id ); 
CREATE INDEX i21 ON v0 ( c1 ); 
INSERT INTO v4 ( id, id ) VALUES ( 0, 0 ); 
PRAGMA automatic_index = 0; 
SELECT a22.id, count ( a22.apr ) FROM v7 AS a22 ORDER BY 0; 
SELECT * FROM v7 AS a23, v10 AS a24 ORDER BY 0; 
SELECT * FROM v7 AS a25 ORDER BY 0; 
SELECT * FROM v13 AS a26 ORDER BY a26.apr COLLATE NOCASE; 
WITH v7 ( c28 ) AS ( SELECT 0 ORDER BY 18446744073709551488 ) SELECT * FROM v0 AS a27 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a29 ORDER BY 1; 
SELECT avg ( apr ) FROM ( SELECT * FROM v10 AS a30 RIGHT JOIN v4 AS a31 ON a30.apr ORDER BY 0 ) AS y ORDER BY 0; 
SELECT * ORDER BY 0; 
SELECT 0 - ( apr + id ) WHERE ( CASE WHEN id != 'v1' THEN 100 ELSE 2147483647 END ) ORDER BY 18446744073709551488; 
SELECT * FROM v7 AS a32 ORDER BY a32.apr, a32.id, a32.apr; 
