CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE TABLE v3 ( c4 UNIQUE, c5, c6 UNIQUE ON CONFLICT IGNORE, c7 UNIQUE ON CONFLICT FAIL, c8 UNIQUE ON CONFLICT IGNORE, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29 INTEGER PRIMARY KEY, c30 ); 
CREATE TABLE v31 ( c32 UNIQUE, c33, c34 UNIQUE ON CONFLICT IGNORE, c35 UNIQUE ON CONFLICT FAIL, c36 UNIQUE ON CONFLICT IGNORE, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49 PRIMARY KEY ON CONFLICT REPLACE, c50, c51, c52 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i53 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v54 USING rtree ( c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65 ); 
CREATE INDEX i66 ON v3 ( c19 ); 
ALTER TABLE v0 ADD COLUMN c67 TEXT CHECK( c2 != 127 ) DEFAULT 127; 
CREATE INDEX i68 ON v54 ( c61 ); 
CREATE INDEX i69 ON v3 ( c11 ); 
INSERT INTO v3 VALUES ( 127, 'v1' ), ( 127, '%t2%' ), ( 18446744071562067968, 'x' ); 
CREATE TABLE v70 ( c71 DEFAULT x'ABCD' DEFAULT 18446744071562067968, c72 NOT NULL DEFAULT 127, c73 NOT NULL ON CONFLICT REPLACE DEFAULT 2147483647, c74 NOT NULL ON CONFLICT IGNORE DEFAULT 127, c75 NOT NULL ON CONFLICT ABORT DEFAULT 127 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v54 BEGIN DELETE FROM v70; END; 
ALTER TABLE v54 RENAME TO v76; 
INSERT INTO v76 VALUES ( 127, 127 ), ( 18446744073709551488, 127 ), ( 127, 18446744073709551488 ), ( 127, 100 ), ( 127, 21 ); 
ATTACH c39 AS sqlite_master; 
UPDATE v76 SET c65 = 'v0' WHERE c64 = 127; 
WITH v77 AS ( SELECT c65 FROM v77 AS a79 WHERE c56 NOT LIKE 'v0' ORDER BY 18446744073709551615 ) SELECT * FROM v77 AS a78 ORDER BY 18446744073709551488; 
SELECT a80.c9, a80.c62 FROM v76 AS a80 RIGHT JOIN v31 AS a81 ON a80.c65 = a80.c55 WHERE a81.c38 = + y ( a80.c58 ) ORDER BY CASE WHEN a80.c64 != 'v1' THEN 127 ELSE 127 END; 
SELECT * FROM v76 AS a82 GROUP BY a82.c28 HAVING count ( * ) >= 127 ORDER BY 127; 
SELECT * FROM v70 AS a83 NATURAL JOIN v76 AS a84 ORDER BY 100; 
WITH v76 AS ( WITH v3 AS ( SELECT 127 y ORDER BY 9223372036854775807 ) SELECT avg ( a85.c58 ) FROM ( SELECT * ORDER BY 127 ) AS y ORDER BY 255 ) SELECT a85.c61 = + a85.c58, a85.c65 FROM v76 AS a85 LEFT JOIN v3 AS a86 ON a85.c59 = a86.c27 ORDER BY 255; 
SELECT * FROM v76 AS a87 WHERE ( a87.c9 = 127 OR a87.c28 = 18446744073709551615 ) AND a87.c55 NOT IN ( SELECT a87.c51 FROM ( SELECT a88.c2 FROM v0 AS a88 ORDER BY 18446744073709551488 ) AS y WHERE a87.c60 = 127 ORDER BY 18446744073709551615 ) ORDER BY 18446744071562067968; 
SELECT * FROM v3 AS a89 ORDER BY ( ( a89.c30 + 127 ) % 255 ) < 127; 
SELECT * FROM v76 AS a90 GROUP BY a90.c62 HAVING automatic_index ( * ) >= 18446744071562067968 ORDER BY 127; 
SELECT * FROM v70 AS a91 GROUP BY a91.c73, abs ( a91.c73 ) HAVING CASE WHEN a91.c75 != 'x' THEN 100 ELSE 18446744073709551615 END > 255 >= 18446744073709551488 ORDER BY 100; 
SELECT * FROM v0 AS a92 ORDER BY 1; 
