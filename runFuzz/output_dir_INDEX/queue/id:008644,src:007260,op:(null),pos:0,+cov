CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c2 UNIQUE ON CONFLICT IGNORE, c3 UNIQUE ON CONFLICT FAIL ); 
CREATE INDEX i4 ON v0 ( c2 ); 
INSERT INTO v0 ( c3, c1, c2 ) VALUES ( 18446744073709551488, 4294967295, 4294967295 ), ( 2147483647, 2147483647, 2147483647 ); 
INSERT INTO v0 ( c1, c3, c2 ) VALUES ( 2147483647, 2147483647, 18446744073709551488 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
INSERT INTO v0 ( c1, c2, c1 ) VALUES ( 2147483647, 2147483647, 4294967295 ), ( 18446744073709551615, 2147483647, 2147483647 ) ON CONFLICT ( c3 ) DO UPDATE SET c3 = c1, c1 = y ( c2 ); 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
SELECT a9.c3 y, a10.c3 FROM v0 AS a9 LEFT JOIN v0 AS a10 ON a9.c1 = a10.c2 ORDER BY 2147483647; 
WITH v0 AS ( SELECT hex ( ) y ORDER BY 4294967295 ) SELECT * FROM v0 AS a11 ORDER BY 2147483647; 
SELECT * FROM v0 AS a12 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a13 GROUP BY a13.c2, abs ( a13.c1 ) HAVING CASE WHEN a13.c1 != 'x' THEN 2147483647 ELSE 2147483647 END > 4294967295 >= 4294967295 ORDER BY 4294967295; 
SELECT a14.c1, a15.c3 FROM v0 AS a14 RIGHT JOIN v0 AS a15 ON a15.c2 = a15.c3 WHERE a15.c3 IS 4294967295 ORDER BY 4294967295; 
SELECT max ( a16.c1 || a16.c3 ) FROM v0 AS a16 ORDER BY 2147483647; 
SELECT * FROM v0 AS a17 NATURAL JOIN v0 AS a18 ORDER BY 0; 
SELECT * FROM v0 AS a19 ORDER BY 0; 
SELECT c1, count ( ( NOT ( c3 IS NULL ) ) AND ( NOT ( c1 IS NULL ) ) ) ORDER BY 0; 
SELECT * FROM v0 AS a20, v0 AS a21 ORDER BY 2147483647; 
