CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v5 VALUES ( 4294967295, 'v1' ), ( 4294967295, 'v0' ), ( 4294967295, 'v0' ); 
CREATE INDEX i9 ON v5 ( c2 ); 
INSERT INTO v0 SELECT CASE WHEN c2 % 18446744073709551488 != 4294967295 THEN c8 END, c1, c2 FROM v5 AS a10 WHERE c8 <= 4294967295 ORDER BY 4294967295; 
CREATE INDEX i11 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v5 BEGIN DELETE FROM v0 WHERE c2 = c2; END; 
CREATE INDEX i12 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v13; 
UPDATE v13 SET c2 = 'v1' WHERE c2 = 18446744073709551488; 
SELECT * FROM v5 AS a14 ORDER BY max ( a14.c8 + a14.c6 * 16 ) + 4294967295, min ( a14.c2, avg ( a14.c2 ) ) + 16; 
SELECT * FROM v13 AS a15, v13 AS a16 ORDER BY 8; 
SELECT * FROM v13 AS a17 GROUP BY 4294967295 ORDER BY 16; 
SELECT * FROM v13 AS a18 ORDER BY 4294967295; 
SELECT a20.c1, a20.c2 FROM v13 AS a19 LEFT JOIN v13 AS a20 ON a19.c2 = a19.c2 y ORDER BY 4294967295; 
SELECT * FROM v5 AS a21 GROUP BY y ( a21.c8 ) ORDER BY 4294967295; 
SELECT * ORDER BY 4294967295; 
SELECT a22.c6, max ( a22.c8 || a22.c7 ) FROM v5 AS a22 ORDER BY 8; 
WITH v23 ( c25 ) AS ( SELECT 4294967295 ORDER BY 4294967295 ) SELECT * FROM v23 AS a24 ORDER BY 4294967295; 
SELECT a26.c1 AS y, a26.c1 || a26.c1 AS y FROM v13 AS a26 WHERE + a26.c1 = 'v0' ORDER BY 18446744073709551488; 
