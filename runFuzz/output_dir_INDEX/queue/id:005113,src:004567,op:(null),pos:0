CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v3 ( c6 ); 
CREATE INDEX i9 ON v3 ( c5 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 'x' ), ( 18446744073709551615, 'v0' ), ( 18446744073709551615, 'v1' ); 
INSERT OR REPLACE INTO v3 VALUES ( 18446744073709551615, 16, 16 ), ( 18446744073709551615, 18446744073709551615, 16 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ); 
VALUES ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 8, 18446744073709551615, 18446744073709551615 ) ORDER BY 1; 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
ALTER TABLE v3 RENAME TO v11; 
CREATE INDEX i12 ON v0 ( c1 ); 
SELECT a13.c2, max ( a13.c1 || a13.c1 ) FROM v0 AS a13 ORDER BY 18446744073709551615; 
SELECT * FROM v11 AS a14 ORDER BY 18446744073709551615; 
SELECT a15.c5, count ( ( NOT ( a15.c5 IS NULL ) ) AND ( NOT ( a15.c5 IS NULL ) ) ) FROM v11 AS a15 ORDER BY 18446744073709551615; 
SELECT count ( a16.c2 ) FROM v11 AS a16 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a17 ORDER BY 1; 
WITH RECURSIVE v18 AS ( SELECT c1 FROM v18 AS a20 WHERE c1 LIKE 'v1' ORDER BY 18446744073709551615 ) SELECT * FROM v18 AS a19 ORDER BY 18446744073709551615; 
WITH v21 AS ( SELECT 127 y ORDER BY 4294967295 ) SELECT c4 % 18446744073709551615, c1 / 127, c2, printf ( 'v1', c2 ) FROM v21 AS a22 ORDER BY 10; 
SELECT * FROM v11 AS a23 ORDER BY 1; 
SELECT * FROM ( SELECT 18446744073709551615 ORDER BY 127 ) AS y, ( SELECT 18446744073709551615 ORDER BY 18446744073709551488 ) AS y ON likely ( 18446744073709551615 OR 18446744073709551615 ) IS 127 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a24 ORDER BY a24.c1 COLLATE nocase; 
