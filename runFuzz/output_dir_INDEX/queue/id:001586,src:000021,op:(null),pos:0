CREATE TABLE v0 ( c1, c2, c3 DEFAULT 18446744071562067968, CHECK( ( ( c3 + 18446744073709551488 ) % 18446744073709551488 ) != 18446744073709551488 ) ) WITHOUT ROWID; 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c3 ); 
ALTER TABLE v0 DROP c1; 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c3 ); 
SELECT * ORDER BY 127; 
SELECT * ORDER BY 18446744073709551488; 
SELECT a9.c1, a9.c2 FROM v0 AS a9 LEFT JOIN v0 AS a10 ON a9.c1 = a9.c2 ORDER BY max ( a10.c3 + a10.c3 * 18446744073709551488 ) + 18446744073709551488, min ( a9.c2, avg ( a10.c3 ) ) + 18446744073709551488; 
SELECT * FROM v0 AS a11 WHERE a11.c3 = 18446744073709551488 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a12 WHERE a12.c3 NOT NULL ORDER BY 18446744073709551615; 
SELECT a14.c1, count ( a14.c1 ) FROM v0 AS a13, v0 AS a14 WHERE a13.c1 = a13.c1 GROUP BY y ( a14.c2 ) ORDER BY 255; 
SELECT * FROM v0 AS a15 ORDER BY a15.c1, a15.c2, a15.c2; 
SELECT * ORDER BY 18446744071562067968; 
SELECT * FROM ( v0 AS a16 ), ( v0 AS a17 ), ( v0 AS a18 ), ( v0 AS a19 ) WHERE a17.c1 = a19.c1 + 18446744073709551488 AND a19.c3 = a16.c2 + 127 AND a19.c2 = a19.c1 + 18446744073709551488 ORDER BY 255; 
SELECT a20.c3, count ( ( NOT ( a20.c2 IS NULL ) ) AND ( NOT ( a20.c1 IS NULL ) ) ) FROM v0 AS a20 WHERE ( CASE WHEN a20.c2 != 'aBc3' THEN 18446744073709551488 ELSE 18446744071562067968 END ) GROUP BY 18446744071562067968 ORDER BY 255 COLLATE hex; 
