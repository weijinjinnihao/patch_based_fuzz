CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v4 VALUES ( '$long', 18446744073709551488, 0 ); 
INSERT INTO v4 VALUES ( 127, 127, 127 ), ( 16, 127, 127 ), ( 127, 16, 127 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v4 WHERE c1 = c2; END; 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
CREATE INDEX i10 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v11; 
CREATE VIEW v12 AS SELECT max ( c2 || c2 ), c1 FROM v11 AS a13 LEFT JOIN v11 AS a14 ON c2 = c2 GROUP BY c1, abs ( c2 ) ORDER BY 16; 
UPDATE v11 SET c1 = 'x' WHERE c2 = 127; 
SELECT * FROM v4 AS a15 ORDER BY 127; 
VALUES ( 127, 16, 8 ), ( 127, 18446744073709551488, 18446744073709551615 ), ( 127, x'b1', 18446744073709551615 ) ORDER BY 18446744073709551488; 
SELECT a16.c2, count ( ( NOT ( a16.c1 IS NULL ) ) AND ( NOT ( a16.c2 IS NULL ) ) ) FROM v11 AS a16 ORDER BY 8; 
SELECT * FROM v12 AS a17 ORDER BY ( CASE WHEN a17.y != 'DEF' THEN 0 ELSE 16 END ); 
SELECT a18.c1, max ( a18.c1 || a18.c2 ) FROM v11 AS a18 ORDER BY 18446744073709551488; 
SELECT * FROM v11 AS a19, v11 AS a20 ORDER BY 4294967295; 
WITH RECURSIVE v12 AS ( SELECT 127 y ORDER BY 127 ) SELECT * FROM v12 AS a21 ORDER BY 18446744073709518848; 
SELECT * FROM v11 AS a22 ORDER BY 16; 
SELECT * FROM v11 AS a23 ORDER BY 10; 
SELECT * FROM v4 AS a24 ORDER BY 127; 
