PRAGMA foreign_keys = 6; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY ); 
PRAGMA quick_check = 10; 
CREATE INDEX i2 ON v0 ( c1 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 16 ); 
INSERT INTO v0 VALUES ( 16 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
CREATE TABLE v5 ( c6 INTEGER REFERENCES t1 ( c6 ) ); 
INSERT INTO v5 VALUES ( 16 ); 
INSERT INTO v5 VALUES ( 16 ); 
DELETE FROM v5 WHERE c6 = 16; 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v0 ( c1 ); 
SELECT a9.c1, max ( a9.c1 || a9.c1 ) FROM v0 AS a9 ORDER BY 16; 
SELECT * FROM v5 AS a10 ORDER BY 16; 
SELECT max ( a11.c1 || a11.c1 ) FROM v0 AS a11 ORDER BY 18446744071562067968; 
SELECT * FROM v5 AS a12 ORDER BY a12.c6 COLLATE binary; 
SELECT a13.c1, a13.c1 FROM v0 AS a13 RIGHT JOIN v0 AS a14 ON a13.c1 = 16 ORDER BY 0; 
SELECT * FROM v5 AS a15, v5 AS a16 ORDER BY 16; 
SELECT * FROM v5 AS a17 ORDER BY 16; 
SELECT * ORDER BY 16; 
WITH v5 ( c19 ) AS ( SELECT 16 ORDER BY 16 ) SELECT * FROM v0 AS a18 ORDER BY 16; 
SELECT count ( ( NOT ( a20.c1 IS NULL ) ) AND ( NOT ( a20.c1 IS NULL ) ) ) FROM v0 AS a20 ORDER BY 16; 
