CREATE TABLE v0 ( c1 TEXT NOT NULL, c2 TEXT NOT NULL ON CONFLICT REPLACE, c3 TEXT, PRIMARY KEY ( c2, c2, c2, c2, c1, c1, c3, c3, c2, c1 ), CONSTRAINT y UNIQUE ( c1, c2, c2, c1, c2, c3, c3, c3 ) ); 
INSERT INTO v0 VALUES ( 100, 'v0', 'x' ); 
INSERT INTO v0 VALUES ( 100, 'v1', 'v0' ); 
CREATE INDEX i4 ON v0 ( c2 ); 
UPDATE v0 SET c3 = zeroblob ( 100 ); 
CREATE TABLE v5 ( c6, c7 INTEGER DEFAULT 100, c8 REFERENCES p1 ( c6 ) ); 
INSERT INTO v0 VALUES ( 'v1', 'x', 'v0' ); 
INSERT INTO v0 VALUES ( x'616263', 'v0', '$long' ); 
CREATE TABLE v9 ( c10, c11, c12 COLLATE NOCASE ); 
INSERT INTO v0 VALUES ( 100, 100, 16 ), ( 100, 18446744073709551615, 100 ), ( 18446744073709551488 = '1.2', 100, 100 ); 
CREATE INDEX i13 ON v9 ( c10 ); 
INSERT INTO v5 VALUES ( 'x', 'x', 'maggy' ) ON CONFLICT ( c8 ) DO UPDATE SET c8 = c6, c8 = c6; 
CREATE INDEX i14 ON v9 ( c10 ); 
INSERT INTO v5 VALUES ( c6 > 18446744073709551615, 'v1', 'v0' ); 
INSERT INTO v9 VALUES ( - 100, 'v1', '2GAT123' ); 
CREATE INDEX i15 ON v0 ( c2 ); 
CREATE TABLE v16 ( c17, c18, c19 COLLATE NOCASE ); 
INSERT INTO v5 SELECT * FROM v0 AS a20 ORDER BY 100; 
UPDATE v0 SET c3 = zeroblob ( 100 ); 
CREATE INDEX i21 ON v9 ( c12 ); 
INSERT INTO v9 SELECT * FROM v9 AS a22 ORDER BY 100 ON CONFLICT ( c11 NOT NULL ) DO UPDATE SET c11 = c11, c12 = c10; 
INSERT INTO v16 SELECT c11, c17 FROM v0 AS a23 RIGHT JOIN v9 AS a24 ORDER BY 18446744073709551615; 
INSERT INTO v9 SELECT * FROM v5 AS a25 ORDER BY 18446744071562067968; 
WITH v5 ( c27 ) AS ( WITH v0 ( c28 ) AS ( WITH v29 ( c30, c31, c32, c33, c34, c35 ) AS ( SELECT 100 y ORDER BY 100 ) SELECT 100 ORDER BY 100 ) SELECT 18446744073709551615 ORDER BY 18446744073709551615 ) SELECT * FROM v9 AS a26 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a36 GROUP BY a36.c2, abs ( a36.c1 ) HAVING CASE WHEN a36.c1 != 'z' THEN 18446744073709551615 ELSE 8 END > 18446744073709551615 >= 100 ORDER BY 100; 
SELECT a37.c12, count ( a37.c12 ) FROM v9 AS a37 ORDER BY 18446744073709551488; 
SELECT ( ( c18 + 100 ) % 8 ) == 100 ORDER BY 0; 
SELECT a38.c12 FROM v9 AS a38 ORDER BY 100 COLLATE hex; 
SELECT * FROM v16 AS a39, v16 AS a40 ORDER BY 8; 
SELECT * FROM v5 AS a41 ORDER BY 100; 
SELECT * FROM v0 AS a42, v16 AS a43 NATURAL JOIN v0 AS a44 ORDER BY 100; 
SELECT a45.c11, count ( a45.c11 ) FROM v9 AS a45 ORDER BY 18446744073709551488; 
SELECT * FROM v16 AS a46 WHERE ( ( SELECT * FROM v9 AS a47 WHERE a47.c10 = a47.c10 || a46.c19 ORDER BY 16 ) % 100 ) > 0 ORDER BY 18446744073709551488; 
