CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
CREATE INDEX i8 ON v4 ( c5 ); 
INSERT INTO v4 ( c7, c6 ) VALUES ( 0, 'v1' ), ( 8, 'c2' ), ( 0, 'v1' ); 
INSERT INTO v0 VALUES ( 10, 100, 100 ), ( 4294967295, 10, 0 ), ( 0, 100, ( ( c1 + 10 ) % 0 ) != 127 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v4 BEGIN DELETE FROM v4 WHERE c6 = c2; END; 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v4 RENAME TO v12; 
UPDATE v12 SET c5 = 'x' WHERE c7 = 10; 
SELECT * FROM v12 AS a13, v0 AS a14 ORDER BY 18446744073709551488; 
SELECT a15.c7, count ( a15.c5 ) FROM v12 AS a15 ORDER BY 0; 
SELECT * ORDER BY 8; 
SELECT * FROM v12 AS a16, v12 AS a17 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a18 WHERE ( a18.c5 = a18.c6 = 8 ) AND a18.c7 IN ( SELECT a18.c6 FROM ( SELECT a18.c6 FROM v12 AS a19 ORDER BY 18446744073709551615 ) AS y WHERE a18.c6 = 8 ORDER BY 0 ) ORDER BY 18446744073709551615; 
SELECT ( ( hex ( 255 ) ) % 18446744073709551615 ) ORDER BY 10; 
SELECT * FROM v12 AS a20 GROUP BY 10 ORDER BY 10; 
WITH v21 AS ( SELECT c1 FROM v21 AS a23 WHERE c6 LIKE 'v1' ORDER BY 8 ) SELECT * FROM v21 AS a22 ORDER BY 10; 
SELECT * FROM v12 AS a24 ORDER BY 100; 
WITH v25 AS ( SELECT 0 y ORDER BY 0 ) SELECT * FROM v25 AS a26 ORDER BY 0; 
