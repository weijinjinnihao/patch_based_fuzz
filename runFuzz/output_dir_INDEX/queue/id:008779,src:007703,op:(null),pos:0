CREATE TABLE v0 ( c1 INT, c2 INTEGER, c3 TEXT, c4 REAL, c5 BLOB ) STRICT; 
CREATE TABLE v6 ( c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19 INTEGER DEFAULT 'x', c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38 PRIMARY KEY, CHECK( ( ( c16 + 0 ) % 9223372036854775807 ) != 9223372036854775807 ) ) WITHOUT ROWID; 
CREATE TABLE v39 ( c40 INT NOT NULL, c41 INTEGER NOT NULL, c42 TEXT NOT NULL, c43 REAL NOT NULL, c44 BLOB NOT NULL ) STRICT; 
CREATE TABLE v45 ( c46 COLLATE NOCASE PRIMARY KEY ON CONFLICT REPLACE, c47 UNIQUE ON CONFLICT IGNORE, c48 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE TABLE v49 ( c50 INTEGER, c51 UNIQUE ON CONFLICT IGNORE, c52 UNIQUE ON CONFLICT FAIL, c53, c54, c55, c56 PRIMARY KEY, CHECK( ( ( c55 + 255 ) % 255 ) != 127 ) ) WITHOUT ROWID; 
INSERT INTO v0 ( c4, c5, c4, c2, c1 ) VALUES ( 0, 127, 'v0', 0, x'b1' ), ( 127, 255, 'x', 127, x'b2b2b2' ); 
CREATE INDEX i57 ON v6 ( c38 ); 
PRAGMA quick_check ( 'y' ); 
CREATE INDEX i58 ON v39 ( c43 ); 
PRAGMA integrity_check; 
CREATE INDEX i59 ON v45 ( c46 ); 
CREATE INDEX i60 ON v45 ( c46 ); 
PRAGMA quick_check ( 't1' ); 
UPDATE v49 SET c50 = ( SELECT c4 FROM v0 AS a61 WHERE c53 = 'hill' ORDER BY 0 ); 
CREATE INDEX i62 ON v6 ( c34 ); 
SELECT a63.c44 FROM v39 AS a63 ORDER BY 0; 
SELECT * FROM v6 AS a64 ORDER BY 255; 
SELECT * FROM v6 AS a65 ORDER BY 0; 
SELECT * FROM v39 AS a66 ORDER BY 0; 
SELECT a67.c44, a67.c44, count ( a67.c41 ) FROM v39 AS a67 ORDER BY 18446744073709551615; 
SELECT * FROM v39 AS a68 ORDER BY 0; 
SELECT * FROM v0 AS a69, v39 AS a70 NATURAL JOIN v45 AS a71 ORDER BY 18446744073709551615; 
WITH v6 AS ( SELECT a72.c5 FROM v6 AS a73 WHERE a72.c4 LIKE 'v1' ORDER BY 16 ) SELECT * FROM v0 AS a72 WHERE a72.c3 = v6.c13 ORDER BY 18446744073709551615; 
SELECT * FROM v45 AS a74 GROUP BY a74.c46, abs ( a74.c47 ) HAVING CASE WHEN a74.c47 != 'v1' THEN 255 ELSE 255 END > 8 >= 255 ORDER BY 255; 
SELECT * FROM v49 AS a75 GROUP BY a75.c51 HAVING count ( * ) >= 127 ORDER BY 16; 
