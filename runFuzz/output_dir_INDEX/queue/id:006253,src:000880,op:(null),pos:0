CREATE VIRTUAL TABLE v0 USING rtree ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c3 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 127, 'three-a' ), ( 127, 'three-a' ), ( 127, 'v1' ); 
INSERT INTO v0 VALUES ( 127, 127, 18446744073709518848 ), ( 127, 127, 127 ), ( 127, 127, 127 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c2 = c2; END; 
CREATE INDEX i6 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v7; 
CREATE INDEX i8 ON v7 ( c2 ); 
CREATE INDEX i9 ON v7 ( c2 ); 
UPDATE v7 SET c2 = 'v1' WHERE c2 = 127; 
SELECT * FROM v7 AS a10 ORDER BY a10.c3 COLLATE NOCASE; 
WITH v7 AS ( SELECT hex ( ) y ORDER BY 127 ) SELECT * FROM v7 AS a11 ORDER BY 127; 
SELECT * FROM v7 AS a12, v7 AS a13 ORDER BY 127; 
SELECT count ( ( NOT ( a14.c2 IS NULL ) ) AND ( NOT ( a14.c1 IS NULL ) ) ) FROM v7 AS a14 ORDER BY 127; 
SELECT * FROM v7 AS a15 WHERE ( CASE WHEN a15.c3 != '1.10' THEN 127 ELSE 127 END ) ORDER BY 127; 
SELECT * FROM v7 AS a16 WHERE a16.c2 > 18446744073709551488 ORDER BY 127; 
WITH RECURSIVE v17 AS ( SELECT c1 FROM v17 AS a19 WHERE c3 LIKE 'xyz%dabc' ORDER BY 18446744073709551488 ) SELECT * FROM v17 AS a18 WHERE c3 > 127 ORDER BY 10; 
SELECT * FROM v7 AS a20 ORDER BY 127; 
SELECT * FROM v7 AS a21 WHERE a21.c3 = 0 ORDER BY 127; 
SELECT a23.c3 FROM v7 AS a22 LEFT JOIN v7 AS a23 ON ( a23.c1 = a23.c1 AND a22.c1 = 'pear' ) LEFT JOIN v7 AS a24 ON ( a24.c3 = a24.c3 ) WHERE a23.c1 = 'v0' ORDER BY 18446744073709551488; 
