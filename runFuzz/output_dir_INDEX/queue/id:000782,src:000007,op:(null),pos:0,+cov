CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v5 VALUES ( 18446744071562067968, 'v1' ), ( 18446744071562067968, 'B' ), ( 18446744071562067968, 'three-c' ); 
CREATE INDEX i9 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 18446744071562067968, 18446744071562067968, 18446744071562067968 ), ( 0, 0, 0 ), ( 10, 0, 18446744071562067968 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v5 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
CREATE INDEX i10 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v11; 
UPDATE v5 SET c6 = 'x' WHERE c6 = 0; 
SELECT * FROM v5 AS a12 ORDER BY max ( a12.c7 + a12.c2 * 0 ) + 0, min ( a12.c8, avg ( a12.c8 ) ) + 0; 
SELECT * FROM v5 AS a13, v11 AS a14 ORDER BY 10; 
SELECT * FROM v11 AS a15 GROUP BY 10 ORDER BY 10; 
SELECT * FROM v5 AS a16 ORDER BY 0; 
SELECT a18.c1, a18.c1 FROM v5 AS a17 LEFT JOIN v11 AS a18 ON a17.c2 = a17.c6 y ORDER BY 127; 
SELECT * FROM v11 AS a19 GROUP BY y ( a19.c2 ) ORDER BY 0; 
SELECT * ORDER BY 10; 
SELECT a20.c2, max ( a20.c6 || a20.c8 ) FROM v5 AS a20 ORDER BY 0; 
WITH v21 ( c23 ) AS ( SELECT 2147483647 ORDER BY 10 ) SELECT * FROM v21 AS a22 ORDER BY 10; 
SELECT a24.c2 AS y, a24.c1 || a24.c1 AS y FROM v11 AS a24 WHERE + a24.c1 = 'one-c' ORDER BY 18446744073709551488; 
