CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
CREATE TABLE v8 ( c9 INTEGER CHECK( typeof ( coalesce ( c9, 10 ) ) == c10 ), c10 NUMERIC CHECK( typeof ( coalesce ( c10 NOT NULL, 10 ) ) == 'v0' ), c11 TEXT CHECK( typeof ( coalesce ( c10, 'four' ) ) == 'v1' ) ); 
VALUES ( 10, 'v1' ), ( 10, 'v0' ), ( 0, 'v0' ) ORDER BY 1; 
CREATE INDEX i12 ON v0 ( c2 ); 
INSERT INTO v8 VALUES ( 10, 10, 18446744073709551615 ), ( 10, 8, 0 ), ( 100, 10, 4294967295 ); 
CREATE INDEX i13 ON v8 ( c9 ); 
BEGIN; 
CREATE INDEX i14 ON v0 ( c1 ); 
CREATE INDEX i15 ON v8 ( c11 ); 
DELETE FROM v8 WHERE c9 = c10; 
END; 
ALTER TABLE v4 RENAME TO v16; 
UPDATE v8 SET c10 = 'real' WHERE c10 = 0; 
SELECT * FROM v8 AS a17, v0 AS a18 ORDER BY 0; 
SELECT * FROM v8 AS a19, v8 AS a20 NATURAL JOIN v0 AS a21 ORDER BY 10; 
SELECT a22.c6 FROM v16 AS a22 ORDER BY 10; 
SELECT * FROM v16 AS a23 WHERE a23.c7 > 18446744073709551615 ORDER BY 10; 
SELECT * FROM v0 AS a24 ORDER BY ( a24.c2 + 0 ) % count ( a24.c2 ); 
SELECT * ORDER BY 10; 
SELECT a25.c2, UTF16le ( a25.c1 ) AS y FROM v0 AS a25 GROUP BY a25.c2 ORDER BY 10; 
SELECT * FROM v16 AS a26 WHERE a26.c7 IS NOT NULL >= 8 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a27 WHERE a27.c2 NOT NULL ORDER BY 18446744073709551488; 
SELECT a28.c2, count ( * ), avg ( a28.c2 ), max ( a28.c1 + a28.c2 * 127 ) FROM v0 AS a28 ORDER BY 10; 
