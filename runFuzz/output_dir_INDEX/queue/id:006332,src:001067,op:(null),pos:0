CREATE TABLE v0 ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 9223372036854775807, 9223372036854775807, 9223372036854775807 ), ( 9223372036854775807, 9223372036854775807, 9223372036854775807 ); 
CREATE INDEX i5 ON v0 ( ( c2 + 9223372036854775807 ) > 9223372036854775807 ); 
INSERT INTO v0 VALUES ( 9223372036854775807, 9223372036854775807, 9223372036854775807 ); 
ALTER TABLE v0 ADD COLUMN c6; 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE INDEX i8 ON v0 ( c6 ); 
PRAGMA integrity_check; 
CREATE INDEX i9 ON v0 ( c3 ); 
SELECT ( ( c2 + 18446744071562067968 ) % 9223372036854775807 ) != 9223372036854775807 ORDER BY 9223372036854775807; 
SELECT a10.c3, count ( * ), avg ( a10.c1 ), max ( a10.c1 + a10.c2 * 10 ) FROM v0 AS a10 ORDER BY 9223372036854775807; 
SELECT * FROM v0 AS a11, v0 AS a12 ORDER BY 9223372036854775807; 
SELECT a14.c2, count ( ( NOT ( a13.c1 IS NULL ) ) AND ( NOT ( a13.c2 IS NULL ) ) ), count ( ( hex ( 100 ) ) % 9223372036854775807 AND ( NOT ( a13.c1 IS NULL ) ) ) FROM v0 AS a13 LEFT JOIN v0 AS a14 ON a14.c3 = a13.c2 ORDER BY 9223372036854775807; 
SELECT * FROM v0 AS a15 ORDER BY 9223372036854775807 COLLATE binary, 18446744071562067968 COLLATE hex; 
SELECT * FROM v0 AS a16 ORDER BY 16; 
SELECT count ( ( NOT ( a17.c3 IS NULL ) ) AND ( NOT ( a17.c1 IS NULL ) ) ) FROM v0 AS a17 ORDER BY 16; 
SELECT * FROM v0 AS a18 ORDER BY 255; 
SELECT * FROM v0 AS a19, v0 AS a20 NATURAL JOIN v0 AS a21 ORDER BY 2147483647; 
SELECT * FROM v0 AS a22, v0 AS a23 NATURAL JOIN v0 AS a24 ORDER BY 18446744071562067968; 
