CREATE TABLE v0 ( c1 PRIMARY KEY, c2 REAL ); 
CREATE VIEW v3 AS SELECT min ( c1 ), min ( c1 ), max ( c1 ), max ( c2 ), sum ( c2 ), sum ( c1 ), avg ( c2 ), avg ( c2 ) FROM v0 AS a4 NATURAL JOIN v0 AS a5 GROUP BY x'616263', 'v1', c2 = + c1 HAVING count ( * ) >= 18446744073709518848 ORDER BY 18446744073709518848; 
CREATE VIEW v6 AS SELECT c2, c2 FROM v0 AS a7, v3 AS a8 NATURAL JOIN v0 AS a9 ORDER BY 18446744073709518848; 
CREATE VIEW v10 AS SELECT c1, c1 FROM v3 AS a11 LEFT JOIN v0 AS a12 ON c1 = c2 ORDER BY 18446744073709551488; 
CREATE VIEW v13 AS SELECT c2, c2 FROM v6 AS a14 RIGHT JOIN v0 AS a15 ON c1 = c1 ORDER BY 127; 
CREATE VIEW v16 AS SELECT c1, count ( c1 ), c2 FROM v3 AS a17 RIGHT JOIN v3 AS a18 ON c2 = c2 ORDER BY 0; 
INSERT INTO v13 ( c2 ) VALUES ( 0 ); 
INSERT INTO v10 ( c2 ) VALUES ( 0 ); 
INSERT INTO v16 ( c2, c2 ) VALUES ( 8, 0 ); 
CREATE INDEX i19 ON v3 ( c1 ); 
CREATE INDEX i20 ON v10 ( c2 ); 
CREATE INDEX i21 ON v13 ( c2 ); 
CREATE INDEX i22 ON v0 ( c1 ); 
PRAGMA automatic_index = 5; 
CREATE INDEX i23 ON v3 ( c2 ); 
SELECT * FROM v16 AS a24 ORDER BY ( a24.c2 || a24.c2 || a24.c2 ) != 'v0'; 
SELECT a25.c1, count ( ( NOT ( a26.c2 IS NULL ) ) AND ( NOT ( a26.c1 IS NULL ) ) ), count ( ( NOT ( a25.c2 IS NULL ) ) AND ( NOT ( a25.c1 IS NULL ) ) ) FROM v0 AS a25 LEFT JOIN v3 AS a26 ON a26.c2 = 'v0' ORDER BY 0; 
VALUES ( 'x' ) ORDER BY 18446744071562067968; 
SELECT a27.c1, count ( ( NOT ( a27.c2 IS NULL ) ) AND ( NOT ( a27.c2 IS NULL ) ) ) FROM v16 AS a27 ORDER BY 0; 
SELECT * FROM v13 AS a28 ORDER BY ( ( a28.c2 + 0 ) % 0 ); 
SELECT a29.c2 * 0 + 0 AS y, count ( * ) AS y FROM v0 AS a29 ORDER BY 18446744073709518848; 
SELECT count ( ( NOT ( a30.c2 IS NULL ) ) AND ( NOT ( a30.c2 IS NULL ) ) ), a30.c2 + 0, count ( ( NOT ( a31.c2 IS NULL ) ) AND ( NOT ( a31.c2 IS NULL ) ) ) FROM v10 AS a30 LEFT JOIN v13 AS a31 ON a31.c2 = a30.c2 ORDER BY 0; 
SELECT * FROM v6 AS a32 ORDER BY 0 NOT IN v6; 
WITH v33 AS ( SELECT 18446744071562067968 y ORDER BY 18446744073709518848 ) SELECT * FROM v33 AS a34 ORDER BY 0; 
SELECT * FROM v16 AS a35 ORDER BY a35.c2 || a35.c2 || a35.c1; 
