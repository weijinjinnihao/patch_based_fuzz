CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 'x' ), ( 0, 'x' ), ( 39136, 'v1' ); 
CREATE INDEX i7 ON v3 ( c2 ); 
ALTER TABLE v0 DROP COLUMN c2; 
CREATE INDEX i8 ON v3 ( c2 ); 
BEGIN; 
INSERT INTO v3 VALUES ( 18446744073709518848, 0, 18446744073709518848 ), ( 18446744073709518848, 39136, 0 ), ( 39136, 18446744073709551615, 8 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c2 = c6; END; 
ALTER TABLE v3 RENAME TO v9; 
CREATE INDEX i10 ON v9 ( c4 ); 
CREATE INDEX i11 ON v9 ( c6 ); 
UPDATE v9 SET c1 = 'v1' WHERE c2 = 18446744073709551615; 
SELECT * FROM v9 AS a12 ORDER BY 1; 
SELECT ( SELECT min ( ) OVER ( ORDER BY 0 ) ORDER BY 1234 ) FROM v9 AS a13 GROUP BY y ( a13.c2 ) ORDER BY 18446744073709518848; 
WITH RECURSIVE v9 ( c15 ) AS ( SELECT 18446744073709551615 ORDER BY 1234 ) SELECT c15, max ( a14.c1 || a14.c2 ) FROM v0 AS a14 WHERE ( v9.c1 || c15 || c15 ) != 'v1' ORDER BY 0; 
SELECT * FROM v9 AS a16 GROUP BY a16.c6, a16.c1 < a16.c2 ORDER BY 2147483647; 
SELECT * FROM v9 AS a17 ORDER BY CASE WHEN a17.c2 != 'two' THEN 18446744073709551615 ELSE 0 END; 
WITH v18 ( c20 ) AS ( SELECT 'ABC' ORDER BY 0 ) SELECT * FROM v18 AS a19 ORDER BY ( c20 + 39136 ) % count ( c20 ); 
SELECT * FROM v0 AS a21 WHERE a21.c2 = a21.c2 || a21.c1 ORDER BY 39136; 
SELECT * FROM v9 AS a22 NATURAL JOIN v9 AS a23 ORDER BY 39136; 
SELECT * FROM v0 AS a24 ORDER BY 4294967295; 
SELECT * FROM v9 AS a25 WHERE a25.c2 = - 39136 ORDER BY 18446744073709551488; 
