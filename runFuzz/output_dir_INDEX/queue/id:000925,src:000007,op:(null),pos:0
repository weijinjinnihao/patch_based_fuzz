CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v5 USING rtree ( c6, c7, c8 ); 
INSERT INTO v5 VALUES ( 0, 'v0' ), ( 0, 'v0' ), ( 0, 'v0' ); 
CREATE INDEX i9 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 0, 0, 0 ), ( 0, 0, 0 ), ( 0, 0, 0 ); 
CREATE INDEX i10 ON v5 ( c7 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v5 WHERE c7 = c1; END; 
CREATE INDEX i11 ON v0 ( c2 ); 
ALTER TABLE v0 RENAME TO v12; 
UPDATE v5 SET c1 = 0; 
SELECT * FROM v12 AS a13 ORDER BY max ( a13.c1 + a13.c1 * 0 ) + 18446744073709551615, min ( a13.c1, avg ( a13.c2 ) ) + 0; 
SELECT * FROM v12 AS a14, v12 AS a15 ORDER BY 0; 
SELECT * FROM v5 AS a16 GROUP BY 0 ORDER BY 0; 
SELECT * FROM v5 AS a17 ORDER BY 18446744073709518848; 
SELECT a18.c1, a18.c1 FROM v5 AS a18 LEFT JOIN v12 AS a19 ON a18.c6 = a18.c8 y ORDER BY 0; 
SELECT * FROM v12 AS a20 GROUP BY y ( a20.c2 ) ORDER BY 0; 
SELECT * ORDER BY 18446744071562067968; 
SELECT a21.c1, max ( a21.c1 || a21.c2 ) FROM v12 AS a21 ORDER BY 0; 
WITH v22 ( c24 ) AS ( SELECT 0 ORDER BY 255 ) SELECT * FROM v22 AS a23 ORDER BY 0; 
SELECT a25.c2 AS y, a25.c2 || a25.c2 AS y FROM v12 AS a25 WHERE + a25.c1 = 'xyz%dabc' ORDER BY 0; 
