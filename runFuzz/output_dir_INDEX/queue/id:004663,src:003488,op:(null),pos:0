CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 'v0' ), ( 18446744073709551615, 'v1' ), ( 18446744073709551615, 'XX' ); 
INSERT INTO v0 VALUES ( 18446744071562067968, 0, 0 ), ( 18446744073709551488, 18446744073709551615, 18446744071562067968 ), ( 18446744073709551615, 18446744071562067968, 1.200000 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v3 ( c4 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3; END; 
CREATE INDEX i9 ON v3 ( c5 ); 
ALTER TABLE v3 RENAME TO v10; 
CREATE INDEX i11 ON v10 ( c2 ); 
UPDATE v10 SET c4 = 'x' WHERE c4 = 16; 
SELECT * FROM v10 AS a12 WHERE a12.c4 = a12.c6 ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a13 WHERE a13.c4 != 18446744073709551615 ORDER BY 18446744071562067968; 
SELECT count ( a14.c2 ) FROM v10 AS a14 ORDER BY 18446744071562067968; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a15, v10 AS a16 ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a17 ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a18, v10 AS a19 ORDER BY 18446744073709551615; 
SELECT ( CASE WHEN a20.c4 = 0 THEN 18446744073709551488 ELSE ( a20.c6 + 255 ) / 18446744071562067968 END ) AS y, count ( * ) FROM v10 AS a20 ORDER BY 18446744073709551615; 
SELECT * FROM v10 AS a21 ORDER BY 18446744073709551615; 
SELECT lower ( a22.c2 ) FROM v0 AS a22, v10 AS a23 ORDER BY 18446744073709551615; 
