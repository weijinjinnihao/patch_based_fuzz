CREATE TABLE v0 ( c1, c2 ); 
PRAGMA quick_check = 10; 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE INDEX i5 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( '3', 18446744073709551615 ); 
CREATE INDEX i6 ON v0 ( c2 ); 
INSERT INTO v0 VALUES ( 'x', 0 ); 
SELECT * FROM v0 AS a7 LEFT JOIN ( SELECT count ( * ) AS y, a9.c2 FROM ( v0 AS a8 INNER JOIN v0 AS a9 ON a8.c1 = a8.c1 ) AS y WHERE a8.c1 > 18446744071562067968 GROUP BY a9.c1 ORDER BY 18446744073709551615 ) AS y ON a7.c2 = y ( a7.c2 ) ORDER BY 1; 
VALUES ( 18446744071562067968, 0, - 18446744073709551615 ), ( 100, 18446744073709551488, 100 ), ( 4294967295, 4294967295, 18446744073709551615 ) ORDER BY 1; 
INSERT INTO v0 VALUES ( 'v0', 18446744071562067968 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
SELECT 18446744071562067968 IN ( SELECT * FROM v0 AS a11 ORDER BY 18446744071562067968 ) ORDER BY 18446744073709551615; 
SELECT count ( a12.c1 ) FROM v0 AS a12 ORDER BY 18446744073709551615; 
SELECT a14.c2 COLLATE binary FROM v0 AS a13, v0 AS a14 NATURAL JOIN v0 AS a15 ORDER BY 0; 
SELECT * FROM v0 AS a16 GROUP BY a16.c2 HAVING count ( * ) >= 0 ORDER BY 0; 
SELECT a17.c2 FROM v0 AS a17 ORDER BY 100; 
SELECT 4294967295 AS y, 0 AS y ORDER BY c1; 
SELECT a18.c1, max ( a18.c2 || a18.c1 ) FROM v0 AS a18 ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a19 ORDER BY max ( a19.c1 + a19.c2 * 0 ) + 18446744073709551615; 
SELECT * ORDER BY 18446744071562067968; 
SELECT * FROM v0 AS a20 LEFT JOIN ( SELECT count ( * ) AS y, a21.c1 FROM ( v0 AS a21 INNER JOIN v0 AS a22 ON a21.c1 = a21.c1 ) AS y WHERE a20.c1 > 18446744071562067968 GROUP BY a21.c2 ORDER BY 18446744071562067968 ) AS y ON a20.c1 = a20.c1 y ORDER BY 18446744071562067968; 
