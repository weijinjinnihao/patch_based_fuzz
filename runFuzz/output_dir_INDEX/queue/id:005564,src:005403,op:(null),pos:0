CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE TABLE v7 ( c8, c9 INTEGER UNIQUE ON CONFLICT FAIL, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43 DEFAULT 18446744073709551615 DEFAULT 0, c44, c45, c46, c47 INTEGER PRIMARY KEY, c48 ); 
CREATE INDEX i49 ON v3 ( c6 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v7 BEGIN WITH v7 AS ( SELECT 0 y ORDER BY 0 ) SELECT ( SELECT min ( c2 ) OVER ( ORDER BY 16 ) ORDER BY 4294967295 ) FROM v0 AS a50 GROUP BY c2 ORDER BY 1; END; 
CREATE INDEX i51 ON v7 ( c14 ); 
INSERT INTO v3 VALUES ( ( ( c2 + 16 ) % 16 ) < 16, 'x', 'v1' ); 
CREATE INDEX i52 ON v7 ( c46 ); 
ALTER TABLE v3 RENAME TO v53; 
CREATE INDEX i54 ON v53 ( c6 ); 
UPDATE v0 SET c1 = 'four' WHERE c2 = 2147483647; 
CREATE INDEX i55 ON v53 ( c5 ); 
SELECT * FROM v0 AS a56 ORDER BY 4294967295; 
SELECT a57.c1 FROM v0 AS a57 ORDER BY 0; 
SELECT * FROM v0 AS a58 ORDER BY 0 - ( a58.c1 + a58.c2 ); 
SELECT a59.c5, count ( a59.c4 ) FROM v53 AS a59, v53 AS a60 WHERE a59.c5 = + a59.c5 ORDER BY 16; 
SELECT * FROM v53 AS a61 WHERE a61.c6 = a61.c5 || a61.c6 ORDER BY 10; 
SELECT a63.c6, a63.c2 FROM v53 AS a62 LEFT JOIN v53 AS a63 ON a62.c2 = a62.c5 y ORDER BY 16; 
WITH v64 ( c66 ) AS ( SELECT c66 + ( SELECT max ( c66 ) FROM v64 AS a70 ORDER BY 0 ), c66 + ( SELECT c66 FROM v64 AS a69 ORDER BY 4294967295 ), c66 + ( SELECT max ( c66 ) FROM v64 AS a68 ORDER BY 4294967295 ) FROM v64 AS a67 ORDER BY 255 ) SELECT * FROM v64 AS a65 ORDER BY 0; 
SELECT * FROM v53 AS a71, v53 AS a72 NATURAL JOIN v53 AS a73 ORDER BY 16; 
VALUES ( 16, 0, 0 ) ORDER BY ( c24 || c6 || c5 ) != 'xxx'; 
SELECT * FROM v53 AS a74 WHERE ( a74.c6 = 16 OR a74.c5 > 8 ) AND a74.c6 IN ( SELECT a74.c2 FROM ( SELECT a75.c6 FROM v53 AS a75 ORDER BY 18446744073709551488 ) AS y WHERE a74.c5 = 16 ORDER BY 16 ) GROUP BY a74.c2, abs ( a74.c5 ) HAVING count ( * ) >= 16 ORDER BY 9223372036854775807; 
