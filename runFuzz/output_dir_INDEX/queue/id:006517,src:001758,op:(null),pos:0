CREATE TABLE v0 ( c1, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c2, c2 ) = ( ( SELECT CASE WHEN c2 % 2147483647 != 2147483647 THEN c1 END, c1, c1 FROM v0 AS a4 WHERE c1 <= 0 ORDER BY max ( c1 + c1 * 10 ) + 0, min ( c2, avg ( c1 ) ) + 2147483647 ), 18446744073709551488 ); END; 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE TABLE v6 ( c7, c8, c9, c10, PRIMARY KEY ( c7, c8, c7, c9, c9, c10, c8, c8 ) ) WITHOUT ROWID; 
BEGIN; 
UPDATE v0 SET c2 = 2147483647 FROM v0 AS a11, v6 AS a12 NATURAL JOIN v0 AS a13 WHERE c2 = c1; 
END; 
CREATE INDEX i14 ON v6 ( c9 ); 
ALTER TABLE v6 RENAME TO v15; 
CREATE INDEX i16 ON v0 ( c2 ); 
CREATE INDEX i17 ON v15 ( c9 ); 
SELECT count ( ( NOT ( a18.c8 IS NULL ) ) AND ( NOT ( a18.c8 IS NULL ) ) ) FROM v15 AS a18 ORDER BY 18446744073709551488; 
SELECT a19.c7 FROM v15 AS a19 ORDER BY 2147483647; 
SELECT * FROM v15 AS a20 GROUP BY a20.c8 ORDER BY 100; 
SELECT * FROM v0 AS a21, v0 AS a22 NATURAL JOIN v15 AS a23 ORDER BY 18446744073709551488; 
SELECT ( ( hex ( 18446744073709551488 ) ) % 127 ) FROM v0 AS a24, v15 AS a25 ORDER BY 0; 
SELECT * FROM v0 AS a26 ORDER BY a26.c1 COLLATE nocase; 
SELECT * FROM v15 AS a27, v0 AS a28 NATURAL JOIN v15 AS a29 ORDER BY 0; 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v15 AS a30 GROUP BY 18446744073709551615 ORDER BY 18446744073709551488; 
SELECT * FROM v15 AS a31 GROUP BY a31.c9 ORDER BY 18446744073709551488; 
