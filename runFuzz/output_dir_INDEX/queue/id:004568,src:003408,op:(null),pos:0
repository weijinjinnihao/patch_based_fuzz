CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 'fig', 12.010000, 12.010000 ); 
INSERT INTO v0 VALUES ( 0, 2147483647, 0 ), ( 18446744073709551488, 12.010000, 12.010000 ), ( 18446744073709551488, 18446744073709551488, 2147483647 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v0 ( c2 ); 
ALTER TABLE v4 RENAME TO v11; 
CREATE TABLE v12 ( c13 TEXT, c14 INTEGER, c15 INT, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31 DEFAULT 2147483647, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42 INTEGER PRIMARY KEY, c43 ); 
CREATE INDEX i44 ON v11 ( c6 ); 
UPDATE v11 SET c6 = 'v1' WHERE c6 = 8; 
SELECT * FROM v11 AS a45 ORDER BY 12.010000; 
VALUES ( 0, 18446744073709551488, 0 ), ( 12.010000, 127, 0 ), ( 18446744073709551488, x'b1', 18446744073709551488 ) ORDER BY 12.010000; 
SELECT a46.c26, count ( ( NOT ( a46.c19 IS NULL ) ) AND ( NOT ( a46.c43 IS NULL ) ) ) FROM v12 AS a46 ORDER BY 0; 
SELECT * FROM v11 AS a47 ORDER BY ( CASE WHEN a47.c2 != 'x' THEN 12.010000 ELSE 12.010000 END ); 
SELECT a48.c2, max ( a48.c2 || a48.c6 ) FROM v11 AS a48 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a49, v11 AS a50 ORDER BY 0; 
WITH RECURSIVE v11 AS ( SELECT 18446744073709551488 y ORDER BY 18446744073709551488 ) SELECT * FROM v11 AS a51 ORDER BY 12.010000; 
SELECT * FROM v11 AS a52 ORDER BY 12.010000; 
SELECT * FROM v0 AS a53 ORDER BY 0; 
SELECT * FROM v11 AS a54 ORDER BY 0; 
