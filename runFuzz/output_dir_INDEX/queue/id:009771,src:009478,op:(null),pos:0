CREATE TABLE v0 ( c1, c2 INTEGER UNIQUE ON CONFLICT FAIL, c3, c4, c5 UNIQUE ON CONFLICT REPLACE, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17 UNIQUE ON CONFLICT REPLACE DEFAULT 16, c18, c19, c20, c21, c22, c23, c24, c25 INTEGER CHECK( x'b1' ), c26, c27 INTEGER DEFAULT 16, c28, c29, PRIMARY KEY ( c9, c18, c28, c16, c7, c12, c19, c19, c23, c17, c14 ) ) WITHOUT ROWID; 
INSERT INTO v0 ( c19, c24, c21, c26, c17 ) VALUES ( 16, 2147483647, 16, 18446744073709551615, 16 ); 
DELETE FROM v0; 
CREATE INDEX i30 ON v0 ( c13 ); 
CREATE INDEX i31 ON v0 ( c22 ); 
INSERT INTO v0 ( c5, c15, c19, c4, c23 ) VALUES ( 16, 16, 18446744073709551488, 18446744073709551615, 18446744073709551488 ); 
CREATE INDEX i32 ON v0 ( c13 ); 
CREATE INDEX i33 ON v0 ( c27 ); 
CREATE INDEX i34 ON v0 ( c8 ); 
INSERT OR IGNORE INTO v0 ( c3, c9, c4, c19 ) VALUES ( 16, 4294967295, 16, 16 ); 
INSERT OR REPLACE INTO v0 ( c11, c9, c1, c27, c20 ) VALUES ( 127, 16, NULL, 0, 18446744073709551615 ); 
INSERT INTO v0 VALUES ( NULL, 255, 16, 'v0' ), ( NULL, 255, 0, 'x' ), ( NULL, 127, 16, 'c2' ), ( NULL, 9223372036854775807, 9223372036854775807, 'id.3' ), ( NULL, 18446744071562067968, 127, 'x' ); 
INSERT OR ABORT INTO v0 ( c10, c29, c15, c2, c20 ) VALUES ( 4294967295, 18446744071562067968, NULL, 0, 16 ); 
UPDATE OR IGNORE v0 SET c4 = NULL, c6 = c9, c14 = c8; 
UPDATE v0 SET c12 = NULL, c9 = c29, c17 = c14; 
INSERT OR ABORT INTO v0 ( c28, c21, c10, c4 ) VALUES ( 18446744073709551615, 2147483647, 18446744073709551488, 16 ); 
SELECT * FROM v0 AS a35 NATURAL JOIN v0 AS a36 ORDER BY 10; 
SELECT a38.c14, a37.c22 FROM v0 AS a37 LEFT JOIN v0 AS a38 ON - x'68617265' ORDER BY 16; 
SELECT CASE WHEN a39.c12 % 18446744073709518848 != 16 THEN a39.c18 END, a39.c17, a39.c8 FROM v0 AS a39 WHERE a39.c4 <= a39.c24 = a39.c4 || a39.c26 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a40 ORDER BY 1; 
SELECT * FROM v0 AS a41, v0 AS a42 NATURAL JOIN v0 AS a43 ORDER BY 18446744073709551615; 
SELECT a44.c21, max ( a44.c22 || a44.c2 ) FROM v0 AS a44 ORDER BY 127; 
SELECT a45.c13, max ( a45.c11 || a45.c21 ) FROM v0 AS a45 ORDER BY 127; 
SELECT * FROM v0 AS a46 NATURAL JOIN v0 AS a47 ORDER BY 18446744073709518848; 
WITH v48 ( c50, c51, c52, c53, c54, c55 ) AS ( SELECT 18446744073709551615 y ORDER BY ( ( c51 + 18446744073709551488 ) % 16 ) < 100 ) SELECT * FROM v48 AS a49 ORDER BY 16; 
SELECT * FROM v0 AS a56 GROUP BY a56.c12, a56.c5 < y ( a56.c1 ) ORDER BY 16; 
