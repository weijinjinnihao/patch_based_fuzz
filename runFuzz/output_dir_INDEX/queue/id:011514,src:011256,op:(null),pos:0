CREATE TABLE v0 ( c1 UNIQUE, c2, c3 UNIQUE ON CONFLICT IGNORE, c4 UNIQUE ON CONFLICT FAIL, c5 AS( 16 + 16 >= c8 - c10 ) CHECK( c5 BETWEEN c1 AND c5 ) CHECK( c6 BETWEEN c16 AND c16 ), c6, c7 UNIQUE ON CONFLICT REPLACE DEFAULT 0, c8, c9, c10, c11, c12, c13, c14 INTEGER UNIQUE ON CONFLICT IGNORE, c15 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 0, c16, PRIMARY KEY ( c14, c4 ), UNIQUE ( c5 ) ); 
CREATE INDEX i17 ON v0 ( c6 ); 
INSERT OR REPLACE INTO v0 ( c16, c5, c6, c8, c13 ) VALUES ( 0, 0, 555, 0, 18446744071562067968 ) ON CONFLICT DO UPDATE SET c9 = c15, c8 = c14, c4 = c14; 
DELETE FROM v0; 
CREATE INDEX i18 ON v0 ( c8 ); 
CREATE INDEX i19 ON v0 ( c11 ); 
INSERT INTO v0 ( c9, c6, c13, c9, c8 ) VALUES ( 255, 18446744073709551615, 0, 16, 16 ) ON CONFLICT DO UPDATE SET c15 = c3, c5 = c6, c6 = c7 WHERE c12 IS NOT NULL >= abs ( c1 ); 
INSERT OR IGNORE INTO v0 ( c14, c7, c9, c15 ) VALUES ( 0, 18446744073709518848, 255, 16 ) ON CONFLICT DO UPDATE SET c16 = c13, c1 = c8, c3 = c7 WHERE c10 IS NOT NULL >= abs ( c12 ); 
INSERT OR REPLACE INTO v0 ( c1, c14, c9, c14, c3 ) VALUES ( 0, 255, NULL, 18446744073709551488, 16 ); 
CREATE INDEX i20 ON v0 ( c1 ); 
INSERT OR ABORT INTO v0 ( c12, c7, c10, c1, c2 ) VALUES ( 18446744073709551488, 9223372036854775807, NULL, 0, 555 ); 
UPDATE OR IGNORE v0 SET c2 = c2 < y ( c6 ), c15 = c4, c6 = c14; 
CREATE INDEX i21 ON v0 ( c2 ); 
UPDATE v0 SET c16 = NULL, c5 = c7, c9 = c1; 
INSERT OR ABORT INTO v0 ( c7, c8, c3, c12 ) VALUES ( 18446744073709551615, 18446744073709551488, 16, 555 ); 
SELECT * FROM v0 AS a22 ORDER BY 8; 
SELECT a23.c5 COLLATE hex FROM v0 AS a23 ORDER BY a23.c15 COLLATE NOCASE, a23.c11; 
SELECT * ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a24 GROUP BY a24.c1 HAVING NULL ORDER BY 0; 
SELECT * FROM v0 AS a25 ORDER BY a25.c10 + 16; 
SELECT a26.c4 FROM v0 AS a26 ORDER BY 0; 
SELECT * FROM v0 AS a27 NATURAL JOIN v0 AS a28 ORDER BY 16; 
SELECT * FROM v0 AS a29 CROSS JOIN v0 AS a30 ON ( a29.c4 = a30.c10 ) WHERE a30.c11 IN ( SELECT a30.c9 FROM v0 AS a31 WHERE a29.c2 IN ( SELECT a31.c2 FROM ( SELECT a30.c8 FROM v0 AS a32 ORDER BY 0 ) AS y WHERE a29.c4 = 18446744073709551488 ORDER BY 18446744073709518848 ) ORDER BY 0 ) ORDER BY 18446744073709551488; 
WITH RECURSIVE v33 ( c35 ) AS ( SELECT max ( c12 || c10 ) ORDER BY 16 ) SELECT * FROM v33 AS a34 ORDER BY 0; 
SELECT * FROM v0 AS a36 ORDER BY 18446744073709551488; 
