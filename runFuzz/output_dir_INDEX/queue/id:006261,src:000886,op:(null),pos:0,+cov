CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 5.4e-08, 'v0' ), ( ( 5.4e-08, ( c6 + 5.4e-08 ), c5 != 'v1' ), 'two-b' ), ( 5.4e-08, 'abc' ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
ALTER TABLE v3 RENAME TO v8; 
CREATE INDEX i9 ON v0 ( c2 ); 
CREATE INDEX i10 ON v8 ( c4 ); 
CREATE INDEX i11 ON v8 ( c4 ); 
CREATE INDEX i12 ON v0 ( c2 ); 
UPDATE v8 SET c5 = 'v0' WHERE c1 = 18446744073709551488; 
SELECT * FROM v0 AS a13, v0 AS a14 ORDER BY 5.4e-08; 
SELECT a15.c5 + a15.c4 FROM v8 AS a15 ORDER BY 8; 
SELECT a16.c2 + ( SELECT max ( a16.c2 ) FROM v8 AS a19 ORDER BY 5.4e-08 ), a16.c1 + ( SELECT max ( a16.c2 ) FROM v0 AS a18 ORDER BY 5.4e-08 ), a16.c2 + ( SELECT max ( a16.c2 ) FROM v8 AS a17 ORDER BY 18446744073709551488 ) FROM v0 AS a16 y ORDER BY 5.4e-08; 
SELECT * FROM v8 AS a20 GROUP BY y ( a20.c5 ) ORDER BY 5.4e-08; 
SELECT a21.c6, count ( ( NOT ( a21.c5 IS NULL ) ) AND ( NOT ( a21.c6 IS NULL ) ) ) FROM v8 AS a21 ORDER BY 5.4e-08; 
SELECT * FROM v8 AS a22 WHERE a22.c5 = a22.c4 > 5.4e-08 ORDER BY 5.4e-08; 
SELECT * FROM v8 AS a23 ORDER BY ( a23.c5 + 5.4e-08 ) % count ( a23.c1 ); 
SELECT ( SELECT min ( a24.c1 ) OVER ( ORDER BY 5.4e-08 ) ORDER BY 5.4e-08 ) FROM v8 AS a24 WHERE count ( * ) >= 5.4e-08 = 'v1' ORDER BY 18446744073709551615; 
SELECT * FROM v8 AS a25 WHERE a25.c4 > a25.c6 % 5.4e-08 ORDER BY 5.4e-08; 
SELECT * FROM v8 AS a26 WHERE a26.c5 != 18446744071562067968 ORDER BY 18446744073709551488; 
