CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 0, 'x' ), ( 0, 'v0' ), ( 0, 'three-c' ); 
CREATE INDEX i8 ON v4 ( c6 ); 
INSERT INTO v4 VALUES ( 0, 0, 0 ), ( 127, 0, 127 ), ( 4294967295, 0, 0 ); 
CREATE INDEX i9 ON v0 ( c1 ); 
BEGIN; 
CREATE INDEX i10 ON v0 ( c1 ); 
CREATE INDEX i11 ON v4 ( c5 ); 
DELETE FROM v4 WHERE c5 = c7; 
END; 
ALTER TABLE v4 RENAME TO v12; 
UPDATE v0 SET c1 = 'v1' WHERE c2 = c1 % 255; 
SELECT * FROM v0 AS a13, v0 AS a14 ORDER BY 0; 
SELECT * FROM v12 AS a15, v12 AS a16 NATURAL JOIN v12 AS a17 ORDER BY 0; 
SELECT a18.c5 FROM v12 AS a18 ORDER BY 255; 
SELECT * FROM v0 AS a19 WHERE a19.c1 > 18446744073709551615 ORDER BY 0; 
SELECT * FROM v12 AS a20 ORDER BY ( a20.c7 + 0 ) % count ( a20.c5 ); 
SELECT * ORDER BY 0; 
SELECT a21.c1, UTF16le ( a21.c2 ) AS y FROM v0 AS a21 GROUP BY a21.c2 ORDER BY 4294967295; 
SELECT * FROM v12 AS a22 WHERE a22.c5 IS NOT NULL >= 4294967295 ORDER BY 0; 
SELECT * FROM v12 AS a23 WHERE a23.c1 NOT NULL ORDER BY 127; 
SELECT a24.c1, count ( * ), avg ( a24.c2 ), max ( a24.c2 + a24.c1 * 0 ) FROM v0 AS a24 ORDER BY 0; 
