CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER REFERENCES t1 ON DELETE CASCADE REFERENCES t2, c3 TEXT, FOREIGN KEY ( c2, c3 ) REFERENCES t2 ( c3, c2 ) ON UPDATE CASCADE ); 
INSERT INTO v0 ( c2, c1 ) VALUES ( 'three-c', ( ( hex ( 10 ) ) % 10 ) ); 
CREATE TABLE v4 ( c5 INTEGER PRIMARY KEY, c6 TEXT ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v4 ( c6 ); 
CREATE TABLE v9 ( c10 INTEGER REFERENCES t2, c11 INTEGER REFERENCES t1, FOREIGN KEY ( c11, c10 ) REFERENCES t2 ( c11, c11 ) ); 
CREATE INDEX i12 ON v0 ( c3 ); 
CREATE INDEX i13 ON v0 ( c2 ); 
INSERT INTO v9 VALUES ( 10, 10, 'x' ); 
INSERT INTO v9 VALUES ( 10, 10, '4' ); 
INSERT INTO v0 VALUES ( 10, 'v0' ); 
INSERT INTO v9 VALUES ( 18446744073709551615, 'x' ); 
INSERT INTO v9 VALUES ( 10, 10 ); 
INSERT INTO v4 VALUES ( 0, 10 ); 
CREATE INDEX i14 ON v9 ( c10 ); 
SELECT * FROM v9 AS a15, v4 AS a16 NATURAL JOIN v9 AS a17 ORDER BY 10; 
SELECT * FROM v0 AS a18 GROUP BY 10 ORDER BY 10; 
WITH v4 AS ( SELECT 10 y ORDER BY 10 ) SELECT * FROM v9 AS a19 ORDER BY 18446744073709518848; 
SELECT a20.c3, max ( a20.c1 || a20.c2 ) FROM v0 AS a20 ORDER BY 10; 
SELECT * FROM v0 AS a21 WHERE ( ( a21.c1 + 10 ) % 10 ) == 10 ORDER BY 4294967295; 
SELECT a22.c6, a22.c5 FROM v4 AS a22 WHERE a22.c6 = 'x' ORDER BY 4294967295; 
SELECT * FROM v4 AS a23 ORDER BY 1; 
SELECT * FROM v9 AS a24 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a25 ORDER BY 1; 
SELECT * FROM v0 AS a26, v4 AS a27 NATURAL JOIN v0 AS a28 ORDER BY 10; 
