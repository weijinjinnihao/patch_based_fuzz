PRAGMA foreign_keys = 3; 
CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( ( ( c2 + 127 ) % count ( c4 ) ) != 127 ), c3 INTEGER NOT NULL CHECK( c4 > c2 * 0 ), c4 INTEGER NOT NULL CHECK( c1 BETWEEN c2 AND c3 ) ); 
CREATE INDEX i5 ON v0 ( c3 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
INSERT INTO v0 VALUES ( 18446744073709551488 ); 
INSERT INTO v0 VALUES ( 127 ); 
CREATE INDEX i7 ON v0 ( c2 ); 
CREATE TABLE v8 ( c9 INTEGER REFERENCES t1 ( c9 ) ); 
INSERT INTO v8 VALUES ( 127 ); 
INSERT INTO v8 VALUES ( 18446744073709551488 ); 
DELETE FROM v0 WHERE c4 = 18446744073709551488; 
CREATE INDEX i10 ON v8 ( c9 ); 
CREATE INDEX i11 ON v0 ( c1 ); 
SELECT a12.c9, max ( a12.c9 || a12.c9 ) FROM v8 AS a12 ORDER BY 0; 
SELECT * FROM v0 AS a13 ORDER BY 127; 
SELECT max ( a14.c9 || a14.c9 ) FROM v8 AS a14 ORDER BY 0; 
SELECT * FROM v0 AS a15 ORDER BY a15.c1 COLLATE binary; 
SELECT a17.c2, a17.c3 FROM v8 AS a16 RIGHT JOIN v0 AS a17 ON a17.c3 = 18446744073709551488 ORDER BY 0; 
SELECT * FROM v0 AS a18, v0 AS a19 ORDER BY 0; 
SELECT * FROM v8 AS a20 ORDER BY 255; 
SELECT * ORDER BY 10; 
WITH v8 ( c22 ) AS ( SELECT 255 ORDER BY 18446744073709551615 ) SELECT * FROM v0 AS a21 ORDER BY 8; 
SELECT count ( ( NOT ( a23.c2 IS NULL ) ) AND ( NOT ( a23.c3 IS NULL ) ) ) FROM v0 AS a23 ORDER BY 255; 
