CREATE TABLE v0 ( c1, c2 INTEGER UNIQUE ON CONFLICT FAIL, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25 INTEGER CHECK( x'b1' ), c26, c27 PRIMARY KEY, CHECK( ( ( c22 + 16 ) % 18446744073709551488 ) != 16 ) ) WITHOUT ROWID; 
CREATE INDEX i28 ON v0 ( c21 ); 
CREATE INDEX i29 ON v0 ( c11 ); 
CREATE INDEX i30 ON v0 ( c16 ); 
CREATE INDEX i31 ON v0 ( c23 ); 
ALTER TABLE v0 DROP c22; 
CREATE INDEX i32 ON v0 ( c13 ); 
ALTER TABLE v0 ADD COLUMN c33 TEXT DEFAULT 'v0' DEFAULT 18446744073709551488; 
SELECT * FROM v0 AS a34 WHERE a34.c16 IS 18446744073709551488 ORDER BY 2147483647; 
SELECT * FROM v0 AS a35, v0 AS a36 NATURAL JOIN v0 AS a37 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 18446744073709551488; 
WITH RECURSIVE v0 AS ( SELECT 18446744073709551488 y ORDER BY 18446744073709551488 ) SELECT a38.c12 COLLATE hex FROM v0 AS a38 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a39 ORDER BY - 18446744073709551488; 
SELECT count ( a40.c24 ) FROM v0 AS a40 ORDER BY 16; 
SELECT * FROM v0 AS a41 ORDER BY 2147483647; 
SELECT a42.c1, ( + a43.c18 ) y, ( + a43.c21 ) y, ( + a42.c15 ) y, NOT EXISTS ( SELECT NULL FROM v0 AS a44 ORDER BY 18446744073709551488 ), CASE a42.c2 WHEN 0 THEN 18446744073709551488 WHEN 18446744071562067968 THEN 16 WHEN 18446744071562067968 THEN 'v0' END, 'hill' FROM v0 AS a42 LEFT JOIN v0 AS a43 ON a42.c27 = a43.c4 ORDER BY 18446744073709551488; 
SELECT * FROM v0 AS a45 ORDER BY 1; 
SELECT * FROM v0 AS a46 ORDER BY 18446744073709551488; 
