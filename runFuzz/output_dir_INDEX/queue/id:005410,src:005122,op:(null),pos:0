CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c1 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7 ); 
INSERT INTO v0 VALUES ( 'v0', 8, 8 ); 
CREATE INDEX i8 ON v0 ( c2 ); 
CREATE TABLE v9 ( c10, c11 INT UNIQUE ON CONFLICT FAIL, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45 DEFAULT 8 DEFAULT 8, c46, c47, c48, c49 INTEGER PRIMARY KEY, c50 ); 
CREATE INDEX i51 ON v4 ( c7 ); 
CREATE INDEX i52 ON v4 ( c7 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v9 WHERE c7 = c36; END; 
INSERT INTO v9 VALUES ( ( ( c42 + 8 ) % 8 ) < 8, 'v1', 'x' ); 
CREATE INDEX i53 ON v9 ( c35 ); 
ALTER TABLE v0 RENAME TO v54; 
UPDATE v4 SET c5 = '**%s**' WHERE c7 = 16; 
SELECT * FROM v54 AS a55 WHERE CASE WHEN a55.c1 != 'x' THEN 8 ELSE 16 END > 8 ORDER BY 8; 
SELECT * FROM v54 AS a56 WHERE a56.c2 = a56.c1 || a56.c2 ORDER BY 8; 
SELECT count ( a57.c2 ) FROM v54 AS a57 ORDER BY 8; 
SELECT a58.c48, count ( ( NOT ( a58.c47 IS NULL ) ) AND ( NOT ( a58.c43 IS NULL ) ) ) FROM v9 AS a58 ORDER BY 8; 
SELECT * FROM v9 AS a59 GROUP BY a59.c25, abs ( a59.c16 ) ORDER BY 8; 
SELECT max ( a60.c2 || a60.c2 ) FROM v54 AS a60 ORDER BY 16; 
SELECT * FROM v9 AS a61 GROUP BY a61.c40, abs ( a61.c30 ) HAVING count ( * ) >= 0 ORDER BY 8; 
SELECT * FROM v9 AS a62 LEFT JOIN ( SELECT count ( * ) AS y, a63.c1 FROM ( v54 AS a63 INNER JOIN v4 AS a64 ON a62.c46 = a64.c6 ) AS y WHERE a64.c6 > 0 GROUP BY a63.c2 ORDER BY 18446744073709551488 ) AS y ON a62.c14 = a62.c46 y ORDER BY 18446744073709551488; 
SELECT * FROM v54 AS a65 WHERE a65.c1 = 8 ORDER BY 16; 
SELECT * FROM v54 AS a66, v4 AS a67 NATURAL JOIN v9 AS a68 ORDER BY 8; 
