CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
CREATE INDEX i8 ON v3 ( c1 ); 
CREATE INDEX i9 ON v3 ( c6 ); 
INSERT INTO v0 VALUES ( 4294967295, 'fizzle' ), ( 4294967295, 't-first' ), ( 4294967295, 'e' ); 
INSERT INTO v3 VALUES ( 4294967295, 4294967295, 4294967295 ), ( 4294967295, 0, 255 ), ( 4294967295, 4294967295, 0 ); 
CREATE INDEX i10 ON v3 ( c4 ); 
ALTER TABLE v3 RENAME TO v11; 
CREATE INDEX i12 ON v0 ( c2 ); 
SELECT a13.c1, max ( a13.c4 || a13.c6 ) FROM v11 AS a13 ORDER BY 255; 
SELECT * FROM v11 AS a14 ORDER BY 4294967295; 
SELECT a15.c1, count ( ( NOT ( a15.c2 IS NULL ) ) AND ( NOT ( a15.c1 IS NULL ) ) ) FROM v0 AS a15 ORDER BY 255; 
SELECT count ( a16.c1 ) FROM v11 AS a16 ORDER BY 4294967295; 
SELECT * FROM v0 AS a17 ORDER BY 1; 
WITH RECURSIVE v18 AS ( SELECT c2 FROM v18 AS a20 WHERE c2 LIKE '2' ORDER BY 255 ) SELECT * FROM v18 AS a19 ORDER BY 18446744071562067968; 
WITH v21 AS ( SELECT 18446744071562067968 y ORDER BY 16 ) SELECT c5 % 2147483647, c1 / 4294967295, c2, printf ( 'v1', c1 ) FROM v21 AS a22 ORDER BY 4294967295; 
SELECT * FROM v11 AS a23 ORDER BY 1; 
SELECT * FROM ( SELECT 0 ORDER BY 18446744071562067968 ) AS y, ( SELECT 127 ORDER BY 4294967295 ) AS y ON likely ( 4294967295 OR 10 ) IS 4294967295 ORDER BY 4294967295; 
SELECT * FROM v0 AS a24 ORDER BY a24.c1 COLLATE nocase; 
