CREATE TABLE v0 ( c1 NOT NULL DEFAULT 1234, c2 NOT NULL DEFAULT 1234, c3 NOT NULL ON CONFLICT REPLACE DEFAULT 1234, c4 NOT NULL ON CONFLICT IGNORE DEFAULT 1234, c5 NOT NULL ON CONFLICT ABORT DEFAULT 1234 ); 
CREATE INDEX i6 ON v0 ( c2 ); 
INSERT INTO v0 ( c3, c4, c4, c3, c3 ) VALUES ( 456, 2147483647, 8, 1234, 1234 ); 
DELETE FROM v0; 
INSERT INTO v0 ( c2, c2, c3, c4, c3 ) VALUES ( 18446744071562067968, 8, 1234, 8, 1234 ); 
CREATE INDEX i7 ON v0 ( c3 ); 
CREATE INDEX i8 ON v0 ( c4 ); 
INSERT OR IGNORE INTO v0 ( c2, c3, c2, c4 ) VALUES ( 8, 456, 2147483647, 456 ); 
INSERT INTO v0 ( c5 ) VALUES ( 'fig' ), ( 'v1' ), ( 'v0' ); 
INSERT INTO v0 ( c3, c4, c5, c1, c1 ) VALUES ( 456, 456, 18446744073709551488, 2147483647, 16 ); 
INSERT OR REPLACE INTO v0 ( c4, c3, c1, c3, c3 ) VALUES ( 18446744073709551488, 8, NULL, 18446744071562067968, 0 ); 
INSERT OR ABORT INTO v0 ( c1, c5, c1, c3, c2, c2, c3, c4, c3, c2, c2, c5, c1, c3, c2 ) VALUES ( 18446744073709551615, 1234, NULL, 0, 18446744073709551615 ); 
UPDATE OR IGNORE v0 SET c4 = NULL, c5 = c4, c3 = c2; 
PRAGMA quick_check ( 10 ); 
UPDATE v0 SET c2 = NULL, c3 = c5, c5 = c3; 
CREATE INDEX i9 ON v0 ( c4 ); 
INSERT OR ABORT INTO v0 ( c5, c1, c3, c4 ) VALUES ( 18446744071562067968, 0, 456, 1234 ); 
SELECT * FROM v0 AS a10, v0 AS a11 ORDER BY 1234; 
SELECT count ( a12.c2 ) FROM v0 AS a12 ORDER BY 16; 
SELECT a13.c5 FROM v0 AS a13 ORDER BY 18446744073709551615; 
SELECT CASE WHEN a14.c5 % 456 != 18446744073709551615 THEN a14.c2 END, a14.c5, a14.c3 FROM v0 AS a14 WHERE a14.c2 <= 0 ORDER BY 1234; 
SELECT * FROM v0 AS a15 ORDER BY 0; 
SELECT * FROM v0 AS a16 NATURAL JOIN v0 AS a17 ORDER BY 0; 
SELECT * FROM v0 AS a18 ORDER BY 0; 
WITH RECURSIVE v0 ( c20 ) AS ( SELECT 127 ORDER BY 127 ) SELECT * FROM v0 AS a19 ORDER BY 2147483647; 
SELECT count ( ( NOT ( a21.c4 IS NULL ) ) AND ( NOT ( a21.c2 IS NULL ) ) ) FROM v0 AS a21 ORDER BY 8; 
SELECT * FROM v0 AS a22 WHERE a22.c4 = 127 ORDER BY 2147483647; 
