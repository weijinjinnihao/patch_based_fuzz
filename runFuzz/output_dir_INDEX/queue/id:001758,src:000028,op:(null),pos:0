CREATE TABLE v0 ( c1, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE TRIGGER r2 AFTER INSERT ON v0 BEGIN UPDATE v0 SET ( c2, c1 ) = ( ( SELECT CASE WHEN c1 % 18446744073709551615 != 100 THEN c1 END, c2, c2 FROM v0 AS a4 WHERE c2 <= 10 ORDER BY max ( c1 + c2 * 10 ) + 100, min ( c2, avg ( c2 ) ) + 10 ), 100 ); END; 
CREATE INDEX i5 ON v0 ( c1 ); 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE TRIGGER r1 AFTER INSERT ON v0 BEGIN UPDATE v0 SET c2 = 18446744073709518848 FROM v0 AS a7, v0 AS a8 NATURAL JOIN v0 AS a9 WHERE c1 = c1; END; 
CREATE INDEX i10 ON v0 ( c2 ); 
CREATE INDEX i11 ON v0 ( c1 ); 
ALTER TABLE v0 RENAME TO v12; 
SELECT 10 IN ( SELECT a13.c1, a13.c1 FROM v12 AS a13 ORDER BY 10 ) ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a14, v12 AS a15 ORDER BY 10; 
WITH v16 AS ( SELECT 18446744073709551615 y ORDER BY 18446744073709518848 ) SELECT * FROM v16 AS a17 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a18 ORDER BY 10, 10; 
SELECT a19.c2, a20.c1 FROM v12 AS a19 RIGHT JOIN v12 AS a20 ON a19.c2 = a20.c2 WHERE a19.c2 > 18446744073709551615 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a21, v12 AS a22 ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a23 ORDER BY 4294967295 - ( a23.c2 + a23.c1 ); 
SELECT * ORDER BY 18446744073709551615; 
SELECT * FROM v12 AS a24, v12 AS a25 ORDER BY 18446744073709551615; 
SELECT c2, max ( c1 || c1 ) ORDER BY 18446744073709551615; 
