CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 TEXT UNIQUE NOT NULL ); 
CREATE INDEX i3 ON v0 ( c1 ); 
INSERT INTO v0 ( c2, c2, c1 ) VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ), ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ); 
INSERT INTO v0 ( c1, c2, c2 ) VALUES ( 18446744073709551488, 18446744073709551488, 18446744073709551488 ); 
CREATE INDEX i4 ON v0 ( c1 ); 
INSERT INTO v0 ( c2, c1, c1 ) VALUES ( 18446744073709551488, 0, 18446744073709551488 ), ( 18446744073709551488, 0, 18446744073709551488 ) ON CONFLICT ( c2 ) DO UPDATE SET c1 = c2, c2 = c1; 
CREATE INDEX i5 ON v0 ( c1 ); 
INSERT OR REPLACE INTO v0 VALUES ( 4294967295, '40000 400 1 1' ), ( 0, '%t2%' ), ( 127, 'v1' ); 
CREATE INDEX i6 ON v0 ( c1 ); 
CREATE INDEX i7 ON v0 ( c1 ); 
SELECT * FROM v0 AS a8 ORDER BY ( ( a8.c1 + 18446744073709551615 ) % 18446744073709551488 ); 
SELECT * FROM v0 AS a9 ORDER BY ( 18446744073709551488, count ( * ) ) != 18446744073709551488; 
SELECT count ( a10.c2 ) FROM v0 AS a10 ORDER BY 18446744073709551488; 
SELECT * ORDER BY 0; 
SELECT a11.c2, count ( ( NOT ( a11.c1 IS NULL ) ) AND ( NOT ( a11.c2 IS NULL ) ) ) FROM v0 AS a11 ORDER BY 18446744073709551615; 
WITH RECURSIVE v0 ( c13 ) AS ( SELECT 18446744073709551488 ORDER BY 18446744071562067968 ) SELECT * FROM v0 AS a12 ORDER BY 0; 
SELECT * FROM v0 AS a14 NATURAL JOIN v0 AS a15 ORDER BY 8; 
WITH v16 ( c19 ) AS ( SELECT c19 + ( SELECT max ( c19 ) FROM v16 AS a23 ORDER BY 0 ), c19 + ( SELECT c19 FROM v16 AS a22 ORDER BY 4294967295 ), c19 + ( SELECT max ( c19 ) FROM v16 AS a21 ORDER BY 18446744071562067968 ) FROM v16 AS a20 ORDER BY 18446744073709518848 ) SELECT c19, c19 FROM v16 AS a17 LEFT JOIN v16 AS a18 ON x'b1' = c19 WHERE CASE WHEN c19 != '_m_' THEN 18446744073709551488 ELSE 18446744073709551488 END > 18446744073709551488 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a24, v0 AS a25 NATURAL JOIN v0 AS a26 ORDER BY 18446744073709551615; 
SELECT * FROM v0 AS a27 GROUP BY 18446744073709551488 ORDER BY 18446744073709551488; 
