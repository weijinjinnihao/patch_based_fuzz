ATTACH 'Y' AS sqlite_master; 
CREATE TABLE v0 ( c1, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE INDEX i4 ON v0 ( c2 ); 
CREATE TABLE v5 ( c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19 PRIMARY KEY ON CONFLICT REPLACE, c20 REFERENCES t1 DEFAULT 18446744073709551615 DEFAULT 18446744073709551615, c21 BLOB, c22 TEXT UNIQUE NOT NULL ); 
CREATE TABLE v23 ( c24 UNIQUE, c25, c26 UNIQUE ON CONFLICT IGNORE, c27 UNIQUE ON CONFLICT FAIL, c28 UNIQUE ON CONFLICT REPLACE DEFAULT 127, c29 UNIQUE ON CONFLICT REPLACE, c30, c31, c32, c33, c34, c35, c36, c37, c38 TEXT UNIQUE ON CONFLICT FAIL DEFAULT 2147483647, c39, PRIMARY KEY ( c33, c24 ), UNIQUE ( c28 ) ); 
CREATE TABLE v40 ( c41, c42 ); 
INSERT INTO v5 VALUES ( 18446744073709551615, 'x' ); 
CREATE TABLE v43 ( c44, c45 ); 
INSERT INTO v40 VALUES ( 'v0', 18446744073709551615 ); 
INSERT INTO v43 VALUES ( 2147483647, 'v1' ); 
CREATE INDEX i46 ON v43 ( c44 ); 
CREATE TABLE v47 ( c48, c49 INTEGER UNIQUE ON CONFLICT FAIL, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74 PRIMARY KEY, CHECK( ( ( c68 + 18446744073709551488 ) % 18446744073709551615 ) != 18446744073709551488 ) ) WITHOUT ROWID; 
CREATE TABLE v75 ( c76, c77, c78, c79, c80 INT, c81, c82, c83, c84, c85, c86, c87, c88, c89 PRIMARY KEY ON CONFLICT REPLACE, c90, c91, c92 TEXT UNIQUE NOT NULL ); 
INSERT INTO main . v47 VALUES ( 127, 'v1' ); 
CREATE TABLE main . v93 ( c94, c95 ); 
INSERT INTO main . v5 VALUES ( 100, 'v0' ); 
ANALYZE; 
CREATE INDEX i96 ON v40 ( c41 ); 
UPDATE v40 SET c42 = 0; 
UPDATE v23 SET c39 = 18446744073709551488; 
CREATE INDEX i97 ON v75 ( c78 ); 
UPDATE v75 SET c84 = 18446744073709551488; 
ANALYZE; 
SELECT * FROM v0 AS a98 ORDER BY 1; 
SELECT * FROM v47 AS a99 NATURAL JOIN v5 AS a100 ORDER BY 127; 
SELECT * FROM v5 AS a101 ORDER BY 1000; 
SELECT a102.c45 IS NULL, a102.c45 FROM v43 AS a102 ORDER BY 18446744073709551615; 
SELECT a103.c1, max ( a103.c2 || a103.c1 ) FROM v0 AS a103 ORDER BY 18446744073709551488; 
WITH v104 ( c108 ) AS ( WITH v104 AS ( SELECT ( SELECT min ( c108 ) OVER ( ORDER BY 2147483647 IN v104 ) ORDER BY 16 ) FROM v104 AS a109 GROUP BY c108 ORDER BY 16 ) SELECT 100 ORDER BY 100 ) SELECT * FROM v104 AS a105, v104 AS a106 NATURAL JOIN v104 AS a107 ORDER BY 16; 
SELECT * FROM v5 AS a110 WHERE a110.c17 IS NOT NULL >= 2147483647 ORDER BY 10; 
SELECT a111.c45, a111.c44 FROM v43 AS a111 JOIN v23 AS a112 ON a111.c44 = hex ( ) ORDER BY 8; 
SELECT * FROM v40 AS a113, v93 AS a114 NATURAL JOIN v40 AS a115 ORDER BY 2147483647; 
SELECT * FROM v47 AS a116 NATURAL JOIN v47 AS a117 ORDER BY 2147483647; 
