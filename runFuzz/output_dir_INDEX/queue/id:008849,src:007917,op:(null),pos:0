CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE INDEX i3 ON v0 ( c2 ); 
CREATE VIRTUAL TABLE v4 USING rtree ( c5, c6, c7, c8, c9, c10, c11, c12, c13 ); 
CREATE TABLE v14 ( c15 INTEGER, c16 INTEGER PRIMARY KEY, c17 BLOB, FOREIGN KEY ( c16 ) REFERENCES t2 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 've' ), ( 18446744073709551615, 'x' ), ( 18446744073709551615, 'x' ); 
INSERT INTO v0 VALUES ( 0, 2147483647, 18446744073709551615 ), ( 2147483647, 0, 127 ), ( 127, 18446744073709551488, 0 ); 
INSERT INTO v0 VALUES ( 0, x'b1' ), ( 18446744073709551488, 0 ), ( 0, 18446744073709551488 ); 
CREATE INDEX i18 ON v14 ( c15 ); 
CREATE INDEX i19 ON v14 ( c15 ); 
CREATE TABLE IF NOT EXISTS v20 ( c21 INTEGER PRIMARY KEY ON CONFLICT REPLACE, c22 UNIQUE ON CONFLICT IGNORE, c23 UNIQUE ON CONFLICT FAIL ) WITHOUT ROWID; 
CREATE INDEX i24 ON v20 ( c23 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v14 BEGIN DELETE FROM v14; END; 
CREATE TABLE v25 ( c26 REFERENCES t1 DEFAULT NULL, c27, c28, c29, c30, c31, c32, c33, c34, c35 INTEGER UNIQUE ON CONFLICT FAIL, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60 PRIMARY KEY, CHECK( ( ( c56 + 0 ) % 18446744073709551615 ) != 0 ) ) WITHOUT ROWID; 
ALTER TABLE v4 RENAME TO v61; 
CREATE INDEX i62 ON v61 ( c10 ); 
UPDATE v20 SET c23 = 'v1' WHERE c21 = 0; 
SELECT quote ( a63.c1 ), quote ( a63.c1 ), 'v0' FROM v0 AS a63 GROUP BY a63.c1, a63.c1, count ( a63.c2 ) ORDER BY 0; 
SELECT a64.c10 + 2147483647, a64.c1 + 127 FROM v61 AS a64 y ORDER BY 0; 
WITH v65 AS ( SELECT * FROM v65 AS a67 JOIN v65 AS a68 USING ( c13, c7, c8, c51, c38, c5, c38, c17 ) WHERE c15 = c2 >= 18446744073709551488 ORDER BY 127 ) SELECT * FROM v65 AS a66 WHERE ( c15 = 18446744073709551488 OR c23 = 2147483647 ) AND c11 IN ( SELECT c45 FROM ( SELECT *, 'x' FROM v65 AS a69 LEFT JOIN v65 AS a70 ON c22 = 18446744073709551488 AND c23 = 0 ORDER BY 18446744073709551488 ) AS y WHERE c11 = 18446744073709551615 ORDER BY 18446744073709551488 ) GROUP BY 18446744073709551615 ORDER BY 0; 
SELECT * FROM v20 AS a71, v25 AS a72 ORDER BY 0; 
SELECT * FROM v61 AS a73, v25 AS a74 ORDER BY 0; 
SELECT * FROM v61 AS a75 ORDER BY a75.c2, a75.c10 || a75.c2 || a75.c13; 
SELECT * FROM v0 AS a76 GROUP BY a76.c2, abs ( a76.c1 ) ORDER BY 18446744073709551488; 
SELECT a79.c8, a79.c10 FROM v0 AS a77, v61 AS a78 NATURAL JOIN v61 AS a79 ORDER BY a77.c1 COLLATE nocase; 
SELECT max ( a80.c23 || a80.c22 ) FROM v20 AS a80 ORDER BY 8; 
SELECT * FROM v14 AS a81 NATURAL JOIN v61 AS a82 ORDER BY 2147483647; 
