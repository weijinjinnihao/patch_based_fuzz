CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 16, 'v1' ), ( 16, 'amx' ), ( 16, 'abc1' ); 
INSERT OR IGNORE INTO v3 VALUES ( 16, 16, 18446744073709551615 ), ( 18446744071562067968, 16, 100 ), ( 18446744071562067968, 16, 16 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c2; END; 
ALTER TABLE v3 RENAME TO v7; 
UPDATE v0 SET c1 = 'amx' WHERE c2 = 16; 
WITH v8 AS ( SELECT 16 y GROUP BY y ( c1, c5 ) ORDER BY 18446744071562067968 ) SELECT MIN ( c4 ) FROM v8 AS a9 ORDER BY 18446744071562067968; 
SELECT a12.c2 FROM v0 AS a11, v7 AS a12 ORDER BY 16; 
SELECT SUM ( a13.c2 ) FROM v0 AS a13 AS y ORDER BY 16; 
SELECT MAX ( a14.c2 ) FROM v0 AS a14 ORDER BY 16; 
SELECT AVG ( a15.c2 ) FROM v7 AS a15, v0 AS a16 ORDER BY 18446744071562067968; 
SELECT MIN ( a17.c5 ) FROM v7 AS a17 ORDER BY 16; 
SELECT a18.c2 FROM v7 AS a18 ORDER BY 0; 
SELECT a19.c6 FROM v7 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c4 ) FROM v7 AS a20 ORDER BY 16; 
