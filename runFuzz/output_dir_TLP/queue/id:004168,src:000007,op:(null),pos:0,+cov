CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709518848, 'x' ), ( 100, 'v1' ), ( 0, 'v0' ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 18446744073709518848, 4294967295 ), ( 18446744073709551488, 18446744071562067968, 18446744071562067968 ), ( 0, 4294967295, 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c5 = c1; END; 
INSERT OR REPLACE INTO v3 ( c4, c6, c6, c5, c5 ) VALUES ( 18446744073709551488, 'bmy', NULL, c4 AND 18446744073709551615, 9223372036854775807 ); 
UPDATE v3 SET c6 = 'v0' WHERE c4 = 4294967295; 
WITH v7 AS ( SELECT 4294967295 y GROUP BY y ( c5, c5 ) ORDER BY 4294967295 ) SELECT MIN ( c1 ) FROM v7 AS a8 ORDER BY 18446744071562067968; 
SELECT a11.c2 FROM v0 AS a10, v0 AS a11 ORDER BY 0; 
SELECT SUM ( a12.c5 ) FROM v3 AS a12 AS y ORDER BY 18446744073709551615; 
SELECT MAX ( a13.c2 ) FROM v0 AS a13 ORDER BY 4294967295; 
SELECT AVG ( a14.c1 ) FROM v0 AS a14, v3 AS a15 ORDER BY 0; 
SELECT MIN ( a16.c4 ) FROM v3 AS a16 ORDER BY 0; 
SELECT a17.c6 FROM v3 AS a17 ORDER BY 18446744073709551488; 
SELECT a18.c4 FROM v3 AS a18 ORDER BY 1; 
SELECT quick_check ( a19.c2 ) FROM v0 AS a19 ORDER BY 4294967295; 
