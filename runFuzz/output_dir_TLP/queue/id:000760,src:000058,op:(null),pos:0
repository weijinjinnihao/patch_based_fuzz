CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER REFERENCES t1 ON DELETE CASCADE REFERENCES t2, c3 TEXT, FOREIGN KEY ( c2, c2 ) REFERENCES t2 ( c1, c2 ) ON UPDATE CASCADE ); 
CREATE TABLE v4 ( c5 INTEGER PRIMARY KEY, c6 TEXT ); 
CREATE TABLE v7 ( c8 INTEGER REFERENCES t2 DEFAULT 10, c9 INTEGER REFERENCES t1, FOREIGN KEY ( c9, c8 ) REFERENCES t2 ( c8, c9 ) ); 
INSERT INTO v7 VALUES ( 10, 16, 'x' ); 
INSERT INTO v7 VALUES ( 16, 0, 'x' ); 
INSERT INTO v4 VALUES ( 18446744073709518848, 'z' ); 
INSERT INTO v0 VALUES ( 16, 'x' ); 
INSERT INTO v0 VALUES ( 10, 18446744073709518848 ); 
INSERT INTO v7 VALUES ( 18446744073709551488, 255 ); 
SELECT AVG ( a10.c8 ) FROM v7 AS a10 ORDER BY 0; 
SELECT ( a11.c3 ) FROM v0 AS a11 ORDER BY 16; 
SELECT a12.c9 FROM v7 AS a12 ORDER BY 16; 
SELECT AVG ( a13.c8 ) FROM v7 AS a13 ORDER BY 1; 
WITH v0 AS ( SELECT 16 y ORDER BY 18446744073709518848 ) SELECT a14.c3 FROM v0 AS a14 ORDER BY 100; 
SELECT x'b2b2b2' FROM v7 AS a15 ORDER BY 10; 
SELECT a16.c1 FROM v0 AS a16 ORDER BY 18446744073709551488; 
SELECT ( a17.c8 ) FROM v7 AS a17 ORDER BY 100; 
SELECT a18.c8 FROM v7 AS a18 ORDER BY + a18.c9; 
