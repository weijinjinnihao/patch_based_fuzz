CREATE TABLE v0 ( c1 INT PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 'two-b' ), ( 18446744073709551615, 'v0' ), ( 18446744073709518848, 'x' ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 18446744073709551615, 18446744073709551615 ), ( 18446744073709518848, 18446744073709551615, 18446744073709518848 ), ( 18446744073709518848, 18446744073709551615, 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c1 = c1; END; 
ALTER TABLE v0 RENAME TO v7; 
UPDATE v3 SET c5 = 'v0' WHERE c1 = 18446744073709518848; 
WITH v8 AS ( SELECT 0 y GROUP BY y ( c1, c2 ) ORDER BY 18446744073709518848 ) SELECT MIN ( c2 ) FROM v8 AS a9 ORDER BY 18446744073709518848; 
SELECT a12.c1 FROM v7 AS a11, v7 AS a12 ORDER BY 18446744073709551488; 
SELECT SUM ( a13.c4 ) FROM v3 AS a13 AS y ORDER BY 18446744073709518848; 
SELECT MAX ( a14.c2 ) FROM v7 AS a14 ORDER BY 18446744073709518848; 
SELECT AVG ( a15.c2 ) FROM v7 AS a15, v7 AS a16 ORDER BY 18446744073709551615; 
SELECT MIN ( a17.c2 ) FROM v7 AS a17 ORDER BY 127; 
SELECT a18.c5 FROM v3 AS a18 ORDER BY 2147483647; 
SELECT a19.c1 FROM v7 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c2 ) FROM v7 AS a20 ORDER BY 127; 
