CREATE TABLE v0 ( c1, c2, c3 ); 
CREATE INDEX i4 ON v0 ( + c3 + c2, c1 ); 
CREATE INDEX i5 ON v0 ( c3 COLLATE nocase, c1 COLLATE nocase ); 
INSERT INTO v0 VALUES ( 'v0', 'v1', 'v1' ); 
PRAGMA integrity_check; 
INSERT INTO v0 VALUES ( 'v0', 'v1', 'x' ); 
INSERT INTO v0 VALUES ( 'x', 'm', 'v1' ); 
INSERT INTO v0 VALUES ( 'c', '-2', '$long' ); 
SELECT SUM ( a6.c3 ) FROM v0 AS a6 ORDER BY 1; 
SELECT a7.c3 FROM v0 AS a7 ORDER BY 1; 
SELECT SUM ( a8.c2 ) FROM v0 AS a8 ORDER BY 2147483647; 
SELECT AVG ( a9.c3 ) FROM v0 AS a9 ORDER BY max ( a9.c2 + a9.c1 * 1 ) + 18446744073709551488, min ( 0, count ( * ) >= 2147483647, avg ( a9.c1 ) ) + 18446744073709518848; 
SELECT a10.c3 FROM v0 AS a10 ORDER BY 0; 
SELECT AVG ( a11.c1 ) FROM v0 AS a11 ORDER BY 1; 
SELECT SUM ( a12.c2 ) FROM v0 AS a12 ORDER BY 0; 
SELECT a13.c1 FROM v0 AS a13 ORDER BY 18446744073709518848; 
SELECT SUM ( a14.c2 ) FROM v0 AS a14 ORDER BY 2147483647; 
SELECT a15.c2 FROM ( SELECT a15.c3, max ( a15.c2 ) AS y FROM v0 AS a16 WHERE a16.c2 >= 18446744073709518848 GROUP BY a15.c1 ORDER BY 2147483647 ) AS y CROSS JOIN v0 AS a15 ORDER BY a15.c2, a15.c3, a15.c2; 
