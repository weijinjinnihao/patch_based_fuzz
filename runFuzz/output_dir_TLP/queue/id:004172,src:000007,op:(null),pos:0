CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 'x' ), ( 18446744073709551615, 'v0' ), ( 18446744073709551615, 'v1' ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 18446744073709551488, 127 ), ( 18446744073709551488, 2147483647, 8 ), ( 18446744073709551615, 0, 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c1 = c2; END; 
ALTER TABLE v3 RENAME TO v7; 
WITH v8 AS ( SELECT 18446744073709551615 y GROUP BY y ( c2, c1 ) ORDER BY 0 ) SELECT MIN ( c4 ) FROM v8 AS a9 ORDER BY 0; 
SELECT a12.c2 FROM v7 AS a11, v7 AS a12 ORDER BY 18446744073709551615; 
SELECT SUM ( a13.c1 ) FROM v0 AS a13 AS y ORDER BY 0; 
SELECT MAX ( a14.c2 ) FROM v7 AS a14 ORDER BY 0; 
SELECT AVG ( a16.c2 ) FROM v7 AS a15, v0 AS a16 ORDER BY 18446744073709551488; 
SELECT MIN ( a17.c2 ) FROM v0 AS a17 ORDER BY 9223372036854775807; 
SELECT a18.c2 FROM v7 AS a18 ORDER BY 2147483647; 
SELECT a19.c1 FROM v0 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c1 ) FROM v0 AS a20 ORDER BY 2147483647; 
