CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 8, '12345' ), ( 8, 'x' ), ( 10, 'x' ); 
INSERT INTO v3 VALUES ( 18446744073709551615, 127, 10 ), ( 10, 10, 8 ), ( 127, 127, 18446744073709551615 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c5 = ( c2 || c1 || c5 ); END; 
ALTER TABLE v3 RENAME TO v7; 
UPDATE v7 SET c5 = 'v0' WHERE c5 = 8; 
WITH v8 AS ( SELECT 127 y GROUP BY y ( c2, c6 ) ORDER BY 8 ) SELECT MIN ( c1 ) FROM v8 AS a9 ORDER BY 10; 
SELECT a11.c1 FROM v0 AS a11, v7 AS a12 ORDER BY 10; 
SELECT SUM ( a13.c1 ) FROM v0 AS a13 AS y ORDER BY 10; 
SELECT MAX ( a14.c1 ) FROM v0 AS a14 ORDER BY 10; 
SELECT AVG ( a15.c5 ) FROM v7 AS a15, v0 AS a16 ORDER BY 18446744071562067968; 
SELECT MIN ( a17.c5 ) FROM v7 AS a17 ORDER BY 127; 
SELECT a18.c6 FROM v7 AS a18 ORDER BY 127; 
SELECT a19.c5 FROM v7 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c5 ) FROM v7 AS a20 ORDER BY 127; 
