CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 INTEGER NOT NULL CHECK( c1 > c2 ), c3 INTEGER NOT NULL CHECK( c2 > c1 * 4294967295 ), c4 INTEGER NOT NULL CHECK( c1 BETWEEN c2 AND c3 ) ); 
INSERT INTO v0 ( c2, c3, c1, c4 ) VALUES ( 4294967295, 1, 18446744073709551488, 127 ), ( 1, 1, 1, 4294967295 ), ( 1 NOT NULL, 1, 1, 10 ); 
UPDATE v0 SET c2 = 1 WHERE c1 = 1; 
SELECT MIN ( x'68617265' ) FROM v0 AS a5 ORDER BY 1; 
SELECT MAX ( a6.c2 ) FROM v0 AS a6 ORDER BY 18446744073709551488; 
SELECT integrity_check ( a7.c3 ) FROM v0 AS a7 ORDER BY 0; 
SELECT MIN ( a9.c4 ) FROM v0 AS a9 ORDER BY 0; 
SELECT a10.c3 FROM v0 AS a10 ORDER BY 18446744073709518848; 
SELECT SUM ( a11.c1 ) FROM v0 AS a11 ORDER BY 18446744073709518848; 
SELECT a12.c2 FROM v0 AS a12 ORDER BY 1; 
SELECT SUM ( a13.c1 ) FROM v0 AS a13 ORDER BY max ( a13.c2 = 1 ) + 9223372036854775807, min ( a13.c1, avg ( a13.c1 ) ) + 1; 
WITH v14 AS ( WITH v16 ( c17 ) AS ( SELECT 18446744073709551615 ORDER BY 4294967295 ) SELECT 255 y ORDER BY 4294967295 ) SELECT SUM ( c1 ) FROM v14 AS a15 ORDER BY 1; 
