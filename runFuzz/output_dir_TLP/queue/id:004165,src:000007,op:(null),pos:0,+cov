CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 18446744073709518848, 'v1' ), ( 18446744073709518848, 'v0' ), ( 18446744073709518848, 'v1' ); 
INSERT INTO v0 VALUES ( 18446744073709551615, 18446744073709518848, 18446744073709518848 ), ( 18446744073709518848, 18446744073709518848, 18446744073709518848 ), ( 18446744073709518848, 18446744073709518848, 18446744073709518848 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v3 WHERE c1 = c4; END; 
ALTER TABLE v3 RENAME TO v7; 
CREATE TABLE IF NOT EXISTS v8 ( c9 INTEGER PRIMARY KEY, c10 UNIQUE ); 
WITH v11 AS ( SELECT 18446744073709518848 y GROUP BY y ( c1, c4 ) ORDER BY 18446744073709518848 ) SELECT MIN ( c10 ) FROM v11 AS a12 ORDER BY 18446744073709518848; 
SELECT a14.c1 FROM v0 AS a14, v8 AS a15 ORDER BY 18446744073709518848; 
SELECT SUM ( a16.c9 ) FROM v8 AS a16 AS y ORDER BY 18446744073709518848; 
SELECT MAX ( a17.c6 ) FROM v7 AS a17 ORDER BY 2147483647; 
SELECT AVG ( a18.c5 ) FROM v7 AS a18, v0 AS a19 ORDER BY 100; 
SELECT MIN ( a20.c2 ) FROM v0 AS a20 ORDER BY 4294967295; 
SELECT a21.c9 FROM v8 AS a21 ORDER BY 2147483647; 
SELECT a22.c2 FROM v0 AS a22 ORDER BY 1; 
SELECT quick_check ( a23.c1 ) FROM v0 AS a23 ORDER BY 9223372036854775807; 
