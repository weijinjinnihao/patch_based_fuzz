CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, *, c21, c22, c23 ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 'x' ), ( 18446744073709551488, 'v1' ), ( 0, 'v1' ); 
INSERT INTO v3 VALUES ( 18446744073709551488, 0, 18446744073709551488 ), ( 0, 18446744073709551488, 0 ), ( 18446744073709551488, 18446744073709551488, 16 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v0 BEGIN DELETE FROM v0 WHERE c1 = c1; END; 
ALTER TABLE v3 RENAME TO v24; 
UPDATE v24 SET c2 = 'v0' WHERE c13 = 0; 
WITH v25 AS ( SELECT 18446744073709551488 y GROUP BY y ( c2, c1 ) ORDER BY 18446744073709551488 ) SELECT MIN ( c7 ) FROM v25 AS a26 ORDER BY 0; 
SELECT a29.c23 FROM v24 AS a28, v24 AS a29 ORDER BY 18446744073709551488; 
SELECT SUM ( a30.c2 ) FROM v24 AS a30 AS y ORDER BY 18446744073709551488; 
SELECT MAX ( a31.c16 ) FROM v24 AS a31 ORDER BY 0; 
SELECT AVG ( a33.c12 ) FROM v24 AS a32, v24 AS a33 ORDER BY 18446744073709551488; 
SELECT MIN ( a34.c1 ) FROM v0 AS a34 ORDER BY 18446744073709551488; 
SELECT a35.c2 FROM v0 AS a35 ORDER BY 18446744073709551488; 
SELECT a36.c1 FROM v0 AS a36 ORDER BY 1; 
SELECT quick_check ( a37.c2 ) FROM v0 AS a37 ORDER BY 10; 
