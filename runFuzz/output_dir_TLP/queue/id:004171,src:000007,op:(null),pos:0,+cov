CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 255, 'v0' ), ( 255, 'v1' ), ( 2.200000, 't2' ); 
INSERT INTO v0 VALUES ( 255, 255, 255 ), ( 255, 255, 255 ), ( 255, 2.200000, 18446744073709551488 ); 
INSERT INTO v0 SELECT * FROM v3 AS a7 GROUP BY y ( c2, c2 ) ORDER BY 255; 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c1 = c1; END; 
ALTER TABLE v0 RENAME TO v8; 
UPDATE v3 SET c4 = 'c2' WHERE c6 = 255; 
WITH v9 AS ( SELECT 1.250000 y GROUP BY y ( c1, c1 ) ORDER BY 255 ) SELECT MIN ( c1 ) FROM v9 AS a10 ORDER BY 0; 
SELECT a12.c1 FROM v8 AS a12, v3 AS a13 ORDER BY 255; 
SELECT SUM ( a14.c2 ) FROM v8 AS a14 AS y ORDER BY 18446744073709551615; 
SELECT MAX ( a15.c2 ) FROM v3 AS a15 ORDER BY 4294967295; 
SELECT AVG ( a17.c1 ) FROM v3 AS a16, v8 AS a17 ORDER BY 2.200000; 
SELECT MIN ( a18.c1 ) FROM v8 AS a18 ORDER BY 255; 
SELECT a19.c6 FROM v3 AS a19 ORDER BY 255; 
SELECT a20.c2 FROM v8 AS a20 ORDER BY 1; 
SELECT quick_check ( a21.c1 ) FROM v8 AS a21 ORDER BY 18446744073709551615; 
