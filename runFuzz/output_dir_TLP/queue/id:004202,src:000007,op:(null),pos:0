CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 100, 'v0' ), ( 100, 'x' ), ( 100, 'v0' ); 
INSERT INTO v0 VALUES ( 100, 100, 100 ), ( 127, 8, 100 ), ( 100, 100, 8 ) ON CONFLICT ( c2 ) DO UPDATE SET c2 = c1, c1 = y ( c2 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v0 WHERE c4 = c4; END; 
ALTER TABLE v3 RENAME TO v7; 
UPDATE v7 SET c4 = 'v1' WHERE c6 = 100; 
WITH v8 AS ( SELECT 100 y GROUP BY y ( c6, c6 ) ORDER BY 127 ) SELECT MIN ( c5 ) FROM v8 AS a9 ORDER BY 100; 
SELECT a11.c4 FROM v7 AS a11, v7 AS a12 ORDER BY 100; 
SELECT SUM ( a13.c5 ) FROM v7 AS a13 AS y ORDER BY 100; 
SELECT MAX ( a14.c2 ) FROM v0 AS a14 ORDER BY 100; 
SELECT AVG ( a15.c5 ) FROM v7 AS a15, v7 AS a16 ORDER BY 100; 
SELECT MIN ( a17.c6 ) FROM v7 AS a17 ORDER BY 0; 
SELECT a18.c6 FROM v7 AS a18 ORDER BY 100; 
SELECT a19.c5 FROM v7 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c5 ) FROM v7 AS a20 ORDER BY 100; 
