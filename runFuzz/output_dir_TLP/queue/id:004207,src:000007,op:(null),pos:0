CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v3 VALUES ( 9223372036854775807, 'x' ), ( 0, 'v1' ), ( 9223372036854775807, 'x' ); 
INSERT INTO v0 VALUES ( 9223372036854775807, 18446744071562067968, 0 ), ( 0, 4294967295, 9223372036854775807 ), ( 9223372036854775807, 0, 9223372036854775807 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN INSERT INTO v0 ( c1 ) VALUES ( 9223372036854775807 ), ( 18446744071562067968 ), ( 9223372036854775807 ), ( 0 ), ( 18446744073709551615 ); END; 
ALTER TABLE v3 RENAME TO v7; 
UPDATE v7 SET c2 = 'v1' WHERE c2 = 9223372036854775807; 
WITH v8 AS ( SELECT 0 y GROUP BY y ( c5, c2 ) ORDER BY 2147483647 ) SELECT MIN ( c1 ) FROM v8 AS a9 ORDER BY 9223372036854775807; 
SELECT a11.c5 FROM v7 AS a11, v0 AS a12 ORDER BY 9223372036854775807; 
SELECT SUM ( a13.c5 ) FROM v7 AS a13 AS y ORDER BY 10; 
SELECT MAX ( a14.c2 ) FROM v0 AS a14 ORDER BY 9223372036854775807; 
SELECT AVG ( a16.c2 ) FROM v0 AS a15, v7 AS a16 ORDER BY 100; 
SELECT MIN ( a17.c1 ) FROM v7 AS a17 ORDER BY 9223372036854775807; 
SELECT a18.c2 FROM v0 AS a18 ORDER BY 0; 
SELECT a19.c1 FROM v0 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c1 ) FROM v0 AS a20 ORDER BY 9223372036854775807; 
