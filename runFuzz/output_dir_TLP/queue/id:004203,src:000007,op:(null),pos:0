CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6 ); 
INSERT INTO v0 VALUES ( 18446744073709518848, 'v0' ), ( 18446744073709518848, 'x' ), ( 18446744073709551488, 'v0' ); 
INSERT INTO v3 VALUES ( 18446744073709518848, count ( * ) >= 18446744073709518848, 18446744073709518848, 0 ), ( 18446744073709518848, 66, 18446744073709518848 ), ( 18446744073709518848, 18446744073709518848, 18446744073709551488 ); 
CREATE TRIGGER r1 AFTER UPDATE ON v3 BEGIN DELETE FROM v3 WHERE c2 = c2; END; 
ALTER TABLE v3 RENAME TO v7; 
UPDATE v7 SET c5 = 'C' WHERE c6 = 18446744073709518848; 
WITH v8 AS ( SELECT 66 y GROUP BY y ( c1, c6 ) ORDER BY 66 ) SELECT MIN ( c5 ) FROM v8 AS a9 ORDER BY 66; 
SELECT a12.c5 FROM v7 AS a11, v7 AS a12 ORDER BY 18446744073709518848; 
SELECT SUM ( a13.c2 ) FROM v0 AS a13 AS y ORDER BY 55; 
SELECT MAX ( a14.c2 ) FROM v0 AS a14 ORDER BY 18446744073709518848; 
SELECT AVG ( a16.c6 ) FROM v0 AS a15, v7 AS a16 ORDER BY 18446744073709551615; 
SELECT MIN ( a17.c1 ) FROM v0 AS a17 ORDER BY 18446744073709518848; 
SELECT a18.c1 FROM v0 AS a18 ORDER BY 127; 
SELECT a19.c6 FROM v7 AS a19 ORDER BY 1; 
SELECT quick_check ( a20.c1 ) FROM v0 AS a20 ORDER BY 18446744073709518848; 
