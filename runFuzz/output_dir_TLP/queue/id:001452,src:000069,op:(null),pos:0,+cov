CREATE TABLE v0 ( c1 INTEGER PRIMARY KEY, c2 UNIQUE ); 
INSERT INTO v0 VALUES ( 127, 0 ); 
INSERT INTO v0 VALUES ( 127, 0 ); 
INSERT INTO v0 ( c1, c2, c1 ) VALUES ( 127, ( CASE WHEN c2 != 'Ar' THEN 255 ELSE 127 END ), 8 ), ( 127, 0 ), ( 0, 0 ), ( 127, 127 ), ( 0, 0 ); 
CREATE VIRTUAL TABLE v3 USING rtree ( c4, c5, c6, c7, c8 ); 
VALUES ( 0, 18446744073709551488 ) ORDER BY 1; 
UPDATE OR REPLACE v0 SET c2 = 100 WHERE c1 = 0; 
REINDEX; 
SELECT MIN ( a9.c7 ) FROM v3 AS a9, v3 AS a10 ORDER BY 0; 
SELECT SUM ( a11.c1 ) FROM v3 AS a11 ORDER BY 127; 
WITH v0 AS ( SELECT 0 y ORDER BY 0 ) SELECT MIN ( a12.c8 ) FROM v3 AS a12 ORDER BY 18446744073709551488; 
SELECT AVG ( a13.c1 ) FROM v0 AS a13 ORDER BY a13.c1 COLLATE binary; 
SELECT a14.c2 FROM v0 AS a14 ORDER BY 0; 
SELECT a15.c6 FROM v3 AS a15 ORDER BY a15.c6 COLLATE NOCASE; 
SELECT MAX ( a16.c2 ) FROM v0 AS a16 ORDER BY 255; 
SELECT writable_schema ( a17.c6 ) FROM v3 AS a17 ORDER BY 127; 
SELECT MAX ( a19.c7 ) FROM v3 AS a18, v3 AS a19 ORDER BY 127; 
SELECT MIN ( a21.c7 ) FROM v0 AS a20, v3 AS a21 ORDER BY 10; 
